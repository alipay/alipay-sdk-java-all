/*
 * 支付宝开放平台API
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2024-01-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.alipay.v3.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.alipay.v3.JSON;

/**
 * Data
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class Data {
  public static final String SERIALIZED_NAME_ALIPAY_OPEN_ID_LIST = "alipay_open_id_list";
  @SerializedName(SERIALIZED_NAME_ALIPAY_OPEN_ID_LIST)
  private List<String> alipayOpenIdList = null;

  public static final String SERIALIZED_NAME_ALIPAY_USER_ID_LIST = "alipay_user_id_list";
  @SerializedName(SERIALIZED_NAME_ALIPAY_USER_ID_LIST)
  private List<String> alipayUserIdList = null;

  public static final String SERIALIZED_NAME_OPEN_ID_LIST = "open_id_list";
  @SerializedName(SERIALIZED_NAME_OPEN_ID_LIST)
  private List<String> openIdList = null;

  public static final String SERIALIZED_NAME_USER_ID_LIST = "user_id_list";
  @SerializedName(SERIALIZED_NAME_USER_ID_LIST)
  private List<String> userIdList = null;

  public Data() { 
  }

  public Data alipayOpenIdList(List<String> alipayOpenIdList) {
    
    this.alipayOpenIdList = alipayOpenIdList;
    return this;
  }

  public Data addAlipayOpenIdListItem(String alipayOpenIdListItem) {
    if (this.alipayOpenIdList == null) {
      this.alipayOpenIdList = new ArrayList<>();
    }
    this.alipayOpenIdList.add(alipayOpenIdListItem);
    return this;
  }

   /**
   * 支付宝用户唯一标识列表
   * @return alipayOpenIdList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "支付宝用户唯一标识列表")

  public List<String> getAlipayOpenIdList() {
    return alipayOpenIdList;
  }


  public void setAlipayOpenIdList(List<String> alipayOpenIdList) {
    this.alipayOpenIdList = alipayOpenIdList;
  }


  public Data alipayUserIdList(List<String> alipayUserIdList) {
    
    this.alipayUserIdList = alipayUserIdList;
    return this;
  }

  public Data addAlipayUserIdListItem(String alipayUserIdListItem) {
    if (this.alipayUserIdList == null) {
      this.alipayUserIdList = new ArrayList<>();
    }
    this.alipayUserIdList.add(alipayUserIdListItem);
    return this;
  }

   /**
   * 对应userIdList，标准Alipay UserId列表
   * @return alipayUserIdList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "对应userIdList，标准Alipay UserId列表")

  public List<String> getAlipayUserIdList() {
    return alipayUserIdList;
  }


  public void setAlipayUserIdList(List<String> alipayUserIdList) {
    this.alipayUserIdList = alipayUserIdList;
  }


  public Data openIdList(List<String> openIdList) {
    
    this.openIdList = openIdList;
    return this;
  }

  public Data addOpenIdListItem(String openIdListItem) {
    if (this.openIdList == null) {
      this.openIdList = new ArrayList<>();
    }
    this.openIdList.add(openIdListItem);
    return this;
  }

   /**
   * 支付宝用户唯一标识列表
   * @return openIdList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "支付宝用户唯一标识列表")

  public List<String> getOpenIdList() {
    return openIdList;
  }


  public void setOpenIdList(List<String> openIdList) {
    this.openIdList = openIdList;
  }


  public Data userIdList(List<String> userIdList) {
    
    this.userIdList = userIdList;
    return this;
  }

  public Data addUserIdListItem(String userIdListItem) {
    if (this.userIdList == null) {
      this.userIdList = new ArrayList<>();
    }
    this.userIdList.add(userIdListItem);
    return this;
  }

   /**
   * 用户id列表
   * @return userIdList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "用户id列表")

  public List<String> getUserIdList() {
    return userIdList;
  }


  public void setUserIdList(List<String> userIdList) {
    this.userIdList = userIdList;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Data data = (Data) o;
    return Objects.equals(this.alipayOpenIdList, data.alipayOpenIdList) &&
        Objects.equals(this.alipayUserIdList, data.alipayUserIdList) &&
        Objects.equals(this.openIdList, data.openIdList) &&
        Objects.equals(this.userIdList, data.userIdList);
  }

  @Override
  public int hashCode() {
    return Objects.hash(alipayOpenIdList, alipayUserIdList, openIdList, userIdList);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Data {\n");
    sb.append("    alipayOpenIdList: ").append(toIndentedString(alipayOpenIdList)).append("\n");
    sb.append("    alipayUserIdList: ").append(toIndentedString(alipayUserIdList)).append("\n");
    sb.append("    openIdList: ").append(toIndentedString(openIdList)).append("\n");
    sb.append("    userIdList: ").append(toIndentedString(userIdList)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("alipay_open_id_list");
    openapiFields.add("alipay_user_id_list");
    openapiFields.add("open_id_list");
    openapiFields.add("user_id_list");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to Data
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (Data.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in Data is not found in the empty JSON string", Data.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!Data.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Data` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      // ensure the json data is an array
      if (jsonObj.get("alipay_open_id_list") != null && !jsonObj.get("alipay_open_id_list").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `alipay_open_id_list` to be an array in the JSON string but got `%s`", jsonObj.get("alipay_open_id_list").toString()));
      }
      // ensure the json data is an array
      if (jsonObj.get("alipay_user_id_list") != null && !jsonObj.get("alipay_user_id_list").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `alipay_user_id_list` to be an array in the JSON string but got `%s`", jsonObj.get("alipay_user_id_list").toString()));
      }
      // ensure the json data is an array
      if (jsonObj.get("open_id_list") != null && !jsonObj.get("open_id_list").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `open_id_list` to be an array in the JSON string but got `%s`", jsonObj.get("open_id_list").toString()));
      }
      // ensure the json data is an array
      if (jsonObj.get("user_id_list") != null && !jsonObj.get("user_id_list").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `user_id_list` to be an array in the JSON string but got `%s`", jsonObj.get("user_id_list").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Data.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Data' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Data> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Data.class));

       return (TypeAdapter<T>) new TypeAdapter<Data>() {
           @Override
           public void write(JsonWriter out, Data value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Data read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of Data given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of Data
  * @throws IOException if the JSON string is invalid with respect to Data
  */
  public static Data fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Data.class);
  }

 /**
  * Convert an instance of Data to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

