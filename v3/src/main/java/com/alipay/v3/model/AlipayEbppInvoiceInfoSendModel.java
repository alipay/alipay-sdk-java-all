/*
 * 支付宝开放平台API
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2024-01-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.alipay.v3.model;

import java.util.Objects;
import java.util.Arrays;
import com.alipay.v3.model.InvoiceSendOpenModel;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.alipay.v3.JSON;

/**
 * AlipayEbppInvoiceInfoSendModel
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class AlipayEbppInvoiceInfoSendModel {
  public static final String SERIALIZED_NAME_INVOICE_INFO_LIST = "invoice_info_list";
  @SerializedName(SERIALIZED_NAME_INVOICE_INFO_LIST)
  private List<InvoiceSendOpenModel> invoiceInfoList = null;

  public static final String SERIALIZED_NAME_M_SHORT_NAME = "m_short_name";
  @SerializedName(SERIALIZED_NAME_M_SHORT_NAME)
  private String mShortName;

  public static final String SERIALIZED_NAME_SUB_M_SHORT_NAME = "sub_m_short_name";
  @SerializedName(SERIALIZED_NAME_SUB_M_SHORT_NAME)
  private String subMShortName;

  public AlipayEbppInvoiceInfoSendModel() { 
  }

  public AlipayEbppInvoiceInfoSendModel invoiceInfoList(List<InvoiceSendOpenModel> invoiceInfoList) {
    
    this.invoiceInfoList = invoiceInfoList;
    return this;
  }

  public AlipayEbppInvoiceInfoSendModel addInvoiceInfoListItem(InvoiceSendOpenModel invoiceInfoListItem) {
    if (this.invoiceInfoList == null) {
      this.invoiceInfoList = new ArrayList<>();
    }
    this.invoiceInfoList.add(invoiceInfoListItem);
    return this;
  }

   /**
   * 发票信息列表
   * @return invoiceInfoList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "发票信息列表")

  public List<InvoiceSendOpenModel> getInvoiceInfoList() {
    return invoiceInfoList;
  }


  public void setInvoiceInfoList(List<InvoiceSendOpenModel> invoiceInfoList) {
    this.invoiceInfoList = invoiceInfoList;
  }


  public AlipayEbppInvoiceInfoSendModel mShortName(String mShortName) {
    
    this.mShortName = mShortName;
    return this;
  }

   /**
   * 开票商户品牌简称，与商户入驻时的品牌简称保持一致。
   * @return mShortName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "XSD", value = "开票商户品牌简称，与商户入驻时的品牌简称保持一致。")

  public String getmShortName() {
    return mShortName;
  }


  public void setmShortName(String mShortName) {
    this.mShortName = mShortName;
  }


  public AlipayEbppInvoiceInfoSendModel subMShortName(String subMShortName) {
    
    this.subMShortName = subMShortName;
    return this;
  }

   /**
   * 开票商户门店简称，与商户入驻时的门店简称保持一致。
   * @return subMShortName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "XSD_HL", value = "开票商户门店简称，与商户入驻时的门店简称保持一致。")

  public String getSubMShortName() {
    return subMShortName;
  }


  public void setSubMShortName(String subMShortName) {
    this.subMShortName = subMShortName;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AlipayEbppInvoiceInfoSendModel alipayEbppInvoiceInfoSendModel = (AlipayEbppInvoiceInfoSendModel) o;
    return Objects.equals(this.invoiceInfoList, alipayEbppInvoiceInfoSendModel.invoiceInfoList) &&
        Objects.equals(this.mShortName, alipayEbppInvoiceInfoSendModel.mShortName) &&
        Objects.equals(this.subMShortName, alipayEbppInvoiceInfoSendModel.subMShortName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(invoiceInfoList, mShortName, subMShortName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AlipayEbppInvoiceInfoSendModel {\n");
    sb.append("    invoiceInfoList: ").append(toIndentedString(invoiceInfoList)).append("\n");
    sb.append("    mShortName: ").append(toIndentedString(mShortName)).append("\n");
    sb.append("    subMShortName: ").append(toIndentedString(subMShortName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("invoice_info_list");
    openapiFields.add("m_short_name");
    openapiFields.add("sub_m_short_name");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to AlipayEbppInvoiceInfoSendModel
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (AlipayEbppInvoiceInfoSendModel.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in AlipayEbppInvoiceInfoSendModel is not found in the empty JSON string", AlipayEbppInvoiceInfoSendModel.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!AlipayEbppInvoiceInfoSendModel.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AlipayEbppInvoiceInfoSendModel` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      JsonArray jsonArrayinvoiceInfoList = jsonObj.getAsJsonArray("invoice_info_list");
      if (jsonArrayinvoiceInfoList != null) {
        // ensure the json data is an array
        if (!jsonObj.get("invoice_info_list").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `invoice_info_list` to be an array in the JSON string but got `%s`", jsonObj.get("invoice_info_list").toString()));
        }

        // validate the optional field `invoice_info_list` (array)
        for (int i = 0; i < jsonArrayinvoiceInfoList.size(); i++) {
          InvoiceSendOpenModel.validateJsonObject(jsonArrayinvoiceInfoList.get(i).getAsJsonObject());
        };
      }
      if (jsonObj.get("m_short_name") != null && !jsonObj.get("m_short_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `m_short_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("m_short_name").toString()));
      }
      if (jsonObj.get("sub_m_short_name") != null && !jsonObj.get("sub_m_short_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sub_m_short_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sub_m_short_name").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AlipayEbppInvoiceInfoSendModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AlipayEbppInvoiceInfoSendModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AlipayEbppInvoiceInfoSendModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AlipayEbppInvoiceInfoSendModel.class));

       return (TypeAdapter<T>) new TypeAdapter<AlipayEbppInvoiceInfoSendModel>() {
           @Override
           public void write(JsonWriter out, AlipayEbppInvoiceInfoSendModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AlipayEbppInvoiceInfoSendModel read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AlipayEbppInvoiceInfoSendModel given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AlipayEbppInvoiceInfoSendModel
  * @throws IOException if the JSON string is invalid with respect to AlipayEbppInvoiceInfoSendModel
  */
  public static AlipayEbppInvoiceInfoSendModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AlipayEbppInvoiceInfoSendModel.class);
  }

 /**
  * Convert an instance of AlipayEbppInvoiceInfoSendModel to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

