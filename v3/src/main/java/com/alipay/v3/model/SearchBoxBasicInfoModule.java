/*
 * 支付宝开放平台API
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-03-05
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.alipay.v3.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.alipay.v3.JSON;

/**
 * SearchBoxBasicInfoModule
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SearchBoxBasicInfoModule {
  public static final String SERIALIZED_NAME_APPLY_NO = "apply_no";
  @SerializedName(SERIALIZED_NAME_APPLY_NO)
  private String applyNo;

  public static final String SERIALIZED_NAME_BOX_DESC = "box_desc";
  @SerializedName(SERIALIZED_NAME_BOX_DESC)
  private String boxDesc;

  public static final String SERIALIZED_NAME_FAIL_REASON = "fail_reason";
  @SerializedName(SERIALIZED_NAME_FAIL_REASON)
  private String failReason;

  public static final String SERIALIZED_NAME_GMT_MODIFIED = "gmt_modified";
  @SerializedName(SERIALIZED_NAME_GMT_MODIFIED)
  private String gmtModified;

  public static final String SERIALIZED_NAME_LATEST_AUDIT_BOX_DESC = "latest_audit_box_desc";
  @SerializedName(SERIALIZED_NAME_LATEST_AUDIT_BOX_DESC)
  private String latestAuditBoxDesc;

  public static final String SERIALIZED_NAME_MODULE_ID = "module_id";
  @SerializedName(SERIALIZED_NAME_MODULE_ID)
  private String moduleId;

  public static final String SERIALIZED_NAME_MODULE_TYPE = "module_type";
  @SerializedName(SERIALIZED_NAME_MODULE_TYPE)
  private String moduleType;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public SearchBoxBasicInfoModule() { 
  }

  public SearchBoxBasicInfoModule applyNo(String applyNo) {
    
    this.applyNo = applyNo;
    return this;
  }

   /**
   * 申请单号
   * @return applyNo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2022010700503000000000487728", value = "申请单号")

  public String getApplyNo() {
    return applyNo;
  }


  public void setApplyNo(String applyNo) {
    this.applyNo = applyNo;
  }


  public SearchBoxBasicInfoModule boxDesc(String boxDesc) {
    
    this.boxDesc = boxDesc;
    return this;
  }

   /**
   * 介绍，已生效的数据
   * @return boxDesc
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "品牌介绍", value = "介绍，已生效的数据")

  public String getBoxDesc() {
    return boxDesc;
  }


  public void setBoxDesc(String boxDesc) {
    this.boxDesc = boxDesc;
  }


  public SearchBoxBasicInfoModule failReason(String failReason) {
    
    this.failReason = failReason;
    return this;
  }

   /**
   * 审核失败原因
   * @return failReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "品牌触发词必须完整包含品牌名称且不得使用泛词，建议调整。", value = "审核失败原因")

  public String getFailReason() {
    return failReason;
  }


  public void setFailReason(String failReason) {
    this.failReason = failReason;
  }


  public SearchBoxBasicInfoModule gmtModified(String gmtModified) {
    
    this.gmtModified = gmtModified;
    return this;
  }

   /**
   * 修改时间
   * @return gmtModified
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2022-01-07 18:22:04", value = "修改时间")

  public String getGmtModified() {
    return gmtModified;
  }


  public void setGmtModified(String gmtModified) {
    this.gmtModified = gmtModified;
  }


  public SearchBoxBasicInfoModule latestAuditBoxDesc(String latestAuditBoxDesc) {
    
    this.latestAuditBoxDesc = latestAuditBoxDesc;
    return this;
  }

   /**
   * 介绍，最近一次审核内容
   * @return latestAuditBoxDesc
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "品牌介绍", value = "介绍，最近一次审核内容")

  public String getLatestAuditBoxDesc() {
    return latestAuditBoxDesc;
  }


  public void setLatestAuditBoxDesc(String latestAuditBoxDesc) {
    this.latestAuditBoxDesc = latestAuditBoxDesc;
  }


  public SearchBoxBasicInfoModule moduleId(String moduleId) {
    
    this.moduleId = moduleId;
    return this;
  }

   /**
   * 模块配置ID
   * @return moduleId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "20220308000000168465", value = "模块配置ID")

  public String getModuleId() {
    return moduleId;
  }


  public void setModuleId(String moduleId) {
    this.moduleId = moduleId;
  }


  public SearchBoxBasicInfoModule moduleType(String moduleType) {
    
    this.moduleType = moduleType;
    return this;
  }

   /**
   * 搜索直达模块类型
   * @return moduleType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "BOX_EXCLUSIVE_BASE", value = "搜索直达模块类型")

  public String getModuleType() {
    return moduleType;
  }


  public void setModuleType(String moduleType) {
    this.moduleType = moduleType;
  }


  public SearchBoxBasicInfoModule status(String status) {
    
    this.status = status;
    return this;
  }

   /**
   * 状态，INITIAL-初始/AUDIT-审核中/CANCEL-已取消/ONLINE-已上架/REJECT-驳回/OFFLINE-已下架/EXPIRE-已失效
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "AUDIT", value = "状态，INITIAL-初始/AUDIT-审核中/CANCEL-已取消/ONLINE-已上架/REJECT-驳回/OFFLINE-已下架/EXPIRE-已失效")

  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    this.status = status;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the SearchBoxBasicInfoModule instance itself
   */
  public SearchBoxBasicInfoModule putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SearchBoxBasicInfoModule searchBoxBasicInfoModule = (SearchBoxBasicInfoModule) o;
    return Objects.equals(this.applyNo, searchBoxBasicInfoModule.applyNo) &&
        Objects.equals(this.boxDesc, searchBoxBasicInfoModule.boxDesc) &&
        Objects.equals(this.failReason, searchBoxBasicInfoModule.failReason) &&
        Objects.equals(this.gmtModified, searchBoxBasicInfoModule.gmtModified) &&
        Objects.equals(this.latestAuditBoxDesc, searchBoxBasicInfoModule.latestAuditBoxDesc) &&
        Objects.equals(this.moduleId, searchBoxBasicInfoModule.moduleId) &&
        Objects.equals(this.moduleType, searchBoxBasicInfoModule.moduleType) &&
        Objects.equals(this.status, searchBoxBasicInfoModule.status)&&
        Objects.equals(this.additionalProperties, searchBoxBasicInfoModule.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(applyNo, boxDesc, failReason, gmtModified, latestAuditBoxDesc, moduleId, moduleType, status, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SearchBoxBasicInfoModule {\n");
    sb.append("    applyNo: ").append(toIndentedString(applyNo)).append("\n");
    sb.append("    boxDesc: ").append(toIndentedString(boxDesc)).append("\n");
    sb.append("    failReason: ").append(toIndentedString(failReason)).append("\n");
    sb.append("    gmtModified: ").append(toIndentedString(gmtModified)).append("\n");
    sb.append("    latestAuditBoxDesc: ").append(toIndentedString(latestAuditBoxDesc)).append("\n");
    sb.append("    moduleId: ").append(toIndentedString(moduleId)).append("\n");
    sb.append("    moduleType: ").append(toIndentedString(moduleType)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("apply_no");
    openapiFields.add("box_desc");
    openapiFields.add("fail_reason");
    openapiFields.add("gmt_modified");
    openapiFields.add("latest_audit_box_desc");
    openapiFields.add("module_id");
    openapiFields.add("module_type");
    openapiFields.add("status");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to SearchBoxBasicInfoModule
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (SearchBoxBasicInfoModule.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in SearchBoxBasicInfoModule is not found in the empty JSON string", SearchBoxBasicInfoModule.openapiRequiredFields.toString()));
        }
      }
      if (jsonObj.get("apply_no") != null && !jsonObj.get("apply_no").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `apply_no` to be a primitive type in the JSON string but got `%s`", jsonObj.get("apply_no").toString()));
      }
      if (jsonObj.get("box_desc") != null && !jsonObj.get("box_desc").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `box_desc` to be a primitive type in the JSON string but got `%s`", jsonObj.get("box_desc").toString()));
      }
      if (jsonObj.get("fail_reason") != null && !jsonObj.get("fail_reason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fail_reason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fail_reason").toString()));
      }
      if (jsonObj.get("gmt_modified") != null && !jsonObj.get("gmt_modified").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gmt_modified` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gmt_modified").toString()));
      }
      if (jsonObj.get("latest_audit_box_desc") != null && !jsonObj.get("latest_audit_box_desc").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `latest_audit_box_desc` to be a primitive type in the JSON string but got `%s`", jsonObj.get("latest_audit_box_desc").toString()));
      }
      if (jsonObj.get("module_id") != null && !jsonObj.get("module_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `module_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("module_id").toString()));
      }
      if (jsonObj.get("module_type") != null && !jsonObj.get("module_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `module_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("module_type").toString()));
      }
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SearchBoxBasicInfoModule.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SearchBoxBasicInfoModule' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SearchBoxBasicInfoModule> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SearchBoxBasicInfoModule.class));

       return (TypeAdapter<T>) new TypeAdapter<SearchBoxBasicInfoModule>() {
           @Override
           public void write(JsonWriter out, SearchBoxBasicInfoModule value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public SearchBoxBasicInfoModule read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             SearchBoxBasicInfoModule instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else { // non-primitive type
                   instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of SearchBoxBasicInfoModule given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of SearchBoxBasicInfoModule
  * @throws IOException if the JSON string is invalid with respect to SearchBoxBasicInfoModule
  */
  public static SearchBoxBasicInfoModule fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SearchBoxBasicInfoModule.class);
  }

 /**
  * Convert an instance of SearchBoxBasicInfoModule to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

