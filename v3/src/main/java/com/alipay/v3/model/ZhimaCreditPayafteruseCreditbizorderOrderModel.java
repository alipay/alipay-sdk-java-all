/*
 * 支付宝开放平台API
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.alipay.v3.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.alipay.v3.JSON;

/**
 * ZhimaCreditPayafteruseCreditbizorderOrderModel
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ZhimaCreditPayafteruseCreditbizorderOrderModel {
  public static final String SERIALIZED_NAME_AMOUNT_TYPE = "amount_type";
  @SerializedName(SERIALIZED_NAME_AMOUNT_TYPE)
  private String amountType;

  public static final String SERIALIZED_NAME_BODY = "body";
  @SerializedName(SERIALIZED_NAME_BODY)
  private String body;

  public static final String SERIALIZED_NAME_CATEGORY_ID = "category_id";
  @SerializedName(SERIALIZED_NAME_CATEGORY_ID)
  private String categoryId;

  public static final String SERIALIZED_NAME_COMMERCIAL_SUB_MODE = "commercial_sub_mode";
  @SerializedName(SERIALIZED_NAME_COMMERCIAL_SUB_MODE)
  private String commercialSubMode;

  public static final String SERIALIZED_NAME_CREDIT_AGREEMENT_ID = "credit_agreement_id";
  @SerializedName(SERIALIZED_NAME_CREDIT_AGREEMENT_ID)
  private String creditAgreementId;

  public static final String SERIALIZED_NAME_CREDIT_COMMERCIAL_MODE = "credit_commercial_mode";
  @SerializedName(SERIALIZED_NAME_CREDIT_COMMERCIAL_MODE)
  private String creditCommercialMode;

  public static final String SERIALIZED_NAME_EXTEND_PARAMS = "extend_params";
  @SerializedName(SERIALIZED_NAME_EXTEND_PARAMS)
  private String extendParams;

  public static final String SERIALIZED_NAME_ORDER_AMOUNT = "order_amount";
  @SerializedName(SERIALIZED_NAME_ORDER_AMOUNT)
  private String orderAmount;

  public static final String SERIALIZED_NAME_OUT_ORDER_NO = "out_order_no";
  @SerializedName(SERIALIZED_NAME_OUT_ORDER_NO)
  private String outOrderNo;

  public static final String SERIALIZED_NAME_PAYMENT_TOTAL_TIMES = "payment_total_times";
  @SerializedName(SERIALIZED_NAME_PAYMENT_TOTAL_TIMES)
  private String paymentTotalTimes;

  public static final String SERIALIZED_NAME_PRODUCT_CODE = "product_code";
  @SerializedName(SERIALIZED_NAME_PRODUCT_CODE)
  private String productCode;

  public static final String SERIALIZED_NAME_STAGE_PERIOD_TYPE = "stage_period_type";
  @SerializedName(SERIALIZED_NAME_STAGE_PERIOD_TYPE)
  private String stagePeriodType;

  public static final String SERIALIZED_NAME_SUBJECT = "subject";
  @SerializedName(SERIALIZED_NAME_SUBJECT)
  private String subject;

  public ZhimaCreditPayafteruseCreditbizorderOrderModel() { 
  }

  public ZhimaCreditPayafteruseCreditbizorderOrderModel amountType(String amountType) {
    
    this.amountType = amountType;
    return this;
  }

   /**
   * 只有当传递了order_amount时，该参数才有意义； 1）该参数不传时，默认为ORDER_AMOUNT。 2）传ORDER_AMOUNT时，表示order_amount传入的金额为后付金额，在发起扣款时，最大扣款支付金额为order_amount传入的值（取值单位为元）； 3）传RISK_AMOUNT时，表示order_amount传入的金额为风险预估金额，在发起扣款时，最大扣款支付金额为商户签约时约定的上限额度（取值单位为元）。
   * @return amountType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "RISK_AMOUNT", value = "只有当传递了order_amount时，该参数才有意义； 1）该参数不传时，默认为ORDER_AMOUNT。 2）传ORDER_AMOUNT时，表示order_amount传入的金额为后付金额，在发起扣款时，最大扣款支付金额为order_amount传入的值（取值单位为元）； 3）传RISK_AMOUNT时，表示order_amount传入的金额为风险预估金额，在发起扣款时，最大扣款支付金额为商户签约时约定的上限额度（取值单位为元）。")

  public String getAmountType() {
    return amountType;
  }


  public void setAmountType(String amountType) {
    this.amountType = amountType;
  }


  public ZhimaCreditPayafteruseCreditbizorderOrderModel body(String body) {
    
    this.body = body;
    return this;
  }

   /**
   * 订单描述
   * @return body
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Iphone6 16G", value = "订单描述")

  public String getBody() {
    return body;
  }


  public void setBody(String body) {
    this.body = body;
  }


  public ZhimaCreditPayafteruseCreditbizorderOrderModel categoryId(String categoryId) {
    
    this.categoryId = categoryId;
    return this;
  }

   /**
   * 芝麻外部类目，芝麻先享接入无差异化风控诉求可不传
   * @return categoryId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "credit_pay_after_use", value = "芝麻外部类目，芝麻先享接入无差异化风控诉求可不传")

  public String getCategoryId() {
    return categoryId;
  }


  public void setCategoryId(String categoryId) {
    this.categoryId = categoryId;
  }


  public ZhimaCreditPayafteruseCreditbizorderOrderModel commercialSubMode(String commercialSubMode) {
    
    this.commercialSubMode = commercialSubMode;
    return this;
  }

   /**
   * 业务子模式。默认的单次付模式无需传入，阶段付模式传入以区分是分次还是分期子模式。
   * @return commercialSubMode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "STAGE_TIMES_PAYMENT", value = "业务子模式。默认的单次付模式无需传入，阶段付模式传入以区分是分次还是分期子模式。")

  public String getCommercialSubMode() {
    return commercialSubMode;
  }


  public void setCommercialSubMode(String commercialSubMode) {
    this.commercialSubMode = commercialSubMode;
  }


  public ZhimaCreditPayafteruseCreditbizorderOrderModel creditAgreementId(String creditAgreementId) {
    
    this.creditAgreementId = creditAgreementId;
    return this;
  }

   /**
   * 芝麻开通协议号
   * @return creditAgreementId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "ZMOP99202011240100520025162811", value = "芝麻开通协议号")

  public String getCreditAgreementId() {
    return creditAgreementId;
  }


  public void setCreditAgreementId(String creditAgreementId) {
    this.creditAgreementId = creditAgreementId;
  }


  public ZhimaCreditPayafteruseCreditbizorderOrderModel creditCommercialMode(String creditCommercialMode) {
    
    this.creditCommercialMode = creditCommercialMode;
    return this;
  }

   /**
   * 信用业务模式，不填默认为单次扣款模式。阶段付模式为STAGE_PAYMENT，其它模式请根据对应的技术支持文档传入
   * @return creditCommercialMode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "STAGE_PAYMENT", value = "信用业务模式，不填默认为单次扣款模式。阶段付模式为STAGE_PAYMENT，其它模式请根据对应的技术支持文档传入")

  public String getCreditCommercialMode() {
    return creditCommercialMode;
  }


  public void setCreditCommercialMode(String creditCommercialMode) {
    this.creditCommercialMode = creditCommercialMode;
  }


  public ZhimaCreditPayafteruseCreditbizorderOrderModel extendParams(String extendParams) {
    
    this.extendParams = extendParams;
    return this;
  }

   /**
   * 业务扩展参数
   * @return extendParams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "{\"key\":\"value\"}", value = "业务扩展参数")

  public String getExtendParams() {
    return extendParams;
  }


  public void setExtendParams(String extendParams) {
    this.extendParams = extendParams;
  }


  public ZhimaCreditPayafteruseCreditbizorderOrderModel orderAmount(String orderAmount) {
    
    this.orderAmount = orderAmount;
    return this;
  }

   /**
   * 订单金额，该金额为当前订单扣款的累计最大额度。例如，下单时传递10.00，则扣款时最大支付金额为10元。若该参数不传，则默认使用商户签约时约定的上限额度。芝麻速办业务场景（极速回收、极速返利、极速退款等）商户请求时，order_amount必传，且amount_type类型需传递ORDER_AMOUNT。
   * @return orderAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "88.66", value = "订单金额，该金额为当前订单扣款的累计最大额度。例如，下单时传递10.00，则扣款时最大支付金额为10元。若该参数不传，则默认使用商户签约时约定的上限额度。芝麻速办业务场景（极速回收、极速返利、极速退款等）商户请求时，order_amount必传，且amount_type类型需传递ORDER_AMOUNT。")

  public String getOrderAmount() {
    return orderAmount;
  }


  public void setOrderAmount(String orderAmount) {
    this.orderAmount = orderAmount;
  }


  public ZhimaCreditPayafteruseCreditbizorderOrderModel outOrderNo(String outOrderNo) {
    
    this.outOrderNo = outOrderNo;
    return this;
  }

   /**
   * 商户外部订单号，保证不重复
   * @return outOrderNo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "out00120312323232", value = "商户外部订单号，保证不重复")

  public String getOutOrderNo() {
    return outOrderNo;
  }


  public void setOutOrderNo(String outOrderNo) {
    this.outOrderNo = outOrderNo;
  }


  public ZhimaCreditPayafteruseCreditbizorderOrderModel paymentTotalTimes(String paymentTotalTimes) {
    
    this.paymentTotalTimes = paymentTotalTimes;
    return this;
  }

   /**
   * 多阶段订单次数，业务模式为阶段付模式下时需传入
   * @return paymentTotalTimes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "12", value = "多阶段订单次数，业务模式为阶段付模式下时需传入")

  public String getPaymentTotalTimes() {
    return paymentTotalTimes;
  }


  public void setPaymentTotalTimes(String paymentTotalTimes) {
    this.paymentTotalTimes = paymentTotalTimes;
  }


  public ZhimaCreditPayafteruseCreditbizorderOrderModel productCode(String productCode) {
    
    this.productCode = productCode;
    return this;
  }

   /**
   * 产品码，不传默认为CREDIT_PAY_AFTER_USE
   * @return productCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "CREDIT_PAY_AFTER_USE", value = "产品码，不传默认为CREDIT_PAY_AFTER_USE")

  public String getProductCode() {
    return productCode;
  }


  public void setProductCode(String productCode) {
    this.productCode = productCode;
  }


  public ZhimaCreditPayafteruseCreditbizorderOrderModel stagePeriodType(String stagePeriodType) {
    
    this.stagePeriodType = stagePeriodType;
    return this;
  }

   /**
   * 阶段付分期类型。阶段付模式，且子业务模式为分期模式下需要传入，分次不需要
   * @return stagePeriodType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "MONTH", value = "阶段付分期类型。阶段付模式，且子业务模式为分期模式下需要传入，分次不需要")

  public String getStagePeriodType() {
    return stagePeriodType;
  }


  public void setStagePeriodType(String stagePeriodType) {
    this.stagePeriodType = stagePeriodType;
  }


  public ZhimaCreditPayafteruseCreditbizorderOrderModel subject(String subject) {
    
    this.subject = subject;
    return this;
  }

   /**
   * 订单标题。 注意：不可使用特殊字符，如 /，&#x3D;，&amp; 等。
   * @return subject
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Iphone6 16G", value = "订单标题。 注意：不可使用特殊字符，如 /，=，& 等。")

  public String getSubject() {
    return subject;
  }


  public void setSubject(String subject) {
    this.subject = subject;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the ZhimaCreditPayafteruseCreditbizorderOrderModel instance itself
   */
  public ZhimaCreditPayafteruseCreditbizorderOrderModel putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ZhimaCreditPayafteruseCreditbizorderOrderModel zhimaCreditPayafteruseCreditbizorderOrderModel = (ZhimaCreditPayafteruseCreditbizorderOrderModel) o;
    return Objects.equals(this.amountType, zhimaCreditPayafteruseCreditbizorderOrderModel.amountType) &&
        Objects.equals(this.body, zhimaCreditPayafteruseCreditbizorderOrderModel.body) &&
        Objects.equals(this.categoryId, zhimaCreditPayafteruseCreditbizorderOrderModel.categoryId) &&
        Objects.equals(this.commercialSubMode, zhimaCreditPayafteruseCreditbizorderOrderModel.commercialSubMode) &&
        Objects.equals(this.creditAgreementId, zhimaCreditPayafteruseCreditbizorderOrderModel.creditAgreementId) &&
        Objects.equals(this.creditCommercialMode, zhimaCreditPayafteruseCreditbizorderOrderModel.creditCommercialMode) &&
        Objects.equals(this.extendParams, zhimaCreditPayafteruseCreditbizorderOrderModel.extendParams) &&
        Objects.equals(this.orderAmount, zhimaCreditPayafteruseCreditbizorderOrderModel.orderAmount) &&
        Objects.equals(this.outOrderNo, zhimaCreditPayafteruseCreditbizorderOrderModel.outOrderNo) &&
        Objects.equals(this.paymentTotalTimes, zhimaCreditPayafteruseCreditbizorderOrderModel.paymentTotalTimes) &&
        Objects.equals(this.productCode, zhimaCreditPayafteruseCreditbizorderOrderModel.productCode) &&
        Objects.equals(this.stagePeriodType, zhimaCreditPayafteruseCreditbizorderOrderModel.stagePeriodType) &&
        Objects.equals(this.subject, zhimaCreditPayafteruseCreditbizorderOrderModel.subject)&&
        Objects.equals(this.additionalProperties, zhimaCreditPayafteruseCreditbizorderOrderModel.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(amountType, body, categoryId, commercialSubMode, creditAgreementId, creditCommercialMode, extendParams, orderAmount, outOrderNo, paymentTotalTimes, productCode, stagePeriodType, subject, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ZhimaCreditPayafteruseCreditbizorderOrderModel {\n");
    sb.append("    amountType: ").append(toIndentedString(amountType)).append("\n");
    sb.append("    body: ").append(toIndentedString(body)).append("\n");
    sb.append("    categoryId: ").append(toIndentedString(categoryId)).append("\n");
    sb.append("    commercialSubMode: ").append(toIndentedString(commercialSubMode)).append("\n");
    sb.append("    creditAgreementId: ").append(toIndentedString(creditAgreementId)).append("\n");
    sb.append("    creditCommercialMode: ").append(toIndentedString(creditCommercialMode)).append("\n");
    sb.append("    extendParams: ").append(toIndentedString(extendParams)).append("\n");
    sb.append("    orderAmount: ").append(toIndentedString(orderAmount)).append("\n");
    sb.append("    outOrderNo: ").append(toIndentedString(outOrderNo)).append("\n");
    sb.append("    paymentTotalTimes: ").append(toIndentedString(paymentTotalTimes)).append("\n");
    sb.append("    productCode: ").append(toIndentedString(productCode)).append("\n");
    sb.append("    stagePeriodType: ").append(toIndentedString(stagePeriodType)).append("\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("amount_type");
    openapiFields.add("body");
    openapiFields.add("category_id");
    openapiFields.add("commercial_sub_mode");
    openapiFields.add("credit_agreement_id");
    openapiFields.add("credit_commercial_mode");
    openapiFields.add("extend_params");
    openapiFields.add("order_amount");
    openapiFields.add("out_order_no");
    openapiFields.add("payment_total_times");
    openapiFields.add("product_code");
    openapiFields.add("stage_period_type");
    openapiFields.add("subject");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ZhimaCreditPayafteruseCreditbizorderOrderModel
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (ZhimaCreditPayafteruseCreditbizorderOrderModel.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in ZhimaCreditPayafteruseCreditbizorderOrderModel is not found in the empty JSON string", ZhimaCreditPayafteruseCreditbizorderOrderModel.openapiRequiredFields.toString()));
        }
      }
      if (jsonObj.get("amount_type") != null && !jsonObj.get("amount_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `amount_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("amount_type").toString()));
      }
      if (jsonObj.get("body") != null && !jsonObj.get("body").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `body` to be a primitive type in the JSON string but got `%s`", jsonObj.get("body").toString()));
      }
      if (jsonObj.get("category_id") != null && !jsonObj.get("category_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `category_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("category_id").toString()));
      }
      if (jsonObj.get("commercial_sub_mode") != null && !jsonObj.get("commercial_sub_mode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `commercial_sub_mode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("commercial_sub_mode").toString()));
      }
      if (jsonObj.get("credit_agreement_id") != null && !jsonObj.get("credit_agreement_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `credit_agreement_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("credit_agreement_id").toString()));
      }
      if (jsonObj.get("credit_commercial_mode") != null && !jsonObj.get("credit_commercial_mode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `credit_commercial_mode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("credit_commercial_mode").toString()));
      }
      if (jsonObj.get("extend_params") != null && !jsonObj.get("extend_params").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `extend_params` to be a primitive type in the JSON string but got `%s`", jsonObj.get("extend_params").toString()));
      }
      if (jsonObj.get("order_amount") != null && !jsonObj.get("order_amount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `order_amount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("order_amount").toString()));
      }
      if (jsonObj.get("out_order_no") != null && !jsonObj.get("out_order_no").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `out_order_no` to be a primitive type in the JSON string but got `%s`", jsonObj.get("out_order_no").toString()));
      }
      if (jsonObj.get("payment_total_times") != null && !jsonObj.get("payment_total_times").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payment_total_times` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payment_total_times").toString()));
      }
      if (jsonObj.get("product_code") != null && !jsonObj.get("product_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `product_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("product_code").toString()));
      }
      if (jsonObj.get("stage_period_type") != null && !jsonObj.get("stage_period_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stage_period_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stage_period_type").toString()));
      }
      if (jsonObj.get("subject") != null && !jsonObj.get("subject").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subject` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subject").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ZhimaCreditPayafteruseCreditbizorderOrderModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ZhimaCreditPayafteruseCreditbizorderOrderModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ZhimaCreditPayafteruseCreditbizorderOrderModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ZhimaCreditPayafteruseCreditbizorderOrderModel.class));

       return (TypeAdapter<T>) new TypeAdapter<ZhimaCreditPayafteruseCreditbizorderOrderModel>() {
           @Override
           public void write(JsonWriter out, ZhimaCreditPayafteruseCreditbizorderOrderModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public ZhimaCreditPayafteruseCreditbizorderOrderModel read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             ZhimaCreditPayafteruseCreditbizorderOrderModel instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else { // non-primitive type
                   instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ZhimaCreditPayafteruseCreditbizorderOrderModel given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ZhimaCreditPayafteruseCreditbizorderOrderModel
  * @throws IOException if the JSON string is invalid with respect to ZhimaCreditPayafteruseCreditbizorderOrderModel
  */
  public static ZhimaCreditPayafteruseCreditbizorderOrderModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ZhimaCreditPayafteruseCreditbizorderOrderModel.class);
  }

 /**
  * Convert an instance of ZhimaCreditPayafteruseCreditbizorderOrderModel to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

