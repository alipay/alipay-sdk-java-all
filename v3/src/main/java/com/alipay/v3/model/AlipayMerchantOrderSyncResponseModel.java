/*
 * 支付宝开放平台API
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-06
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.alipay.v3.model;

import java.util.Objects;
import java.util.Arrays;
import com.alipay.v3.model.OrderDataDistributeInfo;
import com.alipay.v3.model.OrderDataSyncSuggestion;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.alipay.v3.JSON;

/**
 * AlipayMerchantOrderSyncResponseModel
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class AlipayMerchantOrderSyncResponseModel {
  public static final String SERIALIZED_NAME_DISTRIBUTE_RESULT = "distribute_result";
  @SerializedName(SERIALIZED_NAME_DISTRIBUTE_RESULT)
  private List<OrderDataDistributeInfo> distributeResult = null;

  public static final String SERIALIZED_NAME_ORDER_ID = "order_id";
  @SerializedName(SERIALIZED_NAME_ORDER_ID)
  private String orderId;

  public static final String SERIALIZED_NAME_ORDER_STATUS = "order_status";
  @SerializedName(SERIALIZED_NAME_ORDER_STATUS)
  private String orderStatus;

  public static final String SERIALIZED_NAME_RECORD_ID = "record_id";
  @SerializedName(SERIALIZED_NAME_RECORD_ID)
  private String recordId;

  public static final String SERIALIZED_NAME_SYNC_SUGGESTIONS = "sync_suggestions";
  @SerializedName(SERIALIZED_NAME_SYNC_SUGGESTIONS)
  private List<OrderDataSyncSuggestion> syncSuggestions = null;

  public AlipayMerchantOrderSyncResponseModel() { 
  }

  public AlipayMerchantOrderSyncResponseModel distributeResult(List<OrderDataDistributeInfo> distributeResult) {
    
    this.distributeResult = distributeResult;
    return this;
  }

  public AlipayMerchantOrderSyncResponseModel addDistributeResultItem(OrderDataDistributeInfo distributeResultItem) {
    if (this.distributeResult == null) {
      this.distributeResult = new ArrayList<>();
    }
    this.distributeResult.add(distributeResultItem);
    return this;
  }

   /**
   * \&quot;分发结果 若未分发到场景侧，则会返回具体的未分发原因\&quot;
   * @return distributeResult
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "\"分发结果 若未分发到场景侧，则会返回具体的未分发原因\"")

  public List<OrderDataDistributeInfo> getDistributeResult() {
    return distributeResult;
  }


  public void setDistributeResult(List<OrderDataDistributeInfo> distributeResult) {
    this.distributeResult = distributeResult;
  }


  public AlipayMerchantOrderSyncResponseModel orderId(String orderId) {
    
    this.orderId = orderId;
    return this;
  }

   /**
   * 支付宝订单号
   * @return orderId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2019052300502300190500000000102188", value = "支付宝订单号")

  public String getOrderId() {
    return orderId;
  }


  public void setOrderId(String orderId) {
    this.orderId = orderId;
  }


  public AlipayMerchantOrderSyncResponseModel orderStatus(String orderStatus) {
    
    this.orderStatus = orderStatus;
    return this;
  }

   /**
   * 订单状态
   * @return orderStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "PAID", value = "订单状态")

  public String getOrderStatus() {
    return orderStatus;
  }


  public void setOrderStatus(String orderStatus) {
    this.orderStatus = orderStatus;
  }


  public AlipayMerchantOrderSyncResponseModel recordId(String recordId) {
    
    this.recordId = recordId;
    return this;
  }

   /**
   * 同步订单记录id
   * @return recordId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2019103000502300270200000001268074", value = "同步订单记录id")

  public String getRecordId() {
    return recordId;
  }


  public void setRecordId(String recordId) {
    this.recordId = recordId;
  }


  public AlipayMerchantOrderSyncResponseModel syncSuggestions(List<OrderDataSyncSuggestion> syncSuggestions) {
    
    this.syncSuggestions = syncSuggestions;
    return this;
  }

  public AlipayMerchantOrderSyncResponseModel addSyncSuggestionsItem(OrderDataSyncSuggestion syncSuggestionsItem) {
    if (this.syncSuggestions == null) {
      this.syncSuggestions = new ArrayList<>();
    }
    this.syncSuggestions.add(syncSuggestionsItem);
    return this;
  }

   /**
   * 订单同步优化建议，供开发者参考
   * @return syncSuggestions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "订单同步优化建议，供开发者参考")

  public List<OrderDataSyncSuggestion> getSyncSuggestions() {
    return syncSuggestions;
  }


  public void setSyncSuggestions(List<OrderDataSyncSuggestion> syncSuggestions) {
    this.syncSuggestions = syncSuggestions;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the AlipayMerchantOrderSyncResponseModel instance itself
   */
  public AlipayMerchantOrderSyncResponseModel putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AlipayMerchantOrderSyncResponseModel alipayMerchantOrderSyncResponseModel = (AlipayMerchantOrderSyncResponseModel) o;
    return Objects.equals(this.distributeResult, alipayMerchantOrderSyncResponseModel.distributeResult) &&
        Objects.equals(this.orderId, alipayMerchantOrderSyncResponseModel.orderId) &&
        Objects.equals(this.orderStatus, alipayMerchantOrderSyncResponseModel.orderStatus) &&
        Objects.equals(this.recordId, alipayMerchantOrderSyncResponseModel.recordId) &&
        Objects.equals(this.syncSuggestions, alipayMerchantOrderSyncResponseModel.syncSuggestions)&&
        Objects.equals(this.additionalProperties, alipayMerchantOrderSyncResponseModel.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(distributeResult, orderId, orderStatus, recordId, syncSuggestions, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AlipayMerchantOrderSyncResponseModel {\n");
    sb.append("    distributeResult: ").append(toIndentedString(distributeResult)).append("\n");
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    orderStatus: ").append(toIndentedString(orderStatus)).append("\n");
    sb.append("    recordId: ").append(toIndentedString(recordId)).append("\n");
    sb.append("    syncSuggestions: ").append(toIndentedString(syncSuggestions)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("distribute_result");
    openapiFields.add("order_id");
    openapiFields.add("order_status");
    openapiFields.add("record_id");
    openapiFields.add("sync_suggestions");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to AlipayMerchantOrderSyncResponseModel
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (AlipayMerchantOrderSyncResponseModel.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in AlipayMerchantOrderSyncResponseModel is not found in the empty JSON string", AlipayMerchantOrderSyncResponseModel.openapiRequiredFields.toString()));
        }
      }
      JsonArray jsonArraydistributeResult = jsonObj.getAsJsonArray("distribute_result");
      if (jsonArraydistributeResult != null) {
        // ensure the json data is an array
        if (!jsonObj.get("distribute_result").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `distribute_result` to be an array in the JSON string but got `%s`", jsonObj.get("distribute_result").toString()));
        }

        // validate the optional field `distribute_result` (array)
        for (int i = 0; i < jsonArraydistributeResult.size(); i++) {
          OrderDataDistributeInfo.validateJsonObject(jsonArraydistributeResult.get(i).getAsJsonObject());
        };
      }
      if (jsonObj.get("order_id") != null && !jsonObj.get("order_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `order_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("order_id").toString()));
      }
      if (jsonObj.get("order_status") != null && !jsonObj.get("order_status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `order_status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("order_status").toString()));
      }
      if (jsonObj.get("record_id") != null && !jsonObj.get("record_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `record_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("record_id").toString()));
      }
      JsonArray jsonArraysyncSuggestions = jsonObj.getAsJsonArray("sync_suggestions");
      if (jsonArraysyncSuggestions != null) {
        // ensure the json data is an array
        if (!jsonObj.get("sync_suggestions").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `sync_suggestions` to be an array in the JSON string but got `%s`", jsonObj.get("sync_suggestions").toString()));
        }

        // validate the optional field `sync_suggestions` (array)
        for (int i = 0; i < jsonArraysyncSuggestions.size(); i++) {
          OrderDataSyncSuggestion.validateJsonObject(jsonArraysyncSuggestions.get(i).getAsJsonObject());
        };
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AlipayMerchantOrderSyncResponseModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AlipayMerchantOrderSyncResponseModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AlipayMerchantOrderSyncResponseModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AlipayMerchantOrderSyncResponseModel.class));

       return (TypeAdapter<T>) new TypeAdapter<AlipayMerchantOrderSyncResponseModel>() {
           @Override
           public void write(JsonWriter out, AlipayMerchantOrderSyncResponseModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public AlipayMerchantOrderSyncResponseModel read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             AlipayMerchantOrderSyncResponseModel instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else { // non-primitive type
                   instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AlipayMerchantOrderSyncResponseModel given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AlipayMerchantOrderSyncResponseModel
  * @throws IOException if the JSON string is invalid with respect to AlipayMerchantOrderSyncResponseModel
  */
  public static AlipayMerchantOrderSyncResponseModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AlipayMerchantOrderSyncResponseModel.class);
  }

 /**
  * Convert an instance of AlipayMerchantOrderSyncResponseModel to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

