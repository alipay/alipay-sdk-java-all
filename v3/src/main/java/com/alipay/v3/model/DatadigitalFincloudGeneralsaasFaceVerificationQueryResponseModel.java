/*
 * 支付宝开放平台API
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.alipay.v3.model;

import java.util.Objects;
import java.util.Arrays;
import com.alipay.v3.model.OpenCertifyMetaInfo;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.alipay.v3.JSON;

/**
 * DatadigitalFincloudGeneralsaasFaceVerificationQueryResponseModel
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class DatadigitalFincloudGeneralsaasFaceVerificationQueryResponseModel {
  public static final String SERIALIZED_NAME_ALIVE_PHOTO = "alive_photo";
  @SerializedName(SERIALIZED_NAME_ALIVE_PHOTO)
  private String alivePhoto;

  public static final String SERIALIZED_NAME_ATTACK_FLAG = "attack_flag";
  @SerializedName(SERIALIZED_NAME_ATTACK_FLAG)
  private String attackFlag;

  public static final String SERIALIZED_NAME_CERTIFY_STATE = "certify_state";
  @SerializedName(SERIALIZED_NAME_CERTIFY_STATE)
  private String certifyState;

  public static final String SERIALIZED_NAME_META_INFO = "meta_info";
  @SerializedName(SERIALIZED_NAME_META_INFO)
  private OpenCertifyMetaInfo metaInfo;

  public static final String SERIALIZED_NAME_QUALITY = "quality";
  @SerializedName(SERIALIZED_NAME_QUALITY)
  private String quality;

  public static final String SERIALIZED_NAME_SCORE = "score";
  @SerializedName(SERIALIZED_NAME_SCORE)
  private String score;

  public DatadigitalFincloudGeneralsaasFaceVerificationQueryResponseModel() { 
  }

  public DatadigitalFincloudGeneralsaasFaceVerificationQueryResponseModel alivePhoto(String alivePhoto) {
    
    this.alivePhoto = alivePhoto;
    return this;
  }

   /**
   * base64过后的图片图片
   * @return alivePhoto
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "adsfsdfsdf", value = "base64过后的图片图片")

  public String getAlivePhoto() {
    return alivePhoto;
  }


  public void setAlivePhoto(String alivePhoto) {
    this.alivePhoto = alivePhoto;
  }


  public DatadigitalFincloudGeneralsaasFaceVerificationQueryResponseModel attackFlag(String attackFlag) {
    
    this.attackFlag = attackFlag;
    return this;
  }

   /**
   * 本次认证是否存在安全风险，true：检测到安全风险；false：未检测到安全风险。
   * @return attackFlag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "本次认证是否存在安全风险，true：检测到安全风险；false：未检测到安全风险。")

  public String getAttackFlag() {
    return attackFlag;
  }


  public void setAttackFlag(String attackFlag) {
    this.attackFlag = attackFlag;
  }


  public DatadigitalFincloudGeneralsaasFaceVerificationQueryResponseModel certifyState(String certifyState) {
    
    this.certifyState = certifyState;
    return this;
  }

   /**
   * 人脸认证状态。PROCESSING：初始化；SUCCESS：认证通过；FAIL：认证不通过。
   * @return certifyState
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "PROCESSING", value = "人脸认证状态。PROCESSING：初始化；SUCCESS：认证通过；FAIL：认证不通过。")

  public String getCertifyState() {
    return certifyState;
  }


  public void setCertifyState(String certifyState) {
    this.certifyState = certifyState;
  }


  public DatadigitalFincloudGeneralsaasFaceVerificationQueryResponseModel metaInfo(OpenCertifyMetaInfo metaInfo) {
    
    this.metaInfo = metaInfo;
    return this;
  }

   /**
   * Get metaInfo
   * @return metaInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OpenCertifyMetaInfo getMetaInfo() {
    return metaInfo;
  }


  public void setMetaInfo(OpenCertifyMetaInfo metaInfo) {
    this.metaInfo = metaInfo;
  }


  public DatadigitalFincloudGeneralsaasFaceVerificationQueryResponseModel quality(String quality) {
    
    this.quality = quality;
    return this;
  }

   /**
   * double值，人脸图片质量分
   * @return quality
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2", value = "double值，人脸图片质量分")

  public String getQuality() {
    return quality;
  }


  public void setQuality(String quality) {
    this.quality = quality;
  }


  public DatadigitalFincloudGeneralsaasFaceVerificationQueryResponseModel score(String score) {
    
    this.score = score;
    return this;
  }

   /**
   * double值，活体检测结果分数
   * @return score
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "30", value = "double值，活体检测结果分数")

  public String getScore() {
    return score;
  }


  public void setScore(String score) {
    this.score = score;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the DatadigitalFincloudGeneralsaasFaceVerificationQueryResponseModel instance itself
   */
  public DatadigitalFincloudGeneralsaasFaceVerificationQueryResponseModel putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DatadigitalFincloudGeneralsaasFaceVerificationQueryResponseModel datadigitalFincloudGeneralsaasFaceVerificationQueryResponseModel = (DatadigitalFincloudGeneralsaasFaceVerificationQueryResponseModel) o;
    return Objects.equals(this.alivePhoto, datadigitalFincloudGeneralsaasFaceVerificationQueryResponseModel.alivePhoto) &&
        Objects.equals(this.attackFlag, datadigitalFincloudGeneralsaasFaceVerificationQueryResponseModel.attackFlag) &&
        Objects.equals(this.certifyState, datadigitalFincloudGeneralsaasFaceVerificationQueryResponseModel.certifyState) &&
        Objects.equals(this.metaInfo, datadigitalFincloudGeneralsaasFaceVerificationQueryResponseModel.metaInfo) &&
        Objects.equals(this.quality, datadigitalFincloudGeneralsaasFaceVerificationQueryResponseModel.quality) &&
        Objects.equals(this.score, datadigitalFincloudGeneralsaasFaceVerificationQueryResponseModel.score)&&
        Objects.equals(this.additionalProperties, datadigitalFincloudGeneralsaasFaceVerificationQueryResponseModel.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(alivePhoto, attackFlag, certifyState, metaInfo, quality, score, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DatadigitalFincloudGeneralsaasFaceVerificationQueryResponseModel {\n");
    sb.append("    alivePhoto: ").append(toIndentedString(alivePhoto)).append("\n");
    sb.append("    attackFlag: ").append(toIndentedString(attackFlag)).append("\n");
    sb.append("    certifyState: ").append(toIndentedString(certifyState)).append("\n");
    sb.append("    metaInfo: ").append(toIndentedString(metaInfo)).append("\n");
    sb.append("    quality: ").append(toIndentedString(quality)).append("\n");
    sb.append("    score: ").append(toIndentedString(score)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("alive_photo");
    openapiFields.add("attack_flag");
    openapiFields.add("certify_state");
    openapiFields.add("meta_info");
    openapiFields.add("quality");
    openapiFields.add("score");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to DatadigitalFincloudGeneralsaasFaceVerificationQueryResponseModel
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (DatadigitalFincloudGeneralsaasFaceVerificationQueryResponseModel.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in DatadigitalFincloudGeneralsaasFaceVerificationQueryResponseModel is not found in the empty JSON string", DatadigitalFincloudGeneralsaasFaceVerificationQueryResponseModel.openapiRequiredFields.toString()));
        }
      }
      if (jsonObj.get("alive_photo") != null && !jsonObj.get("alive_photo").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `alive_photo` to be a primitive type in the JSON string but got `%s`", jsonObj.get("alive_photo").toString()));
      }
      if (jsonObj.get("attack_flag") != null && !jsonObj.get("attack_flag").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `attack_flag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("attack_flag").toString()));
      }
      if (jsonObj.get("certify_state") != null && !jsonObj.get("certify_state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `certify_state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("certify_state").toString()));
      }
      // validate the optional field `meta_info`
      if (jsonObj.getAsJsonObject("meta_info") != null) {
        OpenCertifyMetaInfo.validateJsonObject(jsonObj.getAsJsonObject("meta_info"));
      }
      if (jsonObj.get("quality") != null && !jsonObj.get("quality").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `quality` to be a primitive type in the JSON string but got `%s`", jsonObj.get("quality").toString()));
      }
      if (jsonObj.get("score") != null && !jsonObj.get("score").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `score` to be a primitive type in the JSON string but got `%s`", jsonObj.get("score").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DatadigitalFincloudGeneralsaasFaceVerificationQueryResponseModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DatadigitalFincloudGeneralsaasFaceVerificationQueryResponseModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DatadigitalFincloudGeneralsaasFaceVerificationQueryResponseModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DatadigitalFincloudGeneralsaasFaceVerificationQueryResponseModel.class));

       return (TypeAdapter<T>) new TypeAdapter<DatadigitalFincloudGeneralsaasFaceVerificationQueryResponseModel>() {
           @Override
           public void write(JsonWriter out, DatadigitalFincloudGeneralsaasFaceVerificationQueryResponseModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public DatadigitalFincloudGeneralsaasFaceVerificationQueryResponseModel read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             DatadigitalFincloudGeneralsaasFaceVerificationQueryResponseModel instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else { // non-primitive type
                   instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of DatadigitalFincloudGeneralsaasFaceVerificationQueryResponseModel given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of DatadigitalFincloudGeneralsaasFaceVerificationQueryResponseModel
  * @throws IOException if the JSON string is invalid with respect to DatadigitalFincloudGeneralsaasFaceVerificationQueryResponseModel
  */
  public static DatadigitalFincloudGeneralsaasFaceVerificationQueryResponseModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DatadigitalFincloudGeneralsaasFaceVerificationQueryResponseModel.class);
  }

 /**
  * Convert an instance of DatadigitalFincloudGeneralsaasFaceVerificationQueryResponseModel to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

