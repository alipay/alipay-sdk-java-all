/*
 * 支付宝开放平台API
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.alipay.v3.model;

import java.util.Objects;
import java.util.Arrays;
import com.alipay.v3.model.ProductAgentStatusInfo;
import com.alipay.v3.model.SignRestrictInfo;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.alipay.v3.JSON;

/**
 * AlipayOpenAgentOrderQueryResponseModel
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class AlipayOpenAgentOrderQueryResponseModel {
  public static final String SERIALIZED_NAME_AGENT_APP_ID = "agent_app_id";
  @SerializedName(SERIALIZED_NAME_AGENT_APP_ID)
  private String agentAppId;

  public static final String SERIALIZED_NAME_CONFIRM_URL = "confirm_url";
  @SerializedName(SERIALIZED_NAME_CONFIRM_URL)
  private String confirmUrl;

  public static final String SERIALIZED_NAME_MERCHANT_PID = "merchant_pid";
  @SerializedName(SERIALIZED_NAME_MERCHANT_PID)
  private String merchantPid;

  public static final String SERIALIZED_NAME_ORDER_NO = "order_no";
  @SerializedName(SERIALIZED_NAME_ORDER_NO)
  private String orderNo;

  public static final String SERIALIZED_NAME_ORDER_STATUS = "order_status";
  @SerializedName(SERIALIZED_NAME_ORDER_STATUS)
  private String orderStatus;

  public static final String SERIALIZED_NAME_PRODUCT_AGENT_STATUS_INFOS = "product_agent_status_infos";
  @SerializedName(SERIALIZED_NAME_PRODUCT_AGENT_STATUS_INFOS)
  private List<ProductAgentStatusInfo> productAgentStatusInfos = null;

  public static final String SERIALIZED_NAME_REJECT_REASON = "reject_reason";
  @SerializedName(SERIALIZED_NAME_REJECT_REASON)
  private String rejectReason;

  public static final String SERIALIZED_NAME_RESTRICT_INFOS = "restrict_infos";
  @SerializedName(SERIALIZED_NAME_RESTRICT_INFOS)
  private List<SignRestrictInfo> restrictInfos = null;

  public AlipayOpenAgentOrderQueryResponseModel() { 
  }

  public AlipayOpenAgentOrderQueryResponseModel agentAppId(String agentAppId) {
    
    this.agentAppId = agentAppId;
    return this;
  }

   /**
   * 代理创建的应用ID，如果有代理商户创建应用，商户确认成功后，才返回应用ID，否则不返回。
   * @return agentAppId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2017111108241348", value = "代理创建的应用ID，如果有代理商户创建应用，商户确认成功后，才返回应用ID，否则不返回。")

  public String getAgentAppId() {
    return agentAppId;
  }


  public void setAgentAppId(String agentAppId) {
    this.agentAppId = agentAppId;
  }


  public AlipayOpenAgentOrderQueryResponseModel confirmUrl(String confirmUrl) {
    
    this.confirmUrl = confirmUrl;
    return this;
  }

   /**
   * 只有申请单状态在MERCHANT_CONFIRM状态下，才会返回商户确认签约链接
   * @return confirmUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "https://openhome.alipay.com/isv/settling/confirm.htm?orderNo=20180627015000000000009202531926", value = "只有申请单状态在MERCHANT_CONFIRM状态下，才会返回商户确认签约链接")

  public String getConfirmUrl() {
    return confirmUrl;
  }


  public void setConfirmUrl(String confirmUrl) {
    this.confirmUrl = confirmUrl;
  }


  public AlipayOpenAgentOrderQueryResponseModel merchantPid(String merchantPid) {
    
    this.merchantPid = merchantPid;
    return this;
  }

   /**
   * 商户pid
   * @return merchantPid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "390284792319804", value = "商户pid")

  public String getMerchantPid() {
    return merchantPid;
  }


  public void setMerchantPid(String merchantPid) {
    this.merchantPid = merchantPid;
  }


  public AlipayOpenAgentOrderQueryResponseModel orderNo(String orderNo) {
    
    this.orderNo = orderNo;
    return this;
  }

   /**
   * 签约单号
   * @return orderNo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "20211020034000100000027428505085", value = "签约单号")

  public String getOrderNo() {
    return orderNo;
  }


  public void setOrderNo(String orderNo) {
    this.orderNo = orderNo;
  }


  public AlipayOpenAgentOrderQueryResponseModel orderStatus(String orderStatus) {
    
    this.orderStatus = orderStatus;
    return this;
  }

   /**
   * 支付宝商户入驻申请单状态，申请单状态包括：  MERCHANT_INFO_HOLD&#x3D;暂存，提交事务出现业务校验异常时，会暂存申请单信息，可以调用业务接口修正参数，并重新提交  MERCHANT_AUDITING&#x3D;审核中，申请信息正在人工审核中  MERCHANT_CONFIRM&#x3D;待商户确认，申请信息审核通过，等待联系人确认签约或授权  MERCHANT_CONFIRM_SUCCESS&#x3D;商户确认成功，商户同意签约或授权  MERCHANT_CONFIRM_TIME_OUT&#x3D;商户超时未确认，如果商户受到确认信息15天内未确认，则需要重新提交申请信息  MERCHANT_APPLY_ORDER_CANCELED&#x3D;审核失败或商户拒绝，申请信息审核被驳回，或者商户选择拒绝签约或授权
   * @return orderStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "MERCHANT_INFO_HOLD", value = "支付宝商户入驻申请单状态，申请单状态包括：  MERCHANT_INFO_HOLD=暂存，提交事务出现业务校验异常时，会暂存申请单信息，可以调用业务接口修正参数，并重新提交  MERCHANT_AUDITING=审核中，申请信息正在人工审核中  MERCHANT_CONFIRM=待商户确认，申请信息审核通过，等待联系人确认签约或授权  MERCHANT_CONFIRM_SUCCESS=商户确认成功，商户同意签约或授权  MERCHANT_CONFIRM_TIME_OUT=商户超时未确认，如果商户受到确认信息15天内未确认，则需要重新提交申请信息  MERCHANT_APPLY_ORDER_CANCELED=审核失败或商户拒绝，申请信息审核被驳回，或者商户选择拒绝签约或授权")

  public String getOrderStatus() {
    return orderStatus;
  }


  public void setOrderStatus(String orderStatus) {
    this.orderStatus = orderStatus;
  }


  public AlipayOpenAgentOrderQueryResponseModel productAgentStatusInfos(List<ProductAgentStatusInfo> productAgentStatusInfos) {
    
    this.productAgentStatusInfos = productAgentStatusInfos;
    return this;
  }

  public AlipayOpenAgentOrderQueryResponseModel addProductAgentStatusInfosItem(ProductAgentStatusInfo productAgentStatusInfosItem) {
    if (this.productAgentStatusInfos == null) {
      this.productAgentStatusInfos = new ArrayList<>();
    }
    this.productAgentStatusInfos.add(productAgentStatusInfosItem);
    return this;
  }

   /**
   * 申请单中每个产品的签约状态
   * @return productAgentStatusInfos
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "申请单中每个产品的签约状态")

  public List<ProductAgentStatusInfo> getProductAgentStatusInfos() {
    return productAgentStatusInfos;
  }


  public void setProductAgentStatusInfos(List<ProductAgentStatusInfo> productAgentStatusInfos) {
    this.productAgentStatusInfos = productAgentStatusInfos;
  }


  public AlipayOpenAgentOrderQueryResponseModel rejectReason(String rejectReason) {
    
    this.rejectReason = rejectReason;
    return this;
  }

   /**
   * 审核失败的拒绝原因，只有审核失败才会返回该值
   * @return rejectReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "图片涉黄", value = "审核失败的拒绝原因，只有审核失败才会返回该值")

  public String getRejectReason() {
    return rejectReason;
  }


  public void setRejectReason(String rejectReason) {
    this.rejectReason = rejectReason;
  }


  public AlipayOpenAgentOrderQueryResponseModel restrictInfos(List<SignRestrictInfo> restrictInfos) {
    
    this.restrictInfos = restrictInfos;
    return this;
  }

  public AlipayOpenAgentOrderQueryResponseModel addRestrictInfosItem(SignRestrictInfo restrictInfosItem) {
    if (this.restrictInfos == null) {
      this.restrictInfos = new ArrayList<>();
    }
    this.restrictInfos.add(restrictInfosItem);
    return this;
  }

   /**
   * 受限信息
   * @return restrictInfos
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "受限信息")

  public List<SignRestrictInfo> getRestrictInfos() {
    return restrictInfos;
  }


  public void setRestrictInfos(List<SignRestrictInfo> restrictInfos) {
    this.restrictInfos = restrictInfos;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the AlipayOpenAgentOrderQueryResponseModel instance itself
   */
  public AlipayOpenAgentOrderQueryResponseModel putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AlipayOpenAgentOrderQueryResponseModel alipayOpenAgentOrderQueryResponseModel = (AlipayOpenAgentOrderQueryResponseModel) o;
    return Objects.equals(this.agentAppId, alipayOpenAgentOrderQueryResponseModel.agentAppId) &&
        Objects.equals(this.confirmUrl, alipayOpenAgentOrderQueryResponseModel.confirmUrl) &&
        Objects.equals(this.merchantPid, alipayOpenAgentOrderQueryResponseModel.merchantPid) &&
        Objects.equals(this.orderNo, alipayOpenAgentOrderQueryResponseModel.orderNo) &&
        Objects.equals(this.orderStatus, alipayOpenAgentOrderQueryResponseModel.orderStatus) &&
        Objects.equals(this.productAgentStatusInfos, alipayOpenAgentOrderQueryResponseModel.productAgentStatusInfos) &&
        Objects.equals(this.rejectReason, alipayOpenAgentOrderQueryResponseModel.rejectReason) &&
        Objects.equals(this.restrictInfos, alipayOpenAgentOrderQueryResponseModel.restrictInfos)&&
        Objects.equals(this.additionalProperties, alipayOpenAgentOrderQueryResponseModel.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(agentAppId, confirmUrl, merchantPid, orderNo, orderStatus, productAgentStatusInfos, rejectReason, restrictInfos, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AlipayOpenAgentOrderQueryResponseModel {\n");
    sb.append("    agentAppId: ").append(toIndentedString(agentAppId)).append("\n");
    sb.append("    confirmUrl: ").append(toIndentedString(confirmUrl)).append("\n");
    sb.append("    merchantPid: ").append(toIndentedString(merchantPid)).append("\n");
    sb.append("    orderNo: ").append(toIndentedString(orderNo)).append("\n");
    sb.append("    orderStatus: ").append(toIndentedString(orderStatus)).append("\n");
    sb.append("    productAgentStatusInfos: ").append(toIndentedString(productAgentStatusInfos)).append("\n");
    sb.append("    rejectReason: ").append(toIndentedString(rejectReason)).append("\n");
    sb.append("    restrictInfos: ").append(toIndentedString(restrictInfos)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("agent_app_id");
    openapiFields.add("confirm_url");
    openapiFields.add("merchant_pid");
    openapiFields.add("order_no");
    openapiFields.add("order_status");
    openapiFields.add("product_agent_status_infos");
    openapiFields.add("reject_reason");
    openapiFields.add("restrict_infos");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to AlipayOpenAgentOrderQueryResponseModel
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (AlipayOpenAgentOrderQueryResponseModel.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in AlipayOpenAgentOrderQueryResponseModel is not found in the empty JSON string", AlipayOpenAgentOrderQueryResponseModel.openapiRequiredFields.toString()));
        }
      }
      if (jsonObj.get("agent_app_id") != null && !jsonObj.get("agent_app_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `agent_app_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("agent_app_id").toString()));
      }
      if (jsonObj.get("confirm_url") != null && !jsonObj.get("confirm_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `confirm_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("confirm_url").toString()));
      }
      if (jsonObj.get("merchant_pid") != null && !jsonObj.get("merchant_pid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `merchant_pid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("merchant_pid").toString()));
      }
      if (jsonObj.get("order_no") != null && !jsonObj.get("order_no").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `order_no` to be a primitive type in the JSON string but got `%s`", jsonObj.get("order_no").toString()));
      }
      if (jsonObj.get("order_status") != null && !jsonObj.get("order_status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `order_status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("order_status").toString()));
      }
      JsonArray jsonArrayproductAgentStatusInfos = jsonObj.getAsJsonArray("product_agent_status_infos");
      if (jsonArrayproductAgentStatusInfos != null) {
        // ensure the json data is an array
        if (!jsonObj.get("product_agent_status_infos").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `product_agent_status_infos` to be an array in the JSON string but got `%s`", jsonObj.get("product_agent_status_infos").toString()));
        }

        // validate the optional field `product_agent_status_infos` (array)
        for (int i = 0; i < jsonArrayproductAgentStatusInfos.size(); i++) {
          ProductAgentStatusInfo.validateJsonObject(jsonArrayproductAgentStatusInfos.get(i).getAsJsonObject());
        };
      }
      if (jsonObj.get("reject_reason") != null && !jsonObj.get("reject_reason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reject_reason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reject_reason").toString()));
      }
      JsonArray jsonArrayrestrictInfos = jsonObj.getAsJsonArray("restrict_infos");
      if (jsonArrayrestrictInfos != null) {
        // ensure the json data is an array
        if (!jsonObj.get("restrict_infos").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `restrict_infos` to be an array in the JSON string but got `%s`", jsonObj.get("restrict_infos").toString()));
        }

        // validate the optional field `restrict_infos` (array)
        for (int i = 0; i < jsonArrayrestrictInfos.size(); i++) {
          SignRestrictInfo.validateJsonObject(jsonArrayrestrictInfos.get(i).getAsJsonObject());
        };
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AlipayOpenAgentOrderQueryResponseModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AlipayOpenAgentOrderQueryResponseModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AlipayOpenAgentOrderQueryResponseModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AlipayOpenAgentOrderQueryResponseModel.class));

       return (TypeAdapter<T>) new TypeAdapter<AlipayOpenAgentOrderQueryResponseModel>() {
           @Override
           public void write(JsonWriter out, AlipayOpenAgentOrderQueryResponseModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public AlipayOpenAgentOrderQueryResponseModel read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             AlipayOpenAgentOrderQueryResponseModel instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else { // non-primitive type
                   instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AlipayOpenAgentOrderQueryResponseModel given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AlipayOpenAgentOrderQueryResponseModel
  * @throws IOException if the JSON string is invalid with respect to AlipayOpenAgentOrderQueryResponseModel
  */
  public static AlipayOpenAgentOrderQueryResponseModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AlipayOpenAgentOrderQueryResponseModel.class);
  }

 /**
  * Convert an instance of AlipayOpenAgentOrderQueryResponseModel to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

