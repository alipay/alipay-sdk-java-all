/*
 * 支付宝开放平台API
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.alipay.v3.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.alipay.v3.JSON;

/**
 * MarketingDeliveryDetail
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class MarketingDeliveryDetail {
  public static final String SERIALIZED_NAME_BIND_ID_LIST = "bind_id_list";
  @SerializedName(SERIALIZED_NAME_BIND_ID_LIST)
  private List<String> bindIdList = null;

  public static final String SERIALIZED_NAME_DETAIL_ID = "detail_id";
  @SerializedName(SERIALIZED_NAME_DETAIL_ID)
  private String detailId;

  public static final String SERIALIZED_NAME_GMT_END = "gmt_end";
  @SerializedName(SERIALIZED_NAME_GMT_END)
  private String gmtEnd;

  public static final String SERIALIZED_NAME_GMT_START = "gmt_start";
  @SerializedName(SERIALIZED_NAME_GMT_START)
  private String gmtStart;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public MarketingDeliveryDetail() { 
  }

  public MarketingDeliveryDetail bindIdList(List<String> bindIdList) {
    
    this.bindIdList = bindIdList;
    return this;
  }

  public MarketingDeliveryDetail addBindIdListItem(String bindIdListItem) {
    if (this.bindIdList == null) {
      this.bindIdList = new ArrayList<>();
    }
    this.bindIdList.add(bindIdListItem);
    return this;
  }

   /**
   * 投放详情绑定的模板id列表
   * @return bindIdList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[\"dsdadewdededede\",\"dedehduehdedue\"]", value = "投放详情绑定的模板id列表")

  public List<String> getBindIdList() {
    return bindIdList;
  }


  public void setBindIdList(List<String> bindIdList) {
    this.bindIdList = bindIdList;
  }


  public MarketingDeliveryDetail detailId(String detailId) {
    
    this.detailId = detailId;
    return this;
  }

   /**
   * 投放详情id
   * @return detailId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "MDDadsdsw344r43defdefefe34321a", value = "投放详情id")

  public String getDetailId() {
    return detailId;
  }


  public void setDetailId(String detailId) {
    this.detailId = detailId;
  }


  public MarketingDeliveryDetail gmtEnd(String gmtEnd) {
    
    this.gmtEnd = gmtEnd;
    return this;
  }

   /**
   * 结束时间
   * @return gmtEnd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2022-01-01 00:00:00", value = "结束时间")

  public String getGmtEnd() {
    return gmtEnd;
  }


  public void setGmtEnd(String gmtEnd) {
    this.gmtEnd = gmtEnd;
  }


  public MarketingDeliveryDetail gmtStart(String gmtStart) {
    
    this.gmtStart = gmtStart;
    return this;
  }

   /**
   * 开始时间
   * @return gmtStart
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2022-01-01 00:00:00", value = "开始时间")

  public String getGmtStart() {
    return gmtStart;
  }


  public void setGmtStart(String gmtStart) {
    this.gmtStart = gmtStart;
  }


  public MarketingDeliveryDetail name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * 投放详情名称，取创建运营投放的title，未传title取券名称
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "满200减20券", value = "投放详情名称，取创建运营投放的title，未传title取券名称")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public MarketingDeliveryDetail status(String status) {
    
    this.status = status;
    return this;
  }

   /**
   * 投放详情状态，INIT:下线状态，ON_LINE:上线状态
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "ON_LINE", value = "投放详情状态，INIT:下线状态，ON_LINE:上线状态")

  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    this.status = status;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the MarketingDeliveryDetail instance itself
   */
  public MarketingDeliveryDetail putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MarketingDeliveryDetail marketingDeliveryDetail = (MarketingDeliveryDetail) o;
    return Objects.equals(this.bindIdList, marketingDeliveryDetail.bindIdList) &&
        Objects.equals(this.detailId, marketingDeliveryDetail.detailId) &&
        Objects.equals(this.gmtEnd, marketingDeliveryDetail.gmtEnd) &&
        Objects.equals(this.gmtStart, marketingDeliveryDetail.gmtStart) &&
        Objects.equals(this.name, marketingDeliveryDetail.name) &&
        Objects.equals(this.status, marketingDeliveryDetail.status)&&
        Objects.equals(this.additionalProperties, marketingDeliveryDetail.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bindIdList, detailId, gmtEnd, gmtStart, name, status, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MarketingDeliveryDetail {\n");
    sb.append("    bindIdList: ").append(toIndentedString(bindIdList)).append("\n");
    sb.append("    detailId: ").append(toIndentedString(detailId)).append("\n");
    sb.append("    gmtEnd: ").append(toIndentedString(gmtEnd)).append("\n");
    sb.append("    gmtStart: ").append(toIndentedString(gmtStart)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("bind_id_list");
    openapiFields.add("detail_id");
    openapiFields.add("gmt_end");
    openapiFields.add("gmt_start");
    openapiFields.add("name");
    openapiFields.add("status");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to MarketingDeliveryDetail
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (MarketingDeliveryDetail.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in MarketingDeliveryDetail is not found in the empty JSON string", MarketingDeliveryDetail.openapiRequiredFields.toString()));
        }
      }
      // ensure the json data is an array
      if (jsonObj.get("bind_id_list") != null && !jsonObj.get("bind_id_list").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `bind_id_list` to be an array in the JSON string but got `%s`", jsonObj.get("bind_id_list").toString()));
      }
      if (jsonObj.get("detail_id") != null && !jsonObj.get("detail_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `detail_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("detail_id").toString()));
      }
      if (jsonObj.get("gmt_end") != null && !jsonObj.get("gmt_end").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gmt_end` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gmt_end").toString()));
      }
      if (jsonObj.get("gmt_start") != null && !jsonObj.get("gmt_start").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gmt_start` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gmt_start").toString()));
      }
      if (jsonObj.get("name") != null && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!MarketingDeliveryDetail.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'MarketingDeliveryDetail' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<MarketingDeliveryDetail> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(MarketingDeliveryDetail.class));

       return (TypeAdapter<T>) new TypeAdapter<MarketingDeliveryDetail>() {
           @Override
           public void write(JsonWriter out, MarketingDeliveryDetail value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public MarketingDeliveryDetail read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             MarketingDeliveryDetail instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else { // non-primitive type
                   instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of MarketingDeliveryDetail given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of MarketingDeliveryDetail
  * @throws IOException if the JSON string is invalid with respect to MarketingDeliveryDetail
  */
  public static MarketingDeliveryDetail fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, MarketingDeliveryDetail.class);
  }

 /**
  * Convert an instance of MarketingDeliveryDetail to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

