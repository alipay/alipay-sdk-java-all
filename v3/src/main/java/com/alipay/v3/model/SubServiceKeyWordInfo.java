/*
 * 支付宝开放平台API
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2024-01-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.alipay.v3.model;

import java.util.Objects;
import java.util.Arrays;
import com.alipay.v3.model.KeyWordInfo;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.alipay.v3.JSON;

/**
 * SubServiceKeyWordInfo
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SubServiceKeyWordInfo {
  public static final String SERIALIZED_NAME_APP_NAME = "app_name";
  @SerializedName(SERIALIZED_NAME_APP_NAME)
  private String appName;

  public static final String SERIALIZED_NAME_KEYWORD_INFO = "keyword_info";
  @SerializedName(SERIALIZED_NAME_KEYWORD_INFO)
  private List<KeyWordInfo> keywordInfo = null;

  public static final String SERIALIZED_NAME_MINI_APP_ID = "mini_app_id";
  @SerializedName(SERIALIZED_NAME_MINI_APP_ID)
  private String miniAppId;

  public static final String SERIALIZED_NAME_SUB_SERVICE_CODE = "sub_service_code";
  @SerializedName(SERIALIZED_NAME_SUB_SERVICE_CODE)
  private String subServiceCode;

  public static final String SERIALIZED_NAME_SUB_SERVICE_DESC = "sub_service_desc";
  @SerializedName(SERIALIZED_NAME_SUB_SERVICE_DESC)
  private String subServiceDesc;

  public static final String SERIALIZED_NAME_SUB_SERVICE_NAME = "sub_service_name";
  @SerializedName(SERIALIZED_NAME_SUB_SERVICE_NAME)
  private String subServiceName;

  public static final String SERIALIZED_NAME_SUB_SERVICE_STATUS = "sub_service_status";
  @SerializedName(SERIALIZED_NAME_SUB_SERVICE_STATUS)
  private String subServiceStatus;

  public SubServiceKeyWordInfo() { 
  }

  public SubServiceKeyWordInfo appName(String appName) {
    
    this.appName = appName;
    return this;
  }

   /**
   * 小程序名称
   * @return appName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "小程序名称123", value = "小程序名称")

  public String getAppName() {
    return appName;
  }


  public void setAppName(String appName) {
    this.appName = appName;
  }


  public SubServiceKeyWordInfo keywordInfo(List<KeyWordInfo> keywordInfo) {
    
    this.keywordInfo = keywordInfo;
    return this;
  }

  public SubServiceKeyWordInfo addKeywordInfoItem(KeyWordInfo keywordInfoItem) {
    if (this.keywordInfo == null) {
      this.keywordInfo = new ArrayList<>();
    }
    this.keywordInfo.add(keywordInfoItem);
    return this;
  }

   /**
   * 此服务下的关键词
   * @return keywordInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "此服务下的关键词")

  public List<KeyWordInfo> getKeywordInfo() {
    return keywordInfo;
  }


  public void setKeywordInfo(List<KeyWordInfo> keywordInfo) {
    this.keywordInfo = keywordInfo;
  }


  public SubServiceKeyWordInfo miniAppId(String miniAppId) {
    
    this.miniAppId = miniAppId;
    return this;
  }

   /**
   * 小程序id
   * @return miniAppId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2021002172648359", value = "小程序id")

  public String getMiniAppId() {
    return miniAppId;
  }


  public void setMiniAppId(String miniAppId) {
    this.miniAppId = miniAppId;
  }


  public SubServiceKeyWordInfo subServiceCode(String subServiceCode) {
    
    this.subServiceCode = subServiceCode;
    return this;
  }

   /**
   * 子服务code
   * @return subServiceCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2022051021000880652471", value = "子服务code")

  public String getSubServiceCode() {
    return subServiceCode;
  }


  public void setSubServiceCode(String subServiceCode) {
    this.subServiceCode = subServiceCode;
  }


  public SubServiceKeyWordInfo subServiceDesc(String subServiceDesc) {
    
    this.subServiceDesc = subServiceDesc;
    return this;
  }

   /**
   * 子服务简单描述
   * @return subServiceDesc
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "这是个服务", value = "子服务简单描述")

  public String getSubServiceDesc() {
    return subServiceDesc;
  }


  public void setSubServiceDesc(String subServiceDesc) {
    this.subServiceDesc = subServiceDesc;
  }


  public SubServiceKeyWordInfo subServiceName(String subServiceName) {
    
    this.subServiceName = subServiceName;
    return this;
  }

   /**
   * 子服务名
   * @return subServiceName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "这是服务名字", value = "子服务名")

  public String getSubServiceName() {
    return subServiceName;
  }


  public void setSubServiceName(String subServiceName) {
    this.subServiceName = subServiceName;
  }


  public SubServiceKeyWordInfo subServiceStatus(String subServiceStatus) {
    
    this.subServiceStatus = subServiceStatus;
    return this;
  }

   /**
   * 子服务状态， INITIAL：初始化：VALID:已生效；INVALID：已失效
   * @return subServiceStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "INVALID", value = "子服务状态， INITIAL：初始化：VALID:已生效；INVALID：已失效")

  public String getSubServiceStatus() {
    return subServiceStatus;
  }


  public void setSubServiceStatus(String subServiceStatus) {
    this.subServiceStatus = subServiceStatus;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SubServiceKeyWordInfo subServiceKeyWordInfo = (SubServiceKeyWordInfo) o;
    return Objects.equals(this.appName, subServiceKeyWordInfo.appName) &&
        Objects.equals(this.keywordInfo, subServiceKeyWordInfo.keywordInfo) &&
        Objects.equals(this.miniAppId, subServiceKeyWordInfo.miniAppId) &&
        Objects.equals(this.subServiceCode, subServiceKeyWordInfo.subServiceCode) &&
        Objects.equals(this.subServiceDesc, subServiceKeyWordInfo.subServiceDesc) &&
        Objects.equals(this.subServiceName, subServiceKeyWordInfo.subServiceName) &&
        Objects.equals(this.subServiceStatus, subServiceKeyWordInfo.subServiceStatus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(appName, keywordInfo, miniAppId, subServiceCode, subServiceDesc, subServiceName, subServiceStatus);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SubServiceKeyWordInfo {\n");
    sb.append("    appName: ").append(toIndentedString(appName)).append("\n");
    sb.append("    keywordInfo: ").append(toIndentedString(keywordInfo)).append("\n");
    sb.append("    miniAppId: ").append(toIndentedString(miniAppId)).append("\n");
    sb.append("    subServiceCode: ").append(toIndentedString(subServiceCode)).append("\n");
    sb.append("    subServiceDesc: ").append(toIndentedString(subServiceDesc)).append("\n");
    sb.append("    subServiceName: ").append(toIndentedString(subServiceName)).append("\n");
    sb.append("    subServiceStatus: ").append(toIndentedString(subServiceStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("app_name");
    openapiFields.add("keyword_info");
    openapiFields.add("mini_app_id");
    openapiFields.add("sub_service_code");
    openapiFields.add("sub_service_desc");
    openapiFields.add("sub_service_name");
    openapiFields.add("sub_service_status");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to SubServiceKeyWordInfo
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (SubServiceKeyWordInfo.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in SubServiceKeyWordInfo is not found in the empty JSON string", SubServiceKeyWordInfo.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!SubServiceKeyWordInfo.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SubServiceKeyWordInfo` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("app_name") != null && !jsonObj.get("app_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `app_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("app_name").toString()));
      }
      JsonArray jsonArraykeywordInfo = jsonObj.getAsJsonArray("keyword_info");
      if (jsonArraykeywordInfo != null) {
        // ensure the json data is an array
        if (!jsonObj.get("keyword_info").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `keyword_info` to be an array in the JSON string but got `%s`", jsonObj.get("keyword_info").toString()));
        }

        // validate the optional field `keyword_info` (array)
        for (int i = 0; i < jsonArraykeywordInfo.size(); i++) {
          KeyWordInfo.validateJsonObject(jsonArraykeywordInfo.get(i).getAsJsonObject());
        };
      }
      if (jsonObj.get("mini_app_id") != null && !jsonObj.get("mini_app_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mini_app_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mini_app_id").toString()));
      }
      if (jsonObj.get("sub_service_code") != null && !jsonObj.get("sub_service_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sub_service_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sub_service_code").toString()));
      }
      if (jsonObj.get("sub_service_desc") != null && !jsonObj.get("sub_service_desc").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sub_service_desc` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sub_service_desc").toString()));
      }
      if (jsonObj.get("sub_service_name") != null && !jsonObj.get("sub_service_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sub_service_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sub_service_name").toString()));
      }
      if (jsonObj.get("sub_service_status") != null && !jsonObj.get("sub_service_status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sub_service_status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sub_service_status").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SubServiceKeyWordInfo.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SubServiceKeyWordInfo' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SubServiceKeyWordInfo> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SubServiceKeyWordInfo.class));

       return (TypeAdapter<T>) new TypeAdapter<SubServiceKeyWordInfo>() {
           @Override
           public void write(JsonWriter out, SubServiceKeyWordInfo value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SubServiceKeyWordInfo read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of SubServiceKeyWordInfo given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of SubServiceKeyWordInfo
  * @throws IOException if the JSON string is invalid with respect to SubServiceKeyWordInfo
  */
  public static SubServiceKeyWordInfo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SubServiceKeyWordInfo.class);
  }

 /**
  * Convert an instance of SubServiceKeyWordInfo to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

