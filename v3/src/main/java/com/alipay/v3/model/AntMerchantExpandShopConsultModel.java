/*
 * 支付宝开放平台API
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-03-05
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.alipay.v3.model;

import java.util.Objects;
import java.util.Arrays;
import com.alipay.v3.model.AddressInfo;
import com.alipay.v3.model.ContactInfo;
import com.alipay.v3.model.IndustryQualificationInfo;
import com.alipay.v3.model.SettleCardInfo;
import com.alipay.v3.model.ShopBusinessTime;
import com.alipay.v3.model.ShopExtInfo;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.alipay.v3.JSON;

/**
 * AntMerchantExpandShopConsultModel
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class AntMerchantExpandShopConsultModel {
  public static final String SERIALIZED_NAME_BIZ_CARDS = "biz_cards";
  @SerializedName(SERIALIZED_NAME_BIZ_CARDS)
  private List<SettleCardInfo> bizCards = null;

  public static final String SERIALIZED_NAME_BRAND_ID = "brand_id";
  @SerializedName(SERIALIZED_NAME_BRAND_ID)
  private String brandId;

  public static final String SERIALIZED_NAME_BUSINESS_ADDRESS = "business_address";
  @SerializedName(SERIALIZED_NAME_BUSINESS_ADDRESS)
  private AddressInfo businessAddress;

  public static final String SERIALIZED_NAME_BUSINESS_TIME = "business_time";
  @SerializedName(SERIALIZED_NAME_BUSINESS_TIME)
  private List<ShopBusinessTime> businessTime = null;

  public static final String SERIALIZED_NAME_CERT_IMAGE = "cert_image";
  @SerializedName(SERIALIZED_NAME_CERT_IMAGE)
  private String certImage;

  public static final String SERIALIZED_NAME_CERT_NAME = "cert_name";
  @SerializedName(SERIALIZED_NAME_CERT_NAME)
  private String certName;

  public static final String SERIALIZED_NAME_CERT_NO = "cert_no";
  @SerializedName(SERIALIZED_NAME_CERT_NO)
  private String certNo;

  public static final String SERIALIZED_NAME_CERT_TYPE = "cert_type";
  @SerializedName(SERIALIZED_NAME_CERT_TYPE)
  private String certType;

  public static final String SERIALIZED_NAME_CONTACT_INFOS = "contact_infos";
  @SerializedName(SERIALIZED_NAME_CONTACT_INFOS)
  private List<ContactInfo> contactInfos = null;

  public static final String SERIALIZED_NAME_CONTACT_MOBILE = "contact_mobile";
  @SerializedName(SERIALIZED_NAME_CONTACT_MOBILE)
  private String contactMobile;

  public static final String SERIALIZED_NAME_CONTACT_PHONE = "contact_phone";
  @SerializedName(SERIALIZED_NAME_CONTACT_PHONE)
  private String contactPhone;

  public static final String SERIALIZED_NAME_EXT_INFOS = "ext_infos";
  @SerializedName(SERIALIZED_NAME_EXT_INFOS)
  private List<ShopExtInfo> extInfos = null;

  public static final String SERIALIZED_NAME_IP_ROLE_ID = "ip_role_id";
  @SerializedName(SERIALIZED_NAME_IP_ROLE_ID)
  private String ipRoleId;

  public static final String SERIALIZED_NAME_LEGAL_CERT_NO = "legal_cert_no";
  @SerializedName(SERIALIZED_NAME_LEGAL_CERT_NO)
  private String legalCertNo;

  public static final String SERIALIZED_NAME_LEGAL_NAME = "legal_name";
  @SerializedName(SERIALIZED_NAME_LEGAL_NAME)
  private String legalName;

  public static final String SERIALIZED_NAME_LICENSE_AUTH_LETTER_IMAGE = "license_auth_letter_image";
  @SerializedName(SERIALIZED_NAME_LICENSE_AUTH_LETTER_IMAGE)
  private String licenseAuthLetterImage;

  public static final String SERIALIZED_NAME_MEMO = "memo";
  @SerializedName(SERIALIZED_NAME_MEMO)
  private String memo;

  public static final String SERIALIZED_NAME_OUT_DOOR_IMAGES = "out_door_images";
  @SerializedName(SERIALIZED_NAME_OUT_DOOR_IMAGES)
  private String outDoorImages;

  public static final String SERIALIZED_NAME_QUALIFICATIONS = "qualifications";
  @SerializedName(SERIALIZED_NAME_QUALIFICATIONS)
  private List<IndustryQualificationInfo> qualifications = null;

  public static final String SERIALIZED_NAME_SCENE = "scene";
  @SerializedName(SERIALIZED_NAME_SCENE)
  private String scene;

  public static final String SERIALIZED_NAME_SETTLE_ALIPAY_LOGON_ID = "settle_alipay_logon_id";
  @SerializedName(SERIALIZED_NAME_SETTLE_ALIPAY_LOGON_ID)
  private String settleAlipayLogonId;

  public static final String SERIALIZED_NAME_SHOP_CATEGORY = "shop_category";
  @SerializedName(SERIALIZED_NAME_SHOP_CATEGORY)
  private String shopCategory;

  public static final String SERIALIZED_NAME_SHOP_NAME = "shop_name";
  @SerializedName(SERIALIZED_NAME_SHOP_NAME)
  private String shopName;

  public static final String SERIALIZED_NAME_SHOP_TYPE = "shop_type";
  @SerializedName(SERIALIZED_NAME_SHOP_TYPE)
  private String shopType;

  public static final String SERIALIZED_NAME_STORE_ID = "store_id";
  @SerializedName(SERIALIZED_NAME_STORE_ID)
  private String storeId;

  public AntMerchantExpandShopConsultModel() { 
  }

  public AntMerchantExpandShopConsultModel bizCards(List<SettleCardInfo> bizCards) {
    
    this.bizCards = bizCards;
    return this;
  }

  public AntMerchantExpandShopConsultModel addBizCardsItem(SettleCardInfo bizCardsItem) {
    if (this.bizCards == null) {
      this.bizCards = new ArrayList<>();
    }
    this.bizCards.add(bizCardsItem);
    return this;
  }

   /**
   * \&quot;门店结算卡信息。本业务当前只允许传入一张结算卡。 说明：本参数仅直付通业务使用，其余业务无需关注。\&quot;
   * @return bizCards
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "\"门店结算卡信息。本业务当前只允许传入一张结算卡。 说明：本参数仅直付通业务使用，其余业务无需关注。\"")

  public List<SettleCardInfo> getBizCards() {
    return bizCards;
  }


  public void setBizCards(List<SettleCardInfo> bizCards) {
    this.bizCards = bizCards;
  }


  public AntMerchantExpandShopConsultModel brandId(String brandId) {
    
    this.brandId = brandId;
    return this;
  }

   /**
   * 品牌id，非加油站等特殊门店无需关注。
   * @return brandId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "20181026000001", value = "品牌id，非加油站等特殊门店无需关注。")

  public String getBrandId() {
    return brandId;
  }


  public void setBrandId(String brandId) {
    this.brandId = brandId;
  }


  public AntMerchantExpandShopConsultModel businessAddress(AddressInfo businessAddress) {
    
    this.businessAddress = businessAddress;
    return this;
  }

   /**
   * Get businessAddress
   * @return businessAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AddressInfo getBusinessAddress() {
    return businessAddress;
  }


  public void setBusinessAddress(AddressInfo businessAddress) {
    this.businessAddress = businessAddress;
  }


  public AntMerchantExpandShopConsultModel businessTime(List<ShopBusinessTime> businessTime) {
    
    this.businessTime = businessTime;
    return this;
  }

  public AntMerchantExpandShopConsultModel addBusinessTimeItem(ShopBusinessTime businessTimeItem) {
    if (this.businessTime == null) {
      this.businessTime = new ArrayList<>();
    }
    this.businessTime.add(businessTimeItem);
    return this;
  }

   /**
   * 店铺经营时间。
   * @return businessTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "店铺经营时间。")

  public List<ShopBusinessTime> getBusinessTime() {
    return businessTime;
  }


  public void setBusinessTime(List<ShopBusinessTime> businessTime) {
    this.businessTime = businessTime;
  }


  public AntMerchantExpandShopConsultModel certImage(String certImage) {
    
    this.certImage = certImage;
    return this;
  }

   /**
   * 营业执照图片KEY。通过&lt;a href&#x3D;\&quot;https://opendocs.alipay.com/apis/api_1/ant.merchant.expand.indirect.image.upload\&quot;&gt;ant.merchant.expand.indirect.image.upload&lt;/a&gt; 接口上传图片后得到的 image_id
   * @return certImage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "c6c0c7a1-b9d5-4e5d-b9d4-9eed39f00e65.jpg", value = "营业执照图片KEY。通过<a href=\"https://opendocs.alipay.com/apis/api_1/ant.merchant.expand.indirect.image.upload\">ant.merchant.expand.indirect.image.upload</a> 接口上传图片后得到的 image_id")

  public String getCertImage() {
    return certImage;
  }


  public void setCertImage(String certImage) {
    this.certImage = certImage;
  }


  public AntMerchantExpandShopConsultModel certName(String certName) {
    
    this.certName = certName;
    return this;
  }

   /**
   * 营业执照名称，填写值为营业执照或统一社会信用代码证上的名称。
   * @return certName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "支付宝东门小卖铺", value = "营业执照名称，填写值为营业执照或统一社会信用代码证上的名称。")

  public String getCertName() {
    return certName;
  }


  public void setCertName(String certName) {
    this.certName = certName;
  }


  public AntMerchantExpandShopConsultModel certNo(String certNo) {
    
    this.certNo = certNo;
    return this;
  }

   /**
   * 证件号码，请填写店铺营业执照号。
   * @return certNo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "9133010608210550XR", value = "证件号码，请填写店铺营业执照号。")

  public String getCertNo() {
    return certNo;
  }


  public void setCertNo(String certNo) {
    this.certNo = certNo;
  }


  public AntMerchantExpandShopConsultModel certType(String certType) {
    
    this.certType = certType;
    return this;
  }

   /**
   * 证件类型
   * @return certType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "201", value = "证件类型")

  public String getCertType() {
    return certType;
  }


  public void setCertType(String certType) {
    this.certType = certType;
  }


  public AntMerchantExpandShopConsultModel contactInfos(List<ContactInfo> contactInfos) {
    
    this.contactInfos = contactInfos;
    return this;
  }

  public AntMerchantExpandShopConsultModel addContactInfosItem(ContactInfo contactInfosItem) {
    if (this.contactInfos == null) {
      this.contactInfos = new ArrayList<>();
    }
    this.contactInfos.add(contactInfosItem);
    return this;
  }

   /**
   * 联系人信息。如果填写，其中名称必填，手机、固话、email 三选一必填。
   * @return contactInfos
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "联系人信息。如果填写，其中名称必填，手机、固话、email 三选一必填。")

  public List<ContactInfo> getContactInfos() {
    return contactInfos;
  }


  public void setContactInfos(List<ContactInfo> contactInfos) {
    this.contactInfos = contactInfos;
  }


  public AntMerchantExpandShopConsultModel contactMobile(String contactMobile) {
    
    this.contactMobile = contactMobile;
    return this;
  }

   /**
   * 店铺联系手机，与店铺联系固话二选一必填
   * @return contactMobile
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "13901390139", value = "店铺联系手机，与店铺联系固话二选一必填")

  public String getContactMobile() {
    return contactMobile;
  }


  public void setContactMobile(String contactMobile) {
    this.contactMobile = contactMobile;
  }


  public AntMerchantExpandShopConsultModel contactPhone(String contactPhone) {
    
    this.contactPhone = contactPhone;
    return this;
  }

   /**
   * 店铺的联系固话，和店铺联系手机二选一必填
   * @return contactPhone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "010-62286228", value = "店铺的联系固话，和店铺联系手机二选一必填")

  public String getContactPhone() {
    return contactPhone;
  }


  public void setContactPhone(String contactPhone) {
    this.contactPhone = contactPhone;
  }


  public AntMerchantExpandShopConsultModel extInfos(List<ShopExtInfo> extInfos) {
    
    this.extInfos = extInfos;
    return this;
  }

  public AntMerchantExpandShopConsultModel addExtInfosItem(ShopExtInfo extInfosItem) {
    if (this.extInfos == null) {
      this.extInfos = new ArrayList<>();
    }
    this.extInfos.add(extInfosItem);
    return this;
  }

   /**
   * 扩展信息列表。key值需要向对应行业的bd进行申请。
   * @return extInfos
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "扩展信息列表。key值需要向对应行业的bd进行申请。")

  public List<ShopExtInfo> getExtInfos() {
    return extInfos;
  }


  public void setExtInfos(List<ShopExtInfo> extInfos) {
    this.extInfos = extInfos;
  }


  public AntMerchantExpandShopConsultModel ipRoleId(String ipRoleId) {
    
    this.ipRoleId = ipRoleId;
    return this;
  }

   /**
   * 商户角色id，表示将要开的店属于哪个商户角色。对于直连开店场景，填写商户pid；对于间连开店场景（线上、线下、直付通），填写商户smid。特别说明：IoT设备三绑定场景统一填写商户pid
   * @return ipRoleId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2088301155943087", value = "商户角色id，表示将要开的店属于哪个商户角色。对于直连开店场景，填写商户pid；对于间连开店场景（线上、线下、直付通），填写商户smid。特别说明：IoT设备三绑定场景统一填写商户pid")

  public String getIpRoleId() {
    return ipRoleId;
  }


  public void setIpRoleId(String ipRoleId) {
    this.ipRoleId = ipRoleId;
  }


  public AntMerchantExpandShopConsultModel legalCertNo(String legalCertNo) {
    
    this.legalCertNo = legalCertNo;
    return this;
  }

   /**
   * 法人身份证号
   * @return legalCertNo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "100100198811110001", value = "法人身份证号")

  public String getLegalCertNo() {
    return legalCertNo;
  }


  public void setLegalCertNo(String legalCertNo) {
    this.legalCertNo = legalCertNo;
  }


  public AntMerchantExpandShopConsultModel legalName(String legalName) {
    
    this.legalName = legalName;
    return this;
  }

   /**
   * 法人名称。
   * @return legalName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "支小宝", value = "法人名称。")

  public String getLegalName() {
    return legalName;
  }


  public void setLegalName(String legalName) {
    this.legalName = legalName;
  }


  public AntMerchantExpandShopConsultModel licenseAuthLetterImage(String licenseAuthLetterImage) {
    
    this.licenseAuthLetterImage = licenseAuthLetterImage;
    return this;
  }

   /**
   * 营业执照授权函。需传入&lt;a href&#x3D;\&quot;https://opendocs.alipay.com/apis/api_1/ant.merchant.expand.indirect.image.upload\&quot;&gt;ant.merchant.expand.indirect.image.upload&lt;/a&gt; 接口上传图片后得到的 image_id。 蚂蚁门店管理场景可选。
   * @return licenseAuthLetterImage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "c6c0c7a1-b9d5-4e5d-b9d4-9eed39f00e65.jpg", value = "营业执照授权函。需传入<a href=\"https://opendocs.alipay.com/apis/api_1/ant.merchant.expand.indirect.image.upload\">ant.merchant.expand.indirect.image.upload</a> 接口上传图片后得到的 image_id。 蚂蚁门店管理场景可选。")

  public String getLicenseAuthLetterImage() {
    return licenseAuthLetterImage;
  }


  public void setLicenseAuthLetterImage(String licenseAuthLetterImage) {
    this.licenseAuthLetterImage = licenseAuthLetterImage;
  }


  public AntMerchantExpandShopConsultModel memo(String memo) {
    
    this.memo = memo;
    return this;
  }

   /**
   * 备注
   * @return memo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "备注", value = "备注")

  public String getMemo() {
    return memo;
  }


  public void setMemo(String memo) {
    this.memo = memo;
  }


  public AntMerchantExpandShopConsultModel outDoorImages(String outDoorImages) {
    
    this.outDoorImages = outDoorImages;
    return this;
  }

   /**
   * 门头照 id，需传入 &lt;a href&#x3D;\&quot;https://opendocs.alipay.com/apis/api_1/ant.merchant.expand.indirect.image.upload\&quot;&gt;ant.merchant.expand.indirect.image.upload&lt;/a&gt; 接口上传图片后得到的 image_id
   * @return outDoorImages
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "c6c0c7a1-b9d5-4e5d-b9d4-9eed39f00e65.jpg", value = "门头照 id，需传入 <a href=\"https://opendocs.alipay.com/apis/api_1/ant.merchant.expand.indirect.image.upload\">ant.merchant.expand.indirect.image.upload</a> 接口上传图片后得到的 image_id")

  public String getOutDoorImages() {
    return outDoorImages;
  }


  public void setOutDoorImages(String outDoorImages) {
    this.outDoorImages = outDoorImages;
  }


  public AntMerchantExpandShopConsultModel qualifications(List<IndustryQualificationInfo> qualifications) {
    
    this.qualifications = qualifications;
    return this;
  }

  public AntMerchantExpandShopConsultModel addQualificationsItem(IndustryQualificationInfo qualificationsItem) {
    if (this.qualifications == null) {
      this.qualifications = new ArrayList<>();
    }
    this.qualifications.add(qualificationsItem);
    return this;
  }

   /**
   * 行业特殊资质。
   * @return qualifications
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "行业特殊资质。")

  public List<IndustryQualificationInfo> getQualifications() {
    return qualifications;
  }


  public void setQualifications(List<IndustryQualificationInfo> qualifications) {
    this.qualifications = qualifications;
  }


  public AntMerchantExpandShopConsultModel scene(String scene) {
    
    this.scene = scene;
    return this;
  }

   /**
   * 场景，非加油站等特殊门店无需关注。
   * @return scene
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "PARK", value = "场景，非加油站等特殊门店无需关注。")

  public String getScene() {
    return scene;
  }


  public void setScene(String scene) {
    this.scene = scene;
  }


  public AntMerchantExpandShopConsultModel settleAlipayLogonId(String settleAlipayLogonId) {
    
    this.settleAlipayLogonId = settleAlipayLogonId;
    return this;
  }

   /**
   * 结算支付宝账号的登录号，需传入小程序归属账号。若需增加收款账号，可在创建门店后登录&lt;a href&#x3D;\&quot;https://b.alipay.com/index2.htm\&quot;&gt;商家中心&lt;/a&gt; ，在 账户中心 &gt; 经营信息 &gt; 门店管理 中选择对应门店选择 更多 &gt; 编辑 &gt; 新增收款账号。
   * @return settleAlipayLogonId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "demo@163.com", value = "结算支付宝账号的登录号，需传入小程序归属账号。若需增加收款账号，可在创建门店后登录<a href=\"https://b.alipay.com/index2.htm\">商家中心</a> ，在 账户中心 > 经营信息 > 门店管理 中选择对应门店选择 更多 > 编辑 > 新增收款账号。")

  public String getSettleAlipayLogonId() {
    return settleAlipayLogonId;
  }


  public void setSettleAlipayLogonId(String settleAlipayLogonId) {
    this.settleAlipayLogonId = settleAlipayLogonId;
  }


  public AntMerchantExpandShopConsultModel shopCategory(String shopCategory) {
    
    this.shopCategory = shopCategory;
    return this;
  }

   /**
   * 新版门店类目标准二级类目code。类目标准及与原类目映射关系参见 &lt;a href&#x3D;\&quot;https://ur.alipay.com/4cmn0n\&quot;&gt;支付宝门店类目-最新&lt;/a&gt; 表格。
   * @return shopCategory
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "B0001", value = "新版门店类目标准二级类目code。类目标准及与原类目映射关系参见 <a href=\"https://ur.alipay.com/4cmn0n\">支付宝门店类目-最新</a> 表格。")

  public String getShopCategory() {
    return shopCategory;
  }


  public void setShopCategory(String shopCategory) {
    this.shopCategory = shopCategory;
  }


  public AntMerchantExpandShopConsultModel shopName(String shopName) {
    
    this.shopName = shopName;
    return this;
  }

   /**
   * 店铺名称。直连开店要保证全局店铺名称+地址唯一，间连开店要保证服务商pid下店铺名称+地址唯一
   * @return shopName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "庆丰包子铺中关村店", value = "店铺名称。直连开店要保证全局店铺名称+地址唯一，间连开店要保证服务商pid下店铺名称+地址唯一")

  public String getShopName() {
    return shopName;
  }


  public void setShopName(String shopName) {
    this.shopName = shopName;
  }


  public AntMerchantExpandShopConsultModel shopType(String shopType) {
    
    this.shopType = shopType;
    return this;
  }

   /**
   * 店铺经营类型，01表示直营，02表示加盟
   * @return shopType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "01", value = "店铺经营类型，01表示直营，02表示加盟")

  public String getShopType() {
    return shopType;
  }


  public void setShopType(String shopType) {
    this.shopType = shopType;
  }


  public AntMerchantExpandShopConsultModel storeId(String storeId) {
    
    this.storeId = storeId;
    return this;
  }

   /**
   * 门店编号，表示该门店在该商户角色id(直连pid，间连smid)下，由商户自己定义的外部门店编号
   * @return storeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "NO0001", value = "门店编号，表示该门店在该商户角色id(直连pid，间连smid)下，由商户自己定义的外部门店编号")

  public String getStoreId() {
    return storeId;
  }


  public void setStoreId(String storeId) {
    this.storeId = storeId;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the AntMerchantExpandShopConsultModel instance itself
   */
  public AntMerchantExpandShopConsultModel putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AntMerchantExpandShopConsultModel antMerchantExpandShopConsultModel = (AntMerchantExpandShopConsultModel) o;
    return Objects.equals(this.bizCards, antMerchantExpandShopConsultModel.bizCards) &&
        Objects.equals(this.brandId, antMerchantExpandShopConsultModel.brandId) &&
        Objects.equals(this.businessAddress, antMerchantExpandShopConsultModel.businessAddress) &&
        Objects.equals(this.businessTime, antMerchantExpandShopConsultModel.businessTime) &&
        Objects.equals(this.certImage, antMerchantExpandShopConsultModel.certImage) &&
        Objects.equals(this.certName, antMerchantExpandShopConsultModel.certName) &&
        Objects.equals(this.certNo, antMerchantExpandShopConsultModel.certNo) &&
        Objects.equals(this.certType, antMerchantExpandShopConsultModel.certType) &&
        Objects.equals(this.contactInfos, antMerchantExpandShopConsultModel.contactInfos) &&
        Objects.equals(this.contactMobile, antMerchantExpandShopConsultModel.contactMobile) &&
        Objects.equals(this.contactPhone, antMerchantExpandShopConsultModel.contactPhone) &&
        Objects.equals(this.extInfos, antMerchantExpandShopConsultModel.extInfos) &&
        Objects.equals(this.ipRoleId, antMerchantExpandShopConsultModel.ipRoleId) &&
        Objects.equals(this.legalCertNo, antMerchantExpandShopConsultModel.legalCertNo) &&
        Objects.equals(this.legalName, antMerchantExpandShopConsultModel.legalName) &&
        Objects.equals(this.licenseAuthLetterImage, antMerchantExpandShopConsultModel.licenseAuthLetterImage) &&
        Objects.equals(this.memo, antMerchantExpandShopConsultModel.memo) &&
        Objects.equals(this.outDoorImages, antMerchantExpandShopConsultModel.outDoorImages) &&
        Objects.equals(this.qualifications, antMerchantExpandShopConsultModel.qualifications) &&
        Objects.equals(this.scene, antMerchantExpandShopConsultModel.scene) &&
        Objects.equals(this.settleAlipayLogonId, antMerchantExpandShopConsultModel.settleAlipayLogonId) &&
        Objects.equals(this.shopCategory, antMerchantExpandShopConsultModel.shopCategory) &&
        Objects.equals(this.shopName, antMerchantExpandShopConsultModel.shopName) &&
        Objects.equals(this.shopType, antMerchantExpandShopConsultModel.shopType) &&
        Objects.equals(this.storeId, antMerchantExpandShopConsultModel.storeId)&&
        Objects.equals(this.additionalProperties, antMerchantExpandShopConsultModel.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bizCards, brandId, businessAddress, businessTime, certImage, certName, certNo, certType, contactInfos, contactMobile, contactPhone, extInfos, ipRoleId, legalCertNo, legalName, licenseAuthLetterImage, memo, outDoorImages, qualifications, scene, settleAlipayLogonId, shopCategory, shopName, shopType, storeId, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AntMerchantExpandShopConsultModel {\n");
    sb.append("    bizCards: ").append(toIndentedString(bizCards)).append("\n");
    sb.append("    brandId: ").append(toIndentedString(brandId)).append("\n");
    sb.append("    businessAddress: ").append(toIndentedString(businessAddress)).append("\n");
    sb.append("    businessTime: ").append(toIndentedString(businessTime)).append("\n");
    sb.append("    certImage: ").append(toIndentedString(certImage)).append("\n");
    sb.append("    certName: ").append(toIndentedString(certName)).append("\n");
    sb.append("    certNo: ").append(toIndentedString(certNo)).append("\n");
    sb.append("    certType: ").append(toIndentedString(certType)).append("\n");
    sb.append("    contactInfos: ").append(toIndentedString(contactInfos)).append("\n");
    sb.append("    contactMobile: ").append(toIndentedString(contactMobile)).append("\n");
    sb.append("    contactPhone: ").append(toIndentedString(contactPhone)).append("\n");
    sb.append("    extInfos: ").append(toIndentedString(extInfos)).append("\n");
    sb.append("    ipRoleId: ").append(toIndentedString(ipRoleId)).append("\n");
    sb.append("    legalCertNo: ").append(toIndentedString(legalCertNo)).append("\n");
    sb.append("    legalName: ").append(toIndentedString(legalName)).append("\n");
    sb.append("    licenseAuthLetterImage: ").append(toIndentedString(licenseAuthLetterImage)).append("\n");
    sb.append("    memo: ").append(toIndentedString(memo)).append("\n");
    sb.append("    outDoorImages: ").append(toIndentedString(outDoorImages)).append("\n");
    sb.append("    qualifications: ").append(toIndentedString(qualifications)).append("\n");
    sb.append("    scene: ").append(toIndentedString(scene)).append("\n");
    sb.append("    settleAlipayLogonId: ").append(toIndentedString(settleAlipayLogonId)).append("\n");
    sb.append("    shopCategory: ").append(toIndentedString(shopCategory)).append("\n");
    sb.append("    shopName: ").append(toIndentedString(shopName)).append("\n");
    sb.append("    shopType: ").append(toIndentedString(shopType)).append("\n");
    sb.append("    storeId: ").append(toIndentedString(storeId)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("biz_cards");
    openapiFields.add("brand_id");
    openapiFields.add("business_address");
    openapiFields.add("business_time");
    openapiFields.add("cert_image");
    openapiFields.add("cert_name");
    openapiFields.add("cert_no");
    openapiFields.add("cert_type");
    openapiFields.add("contact_infos");
    openapiFields.add("contact_mobile");
    openapiFields.add("contact_phone");
    openapiFields.add("ext_infos");
    openapiFields.add("ip_role_id");
    openapiFields.add("legal_cert_no");
    openapiFields.add("legal_name");
    openapiFields.add("license_auth_letter_image");
    openapiFields.add("memo");
    openapiFields.add("out_door_images");
    openapiFields.add("qualifications");
    openapiFields.add("scene");
    openapiFields.add("settle_alipay_logon_id");
    openapiFields.add("shop_category");
    openapiFields.add("shop_name");
    openapiFields.add("shop_type");
    openapiFields.add("store_id");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to AntMerchantExpandShopConsultModel
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (AntMerchantExpandShopConsultModel.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in AntMerchantExpandShopConsultModel is not found in the empty JSON string", AntMerchantExpandShopConsultModel.openapiRequiredFields.toString()));
        }
      }
      JsonArray jsonArraybizCards = jsonObj.getAsJsonArray("biz_cards");
      if (jsonArraybizCards != null) {
        // ensure the json data is an array
        if (!jsonObj.get("biz_cards").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `biz_cards` to be an array in the JSON string but got `%s`", jsonObj.get("biz_cards").toString()));
        }

        // validate the optional field `biz_cards` (array)
        for (int i = 0; i < jsonArraybizCards.size(); i++) {
          SettleCardInfo.validateJsonObject(jsonArraybizCards.get(i).getAsJsonObject());
        };
      }
      if (jsonObj.get("brand_id") != null && !jsonObj.get("brand_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `brand_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("brand_id").toString()));
      }
      // validate the optional field `business_address`
      if (jsonObj.getAsJsonObject("business_address") != null) {
        AddressInfo.validateJsonObject(jsonObj.getAsJsonObject("business_address"));
      }
      JsonArray jsonArraybusinessTime = jsonObj.getAsJsonArray("business_time");
      if (jsonArraybusinessTime != null) {
        // ensure the json data is an array
        if (!jsonObj.get("business_time").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `business_time` to be an array in the JSON string but got `%s`", jsonObj.get("business_time").toString()));
        }

        // validate the optional field `business_time` (array)
        for (int i = 0; i < jsonArraybusinessTime.size(); i++) {
          ShopBusinessTime.validateJsonObject(jsonArraybusinessTime.get(i).getAsJsonObject());
        };
      }
      if (jsonObj.get("cert_image") != null && !jsonObj.get("cert_image").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cert_image` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cert_image").toString()));
      }
      if (jsonObj.get("cert_name") != null && !jsonObj.get("cert_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cert_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cert_name").toString()));
      }
      if (jsonObj.get("cert_no") != null && !jsonObj.get("cert_no").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cert_no` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cert_no").toString()));
      }
      if (jsonObj.get("cert_type") != null && !jsonObj.get("cert_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cert_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cert_type").toString()));
      }
      JsonArray jsonArraycontactInfos = jsonObj.getAsJsonArray("contact_infos");
      if (jsonArraycontactInfos != null) {
        // ensure the json data is an array
        if (!jsonObj.get("contact_infos").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `contact_infos` to be an array in the JSON string but got `%s`", jsonObj.get("contact_infos").toString()));
        }

        // validate the optional field `contact_infos` (array)
        for (int i = 0; i < jsonArraycontactInfos.size(); i++) {
          ContactInfo.validateJsonObject(jsonArraycontactInfos.get(i).getAsJsonObject());
        };
      }
      if (jsonObj.get("contact_mobile") != null && !jsonObj.get("contact_mobile").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contact_mobile` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contact_mobile").toString()));
      }
      if (jsonObj.get("contact_phone") != null && !jsonObj.get("contact_phone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contact_phone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contact_phone").toString()));
      }
      JsonArray jsonArrayextInfos = jsonObj.getAsJsonArray("ext_infos");
      if (jsonArrayextInfos != null) {
        // ensure the json data is an array
        if (!jsonObj.get("ext_infos").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `ext_infos` to be an array in the JSON string but got `%s`", jsonObj.get("ext_infos").toString()));
        }

        // validate the optional field `ext_infos` (array)
        for (int i = 0; i < jsonArrayextInfos.size(); i++) {
          ShopExtInfo.validateJsonObject(jsonArrayextInfos.get(i).getAsJsonObject());
        };
      }
      if (jsonObj.get("ip_role_id") != null && !jsonObj.get("ip_role_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ip_role_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ip_role_id").toString()));
      }
      if (jsonObj.get("legal_cert_no") != null && !jsonObj.get("legal_cert_no").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `legal_cert_no` to be a primitive type in the JSON string but got `%s`", jsonObj.get("legal_cert_no").toString()));
      }
      if (jsonObj.get("legal_name") != null && !jsonObj.get("legal_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `legal_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("legal_name").toString()));
      }
      if (jsonObj.get("license_auth_letter_image") != null && !jsonObj.get("license_auth_letter_image").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `license_auth_letter_image` to be a primitive type in the JSON string but got `%s`", jsonObj.get("license_auth_letter_image").toString()));
      }
      if (jsonObj.get("memo") != null && !jsonObj.get("memo").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `memo` to be a primitive type in the JSON string but got `%s`", jsonObj.get("memo").toString()));
      }
      if (jsonObj.get("out_door_images") != null && !jsonObj.get("out_door_images").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `out_door_images` to be a primitive type in the JSON string but got `%s`", jsonObj.get("out_door_images").toString()));
      }
      JsonArray jsonArrayqualifications = jsonObj.getAsJsonArray("qualifications");
      if (jsonArrayqualifications != null) {
        // ensure the json data is an array
        if (!jsonObj.get("qualifications").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `qualifications` to be an array in the JSON string but got `%s`", jsonObj.get("qualifications").toString()));
        }

        // validate the optional field `qualifications` (array)
        for (int i = 0; i < jsonArrayqualifications.size(); i++) {
          IndustryQualificationInfo.validateJsonObject(jsonArrayqualifications.get(i).getAsJsonObject());
        };
      }
      if (jsonObj.get("scene") != null && !jsonObj.get("scene").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `scene` to be a primitive type in the JSON string but got `%s`", jsonObj.get("scene").toString()));
      }
      if (jsonObj.get("settle_alipay_logon_id") != null && !jsonObj.get("settle_alipay_logon_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `settle_alipay_logon_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("settle_alipay_logon_id").toString()));
      }
      if (jsonObj.get("shop_category") != null && !jsonObj.get("shop_category").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shop_category` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shop_category").toString()));
      }
      if (jsonObj.get("shop_name") != null && !jsonObj.get("shop_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shop_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shop_name").toString()));
      }
      if (jsonObj.get("shop_type") != null && !jsonObj.get("shop_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shop_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shop_type").toString()));
      }
      if (jsonObj.get("store_id") != null && !jsonObj.get("store_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `store_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("store_id").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AntMerchantExpandShopConsultModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AntMerchantExpandShopConsultModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AntMerchantExpandShopConsultModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AntMerchantExpandShopConsultModel.class));

       return (TypeAdapter<T>) new TypeAdapter<AntMerchantExpandShopConsultModel>() {
           @Override
           public void write(JsonWriter out, AntMerchantExpandShopConsultModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public AntMerchantExpandShopConsultModel read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             AntMerchantExpandShopConsultModel instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else { // non-primitive type
                   instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AntMerchantExpandShopConsultModel given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AntMerchantExpandShopConsultModel
  * @throws IOException if the JSON string is invalid with respect to AntMerchantExpandShopConsultModel
  */
  public static AntMerchantExpandShopConsultModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AntMerchantExpandShopConsultModel.class);
  }

 /**
  * Convert an instance of AntMerchantExpandShopConsultModel to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

