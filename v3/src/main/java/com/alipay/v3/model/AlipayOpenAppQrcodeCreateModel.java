/*
 * 支付宝开放平台API
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-06
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.alipay.v3.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.alipay.v3.JSON;

/**
 * AlipayOpenAppQrcodeCreateModel
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class AlipayOpenAppQrcodeCreateModel {
  public static final String SERIALIZED_NAME_COLOR = "color";
  @SerializedName(SERIALIZED_NAME_COLOR)
  private String color;

  public static final String SERIALIZED_NAME_DESCRIBE = "describe";
  @SerializedName(SERIALIZED_NAME_DESCRIBE)
  private String describe;

  public static final String SERIALIZED_NAME_QUERY_PARAM = "query_param";
  @SerializedName(SERIALIZED_NAME_QUERY_PARAM)
  private String queryParam;

  public static final String SERIALIZED_NAME_SIZE = "size";
  @SerializedName(SERIALIZED_NAME_SIZE)
  private String size;

  public static final String SERIALIZED_NAME_URL_PARAM = "url_param";
  @SerializedName(SERIALIZED_NAME_URL_PARAM)
  private String urlParam;

  public AlipayOpenAppQrcodeCreateModel() { 
  }

  public AlipayOpenAppQrcodeCreateModel color(String color) {
    
    this.color = color;
    return this;
  }

   /**
   * 圆形二维码颜色（十六进制颜色色值），仅圆形二维码支持颜色设置，方形二维码默认为黑色。
   * @return color
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0x00BFFF", value = "圆形二维码颜色（十六进制颜色色值），仅圆形二维码支持颜色设置，方形二维码默认为黑色。")

  public String getColor() {
    return color;
  }


  public void setColor(String color) {
    this.color = color;
  }


  public AlipayOpenAppQrcodeCreateModel describe(String describe) {
    
    this.describe = describe;
    return this;
  }

   /**
   * 对应的二维码描述
   * @return describe
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "二维码描述", value = "对应的二维码描述")

  public String getDescribe() {
    return describe;
  }


  public void setDescribe(String describe) {
    this.describe = describe;
  }


  public AlipayOpenAppQrcodeCreateModel queryParam(String queryParam) {
    
    this.queryParam = queryParam;
    return this;
  }

   /**
   * 小程序启动参数，内容按照格式为参数名&#x3D;参数值&amp;参数名&#x3D;参数值。打开小程序的query ，在小程序 onLaunch的方法中获取。可查看 &lt;a href&#x3D;\&quot;https://opendocs.alipay.com/support/01rb2a\&quot;&gt;如何获取各种场景的启动参数&lt;/a&gt;。
   * @return queryParam
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "key1=value1&key2=value2", value = "小程序启动参数，内容按照格式为参数名=参数值&参数名=参数值。打开小程序的query ，在小程序 onLaunch的方法中获取。可查看 <a href=\"https://opendocs.alipay.com/support/01rb2a\">如何获取各种场景的启动参数</a>。")

  public String getQueryParam() {
    return queryParam;
  }


  public void setQueryParam(String queryParam) {
    this.queryParam = queryParam;
  }


  public AlipayOpenAppQrcodeCreateModel size(String size) {
    
    this.size = size;
    return this;
  }

   /**
   * 合成后图片的大小规格，有s、m、l三档可选。
   * @return size
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "s", value = "合成后图片的大小规格，有s、m、l三档可选。")

  public String getSize() {
    return size;
  }


  public void setSize(String size) {
    this.size = size;
  }


  public AlipayOpenAppQrcodeCreateModel urlParam(String urlParam) {
    
    this.urlParam = urlParam;
    return this;
  }

   /**
   * page/component/component-pages/view/view为小程序中能访问到的页面路径
   * @return urlParam
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "page/component/component-pages/view/view", value = "page/component/component-pages/view/view为小程序中能访问到的页面路径")

  public String getUrlParam() {
    return urlParam;
  }


  public void setUrlParam(String urlParam) {
    this.urlParam = urlParam;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the AlipayOpenAppQrcodeCreateModel instance itself
   */
  public AlipayOpenAppQrcodeCreateModel putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AlipayOpenAppQrcodeCreateModel alipayOpenAppQrcodeCreateModel = (AlipayOpenAppQrcodeCreateModel) o;
    return Objects.equals(this.color, alipayOpenAppQrcodeCreateModel.color) &&
        Objects.equals(this.describe, alipayOpenAppQrcodeCreateModel.describe) &&
        Objects.equals(this.queryParam, alipayOpenAppQrcodeCreateModel.queryParam) &&
        Objects.equals(this.size, alipayOpenAppQrcodeCreateModel.size) &&
        Objects.equals(this.urlParam, alipayOpenAppQrcodeCreateModel.urlParam)&&
        Objects.equals(this.additionalProperties, alipayOpenAppQrcodeCreateModel.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(color, describe, queryParam, size, urlParam, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AlipayOpenAppQrcodeCreateModel {\n");
    sb.append("    color: ").append(toIndentedString(color)).append("\n");
    sb.append("    describe: ").append(toIndentedString(describe)).append("\n");
    sb.append("    queryParam: ").append(toIndentedString(queryParam)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    urlParam: ").append(toIndentedString(urlParam)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("color");
    openapiFields.add("describe");
    openapiFields.add("query_param");
    openapiFields.add("size");
    openapiFields.add("url_param");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to AlipayOpenAppQrcodeCreateModel
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (AlipayOpenAppQrcodeCreateModel.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in AlipayOpenAppQrcodeCreateModel is not found in the empty JSON string", AlipayOpenAppQrcodeCreateModel.openapiRequiredFields.toString()));
        }
      }
      if (jsonObj.get("color") != null && !jsonObj.get("color").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `color` to be a primitive type in the JSON string but got `%s`", jsonObj.get("color").toString()));
      }
      if (jsonObj.get("describe") != null && !jsonObj.get("describe").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `describe` to be a primitive type in the JSON string but got `%s`", jsonObj.get("describe").toString()));
      }
      if (jsonObj.get("query_param") != null && !jsonObj.get("query_param").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `query_param` to be a primitive type in the JSON string but got `%s`", jsonObj.get("query_param").toString()));
      }
      if (jsonObj.get("size") != null && !jsonObj.get("size").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `size` to be a primitive type in the JSON string but got `%s`", jsonObj.get("size").toString()));
      }
      if (jsonObj.get("url_param") != null && !jsonObj.get("url_param").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url_param` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url_param").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AlipayOpenAppQrcodeCreateModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AlipayOpenAppQrcodeCreateModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AlipayOpenAppQrcodeCreateModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AlipayOpenAppQrcodeCreateModel.class));

       return (TypeAdapter<T>) new TypeAdapter<AlipayOpenAppQrcodeCreateModel>() {
           @Override
           public void write(JsonWriter out, AlipayOpenAppQrcodeCreateModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public AlipayOpenAppQrcodeCreateModel read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             AlipayOpenAppQrcodeCreateModel instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else { // non-primitive type
                   instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AlipayOpenAppQrcodeCreateModel given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AlipayOpenAppQrcodeCreateModel
  * @throws IOException if the JSON string is invalid with respect to AlipayOpenAppQrcodeCreateModel
  */
  public static AlipayOpenAppQrcodeCreateModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AlipayOpenAppQrcodeCreateModel.class);
  }

 /**
  * Convert an instance of AlipayOpenAppQrcodeCreateModel to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

