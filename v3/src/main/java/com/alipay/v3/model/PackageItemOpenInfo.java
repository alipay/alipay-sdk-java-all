/*
 * 支付宝开放平台API
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-03-05
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.alipay.v3.model;

import java.util.Objects;
import java.util.Arrays;
import com.alipay.v3.model.ConsumeOutputInfo;
import com.alipay.v3.model.InvoiceOutputInfo;
import com.alipay.v3.model.OcrNormalScanInfo;
import com.alipay.v3.model.OcrPlaneScanInfo;
import com.alipay.v3.model.OcrTaxiScanInfo;
import com.alipay.v3.model.OcrTrainScanInfo;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.alipay.v3.JSON;

/**
 * PackageItemOpenInfo
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class PackageItemOpenInfo {
  public static final String SERIALIZED_NAME_CONSUME_OUTPUT_INFO = "consume_output_info";
  @SerializedName(SERIALIZED_NAME_CONSUME_OUTPUT_INFO)
  private ConsumeOutputInfo consumeOutputInfo;

  public static final String SERIALIZED_NAME_FILE_DOWNLOAD_URL = "file_download_url";
  @SerializedName(SERIALIZED_NAME_FILE_DOWNLOAD_URL)
  private String fileDownloadUrl;

  public static final String SERIALIZED_NAME_FILE_TYPE = "file_type";
  @SerializedName(SERIALIZED_NAME_FILE_TYPE)
  private String fileType;

  public static final String SERIALIZED_NAME_INVOICE_OUTPUT_INFO = "invoice_output_info";
  @SerializedName(SERIALIZED_NAME_INVOICE_OUTPUT_INFO)
  private InvoiceOutputInfo invoiceOutputInfo;

  public static final String SERIALIZED_NAME_ITEM_SOURCE = "item_source";
  @SerializedName(SERIALIZED_NAME_ITEM_SOURCE)
  private String itemSource;

  public static final String SERIALIZED_NAME_ITEM_SUB_TYPE = "item_sub_type";
  @SerializedName(SERIALIZED_NAME_ITEM_SUB_TYPE)
  private String itemSubType;

  public static final String SERIALIZED_NAME_ITEM_TYPE = "item_type";
  @SerializedName(SERIALIZED_NAME_ITEM_TYPE)
  private String itemType;

  public static final String SERIALIZED_NAME_OCR_NORMAL_SCAN_INFO = "ocr_normal_scan_info";
  @SerializedName(SERIALIZED_NAME_OCR_NORMAL_SCAN_INFO)
  private OcrNormalScanInfo ocrNormalScanInfo;

  public static final String SERIALIZED_NAME_OCR_PLANE_SCAN_INFO = "ocr_plane_scan_info";
  @SerializedName(SERIALIZED_NAME_OCR_PLANE_SCAN_INFO)
  private OcrPlaneScanInfo ocrPlaneScanInfo;

  public static final String SERIALIZED_NAME_OCR_TAXI_SCAN_INFO = "ocr_taxi_scan_info";
  @SerializedName(SERIALIZED_NAME_OCR_TAXI_SCAN_INFO)
  private OcrTaxiScanInfo ocrTaxiScanInfo;

  public static final String SERIALIZED_NAME_OCR_TRAIN_SCAN_INFO = "ocr_train_scan_info";
  @SerializedName(SERIALIZED_NAME_OCR_TRAIN_SCAN_INFO)
  private OcrTrainScanInfo ocrTrainScanInfo;

  public PackageItemOpenInfo() { 
  }

  public PackageItemOpenInfo consumeOutputInfo(ConsumeOutputInfo consumeOutputInfo) {
    
    this.consumeOutputInfo = consumeOutputInfo;
    return this;
  }

   /**
   * Get consumeOutputInfo
   * @return consumeOutputInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ConsumeOutputInfo getConsumeOutputInfo() {
    return consumeOutputInfo;
  }


  public void setConsumeOutputInfo(ConsumeOutputInfo consumeOutputInfo) {
    this.consumeOutputInfo = consumeOutputInfo;
  }


  public PackageItemOpenInfo fileDownloadUrl(String fileDownloadUrl) {
    
    this.fileDownloadUrl = fileDownloadUrl;
    return this;
  }

   /**
   * 发票文件下载链接
   * @return fileDownloadUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "http://txffp.oss-cn-beijing.aliyuncs.com/zfb/11b7678a6ab04271afd2c4dfd*******?Expires=1574665315&OSSAccessKeyId=LTAIYAJb********&Signature=%2BD6AX5gswetzBdz************%3D", value = "发票文件下载链接")

  public String getFileDownloadUrl() {
    return fileDownloadUrl;
  }


  public void setFileDownloadUrl(String fileDownloadUrl) {
    this.fileDownloadUrl = fileDownloadUrl;
  }


  public PackageItemOpenInfo fileType(String fileType) {
    
    this.fileType = fileType;
    return this;
  }

   /**
   * 文件类型，如pdf，ofd，jpg
   * @return fileType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "pdf", value = "文件类型，如pdf，ofd，jpg")

  public String getFileType() {
    return fileType;
  }


  public void setFileType(String fileType) {
    this.fileType = fileType;
  }


  public PackageItemOpenInfo invoiceOutputInfo(InvoiceOutputInfo invoiceOutputInfo) {
    
    this.invoiceOutputInfo = invoiceOutputInfo;
    return this;
  }

   /**
   * Get invoiceOutputInfo
   * @return invoiceOutputInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public InvoiceOutputInfo getInvoiceOutputInfo() {
    return invoiceOutputInfo;
  }


  public void setInvoiceOutputInfo(InvoiceOutputInfo invoiceOutputInfo) {
    this.invoiceOutputInfo = invoiceOutputInfo;
  }


  public PackageItemOpenInfo itemSource(String itemSource) {
    
    this.itemSource = itemSource;
    return this;
  }

   /**
   * 项目来源，如：ocr\\einvoice\\consume
   * @return itemSource
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "ocr", value = "项目来源，如：ocr\\einvoice\\consume")

  public String getItemSource() {
    return itemSource;
  }


  public void setItemSource(String itemSource) {
    this.itemSource = itemSource;
  }


  public PackageItemOpenInfo itemSubType(String itemSubType) {
    
    this.itemSubType = itemSubType;
    return this;
  }

   /**
   * 项目子类，如：出租车、火车、飞机等
   * @return itemSubType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "出租车", value = "项目子类，如：出租车、火车、飞机等")

  public String getItemSubType() {
    return itemSubType;
  }


  public void setItemSubType(String itemSubType) {
    this.itemSubType = itemSubType;
  }


  public PackageItemOpenInfo itemType(String itemType) {
    
    this.itemType = itemType;
    return this;
  }

   /**
   * 项目大类，如：餐饮美食、酒店住宿、差旅出行等
   * @return itemType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "餐饮美食", value = "项目大类，如：餐饮美食、酒店住宿、差旅出行等")

  public String getItemType() {
    return itemType;
  }


  public void setItemType(String itemType) {
    this.itemType = itemType;
  }


  public PackageItemOpenInfo ocrNormalScanInfo(OcrNormalScanInfo ocrNormalScanInfo) {
    
    this.ocrNormalScanInfo = ocrNormalScanInfo;
    return this;
  }

   /**
   * Get ocrNormalScanInfo
   * @return ocrNormalScanInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OcrNormalScanInfo getOcrNormalScanInfo() {
    return ocrNormalScanInfo;
  }


  public void setOcrNormalScanInfo(OcrNormalScanInfo ocrNormalScanInfo) {
    this.ocrNormalScanInfo = ocrNormalScanInfo;
  }


  public PackageItemOpenInfo ocrPlaneScanInfo(OcrPlaneScanInfo ocrPlaneScanInfo) {
    
    this.ocrPlaneScanInfo = ocrPlaneScanInfo;
    return this;
  }

   /**
   * Get ocrPlaneScanInfo
   * @return ocrPlaneScanInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OcrPlaneScanInfo getOcrPlaneScanInfo() {
    return ocrPlaneScanInfo;
  }


  public void setOcrPlaneScanInfo(OcrPlaneScanInfo ocrPlaneScanInfo) {
    this.ocrPlaneScanInfo = ocrPlaneScanInfo;
  }


  public PackageItemOpenInfo ocrTaxiScanInfo(OcrTaxiScanInfo ocrTaxiScanInfo) {
    
    this.ocrTaxiScanInfo = ocrTaxiScanInfo;
    return this;
  }

   /**
   * Get ocrTaxiScanInfo
   * @return ocrTaxiScanInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OcrTaxiScanInfo getOcrTaxiScanInfo() {
    return ocrTaxiScanInfo;
  }


  public void setOcrTaxiScanInfo(OcrTaxiScanInfo ocrTaxiScanInfo) {
    this.ocrTaxiScanInfo = ocrTaxiScanInfo;
  }


  public PackageItemOpenInfo ocrTrainScanInfo(OcrTrainScanInfo ocrTrainScanInfo) {
    
    this.ocrTrainScanInfo = ocrTrainScanInfo;
    return this;
  }

   /**
   * Get ocrTrainScanInfo
   * @return ocrTrainScanInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OcrTrainScanInfo getOcrTrainScanInfo() {
    return ocrTrainScanInfo;
  }


  public void setOcrTrainScanInfo(OcrTrainScanInfo ocrTrainScanInfo) {
    this.ocrTrainScanInfo = ocrTrainScanInfo;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the PackageItemOpenInfo instance itself
   */
  public PackageItemOpenInfo putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PackageItemOpenInfo packageItemOpenInfo = (PackageItemOpenInfo) o;
    return Objects.equals(this.consumeOutputInfo, packageItemOpenInfo.consumeOutputInfo) &&
        Objects.equals(this.fileDownloadUrl, packageItemOpenInfo.fileDownloadUrl) &&
        Objects.equals(this.fileType, packageItemOpenInfo.fileType) &&
        Objects.equals(this.invoiceOutputInfo, packageItemOpenInfo.invoiceOutputInfo) &&
        Objects.equals(this.itemSource, packageItemOpenInfo.itemSource) &&
        Objects.equals(this.itemSubType, packageItemOpenInfo.itemSubType) &&
        Objects.equals(this.itemType, packageItemOpenInfo.itemType) &&
        Objects.equals(this.ocrNormalScanInfo, packageItemOpenInfo.ocrNormalScanInfo) &&
        Objects.equals(this.ocrPlaneScanInfo, packageItemOpenInfo.ocrPlaneScanInfo) &&
        Objects.equals(this.ocrTaxiScanInfo, packageItemOpenInfo.ocrTaxiScanInfo) &&
        Objects.equals(this.ocrTrainScanInfo, packageItemOpenInfo.ocrTrainScanInfo)&&
        Objects.equals(this.additionalProperties, packageItemOpenInfo.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(consumeOutputInfo, fileDownloadUrl, fileType, invoiceOutputInfo, itemSource, itemSubType, itemType, ocrNormalScanInfo, ocrPlaneScanInfo, ocrTaxiScanInfo, ocrTrainScanInfo, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PackageItemOpenInfo {\n");
    sb.append("    consumeOutputInfo: ").append(toIndentedString(consumeOutputInfo)).append("\n");
    sb.append("    fileDownloadUrl: ").append(toIndentedString(fileDownloadUrl)).append("\n");
    sb.append("    fileType: ").append(toIndentedString(fileType)).append("\n");
    sb.append("    invoiceOutputInfo: ").append(toIndentedString(invoiceOutputInfo)).append("\n");
    sb.append("    itemSource: ").append(toIndentedString(itemSource)).append("\n");
    sb.append("    itemSubType: ").append(toIndentedString(itemSubType)).append("\n");
    sb.append("    itemType: ").append(toIndentedString(itemType)).append("\n");
    sb.append("    ocrNormalScanInfo: ").append(toIndentedString(ocrNormalScanInfo)).append("\n");
    sb.append("    ocrPlaneScanInfo: ").append(toIndentedString(ocrPlaneScanInfo)).append("\n");
    sb.append("    ocrTaxiScanInfo: ").append(toIndentedString(ocrTaxiScanInfo)).append("\n");
    sb.append("    ocrTrainScanInfo: ").append(toIndentedString(ocrTrainScanInfo)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("consume_output_info");
    openapiFields.add("file_download_url");
    openapiFields.add("file_type");
    openapiFields.add("invoice_output_info");
    openapiFields.add("item_source");
    openapiFields.add("item_sub_type");
    openapiFields.add("item_type");
    openapiFields.add("ocr_normal_scan_info");
    openapiFields.add("ocr_plane_scan_info");
    openapiFields.add("ocr_taxi_scan_info");
    openapiFields.add("ocr_train_scan_info");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to PackageItemOpenInfo
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (PackageItemOpenInfo.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in PackageItemOpenInfo is not found in the empty JSON string", PackageItemOpenInfo.openapiRequiredFields.toString()));
        }
      }
      // validate the optional field `consume_output_info`
      if (jsonObj.getAsJsonObject("consume_output_info") != null) {
        ConsumeOutputInfo.validateJsonObject(jsonObj.getAsJsonObject("consume_output_info"));
      }
      if (jsonObj.get("file_download_url") != null && !jsonObj.get("file_download_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `file_download_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("file_download_url").toString()));
      }
      if (jsonObj.get("file_type") != null && !jsonObj.get("file_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `file_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("file_type").toString()));
      }
      // validate the optional field `invoice_output_info`
      if (jsonObj.getAsJsonObject("invoice_output_info") != null) {
        InvoiceOutputInfo.validateJsonObject(jsonObj.getAsJsonObject("invoice_output_info"));
      }
      if (jsonObj.get("item_source") != null && !jsonObj.get("item_source").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `item_source` to be a primitive type in the JSON string but got `%s`", jsonObj.get("item_source").toString()));
      }
      if (jsonObj.get("item_sub_type") != null && !jsonObj.get("item_sub_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `item_sub_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("item_sub_type").toString()));
      }
      if (jsonObj.get("item_type") != null && !jsonObj.get("item_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `item_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("item_type").toString()));
      }
      // validate the optional field `ocr_normal_scan_info`
      if (jsonObj.getAsJsonObject("ocr_normal_scan_info") != null) {
        OcrNormalScanInfo.validateJsonObject(jsonObj.getAsJsonObject("ocr_normal_scan_info"));
      }
      // validate the optional field `ocr_plane_scan_info`
      if (jsonObj.getAsJsonObject("ocr_plane_scan_info") != null) {
        OcrPlaneScanInfo.validateJsonObject(jsonObj.getAsJsonObject("ocr_plane_scan_info"));
      }
      // validate the optional field `ocr_taxi_scan_info`
      if (jsonObj.getAsJsonObject("ocr_taxi_scan_info") != null) {
        OcrTaxiScanInfo.validateJsonObject(jsonObj.getAsJsonObject("ocr_taxi_scan_info"));
      }
      // validate the optional field `ocr_train_scan_info`
      if (jsonObj.getAsJsonObject("ocr_train_scan_info") != null) {
        OcrTrainScanInfo.validateJsonObject(jsonObj.getAsJsonObject("ocr_train_scan_info"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PackageItemOpenInfo.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PackageItemOpenInfo' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PackageItemOpenInfo> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PackageItemOpenInfo.class));

       return (TypeAdapter<T>) new TypeAdapter<PackageItemOpenInfo>() {
           @Override
           public void write(JsonWriter out, PackageItemOpenInfo value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public PackageItemOpenInfo read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             PackageItemOpenInfo instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else { // non-primitive type
                   instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of PackageItemOpenInfo given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of PackageItemOpenInfo
  * @throws IOException if the JSON string is invalid with respect to PackageItemOpenInfo
  */
  public static PackageItemOpenInfo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PackageItemOpenInfo.class);
  }

 /**
  * Convert an instance of PackageItemOpenInfo to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

