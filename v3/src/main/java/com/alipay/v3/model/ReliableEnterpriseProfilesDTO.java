/*
 * 支付宝开放平台API
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-08-26
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.alipay.v3.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.alipay.v3.JSON;

/**
 * ReliableEnterpriseProfilesDTO
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ReliableEnterpriseProfilesDTO {
  public static final String SERIALIZED_NAME_ACCESS_CHANNEL = "access_channel";
  @SerializedName(SERIALIZED_NAME_ACCESS_CHANNEL)
  private String accessChannel;

  public static final String SERIALIZED_NAME_ACTIVITY_LEVEL = "activity_level";
  @SerializedName(SERIALIZED_NAME_ACTIVITY_LEVEL)
  private String activityLevel;

  public static final String SERIALIZED_NAME_AUTH_TYPE = "auth_type";
  @SerializedName(SERIALIZED_NAME_AUTH_TYPE)
  private String authType;

  public static final String SERIALIZED_NAME_BIZ_LICENSE_NO = "biz_license_no";
  @SerializedName(SERIALIZED_NAME_BIZ_LICENSE_NO)
  private String bizLicenseNo;

  public static final String SERIALIZED_NAME_BIZ_LICENSE_URL = "biz_license_url";
  @SerializedName(SERIALIZED_NAME_BIZ_LICENSE_URL)
  private String bizLicenseUrl;

  public static final String SERIALIZED_NAME_COUNT_EMPLOYEE = "count_employee";
  @SerializedName(SERIALIZED_NAME_COUNT_EMPLOYEE)
  private String countEmployee;

  public static final String SERIALIZED_NAME_LEGAL_PERSON_CERT_NO = "legal_person_cert_no";
  @SerializedName(SERIALIZED_NAME_LEGAL_PERSON_CERT_NO)
  private String legalPersonCertNo;

  public static final String SERIALIZED_NAME_PLATFORM_GMT_CREATE = "platform_gmt_create";
  @SerializedName(SERIALIZED_NAME_PLATFORM_GMT_CREATE)
  private String platformGmtCreate;

  public static final String SERIALIZED_NAME_TAX_NO = "tax_no";
  @SerializedName(SERIALIZED_NAME_TAX_NO)
  private String taxNo;

  public ReliableEnterpriseProfilesDTO() { 
  }

  public ReliableEnterpriseProfilesDTO accessChannel(String accessChannel) {
    
    this.accessChannel = accessChannel;
    return this;
  }

   /**
   * 企业注册来源渠道
   * @return accessChannel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "DING_EC_CARD", value = "企业注册来源渠道")

  public String getAccessChannel() {
    return accessChannel;
  }


  public void setAccessChannel(String accessChannel) {
    this.accessChannel = accessChannel;
  }


  public ReliableEnterpriseProfilesDTO activityLevel(String activityLevel) {
    
    this.activityLevel = activityLevel;
    return this;
  }

   /**
   * 企业在来源渠道（如钉钉）的活跃度
   * @return activityLevel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "L1", value = "企业在来源渠道（如钉钉）的活跃度")

  public String getActivityLevel() {
    return activityLevel;
  }


  public void setActivityLevel(String activityLevel) {
    this.activityLevel = activityLevel;
  }


  public ReliableEnterpriseProfilesDTO authType(String authType) {
    
    this.authType = authType;
    return this;
  }

   /**
   * 企业在来源渠道（如钉钉）的认证类型
   * @return authType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "企业在来源渠道（如钉钉）的认证类型")

  public String getAuthType() {
    return authType;
  }


  public void setAuthType(String authType) {
    this.authType = authType;
  }


  public ReliableEnterpriseProfilesDTO bizLicenseNo(String bizLicenseNo) {
    
    this.bizLicenseNo = bizLicenseNo;
    return this;
  }

   /**
   * 企业营业执照编码，适用于未三证合一的企业
   * @return bizLicenseNo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "91310230MA1K054321", value = "企业营业执照编码，适用于未三证合一的企业")

  public String getBizLicenseNo() {
    return bizLicenseNo;
  }


  public void setBizLicenseNo(String bizLicenseNo) {
    this.bizLicenseNo = bizLicenseNo;
  }


  public ReliableEnterpriseProfilesDTO bizLicenseUrl(String bizLicenseUrl) {
    
    this.bizLicenseUrl = bizLicenseUrl;
    return this;
  }

   /**
   * 企业在来源渠道（如钉钉）的营业执照照片URL
   * @return bizLicenseUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "https://xxxx", value = "企业在来源渠道（如钉钉）的营业执照照片URL")

  public String getBizLicenseUrl() {
    return bizLicenseUrl;
  }


  public void setBizLicenseUrl(String bizLicenseUrl) {
    this.bizLicenseUrl = bizLicenseUrl;
  }


  public ReliableEnterpriseProfilesDTO countEmployee(String countEmployee) {
    
    this.countEmployee = countEmployee;
    return this;
  }

   /**
   * 企业当前的员工数规模区间
   * @return countEmployee
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "(1,10]", value = "企业当前的员工数规模区间")

  public String getCountEmployee() {
    return countEmployee;
  }


  public void setCountEmployee(String countEmployee) {
    this.countEmployee = countEmployee;
  }


  public ReliableEnterpriseProfilesDTO legalPersonCertNo(String legalPersonCertNo) {
    
    this.legalPersonCertNo = legalPersonCertNo;
    return this;
  }

   /**
   * 企业法人的身份证号码
   * @return legalPersonCertNo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "110101199001011237", value = "企业法人的身份证号码")

  public String getLegalPersonCertNo() {
    return legalPersonCertNo;
  }


  public void setLegalPersonCertNo(String legalPersonCertNo) {
    this.legalPersonCertNo = legalPersonCertNo;
  }


  public ReliableEnterpriseProfilesDTO platformGmtCreate(String platformGmtCreate) {
    
    this.platformGmtCreate = platformGmtCreate;
    return this;
  }

   /**
   * 企业在来源渠道（如钉钉）的注册时间
   * @return platformGmtCreate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2025-01-01 10:00:00", value = "企业在来源渠道（如钉钉）的注册时间")

  public String getPlatformGmtCreate() {
    return platformGmtCreate;
  }


  public void setPlatformGmtCreate(String platformGmtCreate) {
    this.platformGmtCreate = platformGmtCreate;
  }


  public ReliableEnterpriseProfilesDTO taxNo(String taxNo) {
    
    this.taxNo = taxNo;
    return this;
  }

   /**
   * 企业纳税人识别号，适用于未三证合一的企业
   * @return taxNo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "91310230MA1K051234", value = "企业纳税人识别号，适用于未三证合一的企业")

  public String getTaxNo() {
    return taxNo;
  }


  public void setTaxNo(String taxNo) {
    this.taxNo = taxNo;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the ReliableEnterpriseProfilesDTO instance itself
   */
  public ReliableEnterpriseProfilesDTO putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReliableEnterpriseProfilesDTO reliableEnterpriseProfilesDTO = (ReliableEnterpriseProfilesDTO) o;
    return Objects.equals(this.accessChannel, reliableEnterpriseProfilesDTO.accessChannel) &&
        Objects.equals(this.activityLevel, reliableEnterpriseProfilesDTO.activityLevel) &&
        Objects.equals(this.authType, reliableEnterpriseProfilesDTO.authType) &&
        Objects.equals(this.bizLicenseNo, reliableEnterpriseProfilesDTO.bizLicenseNo) &&
        Objects.equals(this.bizLicenseUrl, reliableEnterpriseProfilesDTO.bizLicenseUrl) &&
        Objects.equals(this.countEmployee, reliableEnterpriseProfilesDTO.countEmployee) &&
        Objects.equals(this.legalPersonCertNo, reliableEnterpriseProfilesDTO.legalPersonCertNo) &&
        Objects.equals(this.platformGmtCreate, reliableEnterpriseProfilesDTO.platformGmtCreate) &&
        Objects.equals(this.taxNo, reliableEnterpriseProfilesDTO.taxNo)&&
        Objects.equals(this.additionalProperties, reliableEnterpriseProfilesDTO.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessChannel, activityLevel, authType, bizLicenseNo, bizLicenseUrl, countEmployee, legalPersonCertNo, platformGmtCreate, taxNo, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReliableEnterpriseProfilesDTO {\n");
    sb.append("    accessChannel: ").append(toIndentedString(accessChannel)).append("\n");
    sb.append("    activityLevel: ").append(toIndentedString(activityLevel)).append("\n");
    sb.append("    authType: ").append(toIndentedString(authType)).append("\n");
    sb.append("    bizLicenseNo: ").append(toIndentedString(bizLicenseNo)).append("\n");
    sb.append("    bizLicenseUrl: ").append(toIndentedString(bizLicenseUrl)).append("\n");
    sb.append("    countEmployee: ").append(toIndentedString(countEmployee)).append("\n");
    sb.append("    legalPersonCertNo: ").append(toIndentedString(legalPersonCertNo)).append("\n");
    sb.append("    platformGmtCreate: ").append(toIndentedString(platformGmtCreate)).append("\n");
    sb.append("    taxNo: ").append(toIndentedString(taxNo)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("access_channel");
    openapiFields.add("activity_level");
    openapiFields.add("auth_type");
    openapiFields.add("biz_license_no");
    openapiFields.add("biz_license_url");
    openapiFields.add("count_employee");
    openapiFields.add("legal_person_cert_no");
    openapiFields.add("platform_gmt_create");
    openapiFields.add("tax_no");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ReliableEnterpriseProfilesDTO
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (ReliableEnterpriseProfilesDTO.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in ReliableEnterpriseProfilesDTO is not found in the empty JSON string", ReliableEnterpriseProfilesDTO.openapiRequiredFields.toString()));
        }
      }
      if (jsonObj.get("access_channel") != null && !jsonObj.get("access_channel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `access_channel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("access_channel").toString()));
      }
      if (jsonObj.get("activity_level") != null && !jsonObj.get("activity_level").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `activity_level` to be a primitive type in the JSON string but got `%s`", jsonObj.get("activity_level").toString()));
      }
      if (jsonObj.get("auth_type") != null && !jsonObj.get("auth_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `auth_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("auth_type").toString()));
      }
      if (jsonObj.get("biz_license_no") != null && !jsonObj.get("biz_license_no").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `biz_license_no` to be a primitive type in the JSON string but got `%s`", jsonObj.get("biz_license_no").toString()));
      }
      if (jsonObj.get("biz_license_url") != null && !jsonObj.get("biz_license_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `biz_license_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("biz_license_url").toString()));
      }
      if (jsonObj.get("count_employee") != null && !jsonObj.get("count_employee").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `count_employee` to be a primitive type in the JSON string but got `%s`", jsonObj.get("count_employee").toString()));
      }
      if (jsonObj.get("legal_person_cert_no") != null && !jsonObj.get("legal_person_cert_no").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `legal_person_cert_no` to be a primitive type in the JSON string but got `%s`", jsonObj.get("legal_person_cert_no").toString()));
      }
      if (jsonObj.get("platform_gmt_create") != null && !jsonObj.get("platform_gmt_create").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `platform_gmt_create` to be a primitive type in the JSON string but got `%s`", jsonObj.get("platform_gmt_create").toString()));
      }
      if (jsonObj.get("tax_no") != null && !jsonObj.get("tax_no").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tax_no` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tax_no").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ReliableEnterpriseProfilesDTO.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ReliableEnterpriseProfilesDTO' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ReliableEnterpriseProfilesDTO> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ReliableEnterpriseProfilesDTO.class));

       return (TypeAdapter<T>) new TypeAdapter<ReliableEnterpriseProfilesDTO>() {
           @Override
           public void write(JsonWriter out, ReliableEnterpriseProfilesDTO value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public ReliableEnterpriseProfilesDTO read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             ReliableEnterpriseProfilesDTO instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else { // non-primitive type
                   instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ReliableEnterpriseProfilesDTO given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ReliableEnterpriseProfilesDTO
  * @throws IOException if the JSON string is invalid with respect to ReliableEnterpriseProfilesDTO
  */
  public static ReliableEnterpriseProfilesDTO fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ReliableEnterpriseProfilesDTO.class);
  }

 /**
  * Convert an instance of ReliableEnterpriseProfilesDTO to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

