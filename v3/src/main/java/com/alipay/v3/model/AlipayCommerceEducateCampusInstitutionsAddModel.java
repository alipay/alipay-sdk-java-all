/*
 * 支付宝开放平台API
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.alipay.v3.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.alipay.v3.JSON;

/**
 * AlipayCommerceEducateCampusInstitutionsAddModel
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class AlipayCommerceEducateCampusInstitutionsAddModel {
  public static final String SERIALIZED_NAME_CARD_PICT_URL = "card_pict_url";
  @SerializedName(SERIALIZED_NAME_CARD_PICT_URL)
  private String cardPictUrl;

  public static final String SERIALIZED_NAME_CITY_CODE = "city_code";
  @SerializedName(SERIALIZED_NAME_CITY_CODE)
  private String cityCode;

  public static final String SERIALIZED_NAME_INST_NAME = "inst_name";
  @SerializedName(SERIALIZED_NAME_INST_NAME)
  private String instName;

  public static final String SERIALIZED_NAME_INST_STD_CODE = "inst_std_code";
  @SerializedName(SERIALIZED_NAME_INST_STD_CODE)
  private String instStdCode;

  public static final String SERIALIZED_NAME_LEARNING_STAGE = "learning_stage";
  @SerializedName(SERIALIZED_NAME_LEARNING_STAGE)
  private String learningStage;

  public static final String SERIALIZED_NAME_PROVINCE_CODE = "province_code";
  @SerializedName(SERIALIZED_NAME_PROVINCE_CODE)
  private String provinceCode;

  public static final String SERIALIZED_NAME_SCHOOL_PROPERTY = "school_property";
  @SerializedName(SERIALIZED_NAME_SCHOOL_PROPERTY)
  private String schoolProperty;

  public AlipayCommerceEducateCampusInstitutionsAddModel() { 
  }

  public AlipayCommerceEducateCampusInstitutionsAddModel cardPictUrl(String cardPictUrl) {
    
    this.cardPictUrl = cardPictUrl;
    return this;
  }

   /**
   * 事业单位法人证书或办学许可证的图片。入驻学校时，如果流入人工审核，会根据此图片进行辅助验证。
   * @return cardPictUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "A*HZ9NTamTmx4AAAAAAAAAAAAAAQAAAQ", value = "事业单位法人证书或办学许可证的图片。入驻学校时，如果流入人工审核，会根据此图片进行辅助验证。")

  public String getCardPictUrl() {
    return cardPictUrl;
  }


  public void setCardPictUrl(String cardPictUrl) {
    this.cardPictUrl = cardPictUrl;
  }


  public AlipayCommerceEducateCampusInstitutionsAddModel cityCode(String cityCode) {
    
    this.cityCode = cityCode;
    return this;
  }

   /**
   * 市
   * @return cityCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "370800", value = "市")

  public String getCityCode() {
    return cityCode;
  }


  public void setCityCode(String cityCode) {
    this.cityCode = cityCode;
  }


  public AlipayCommerceEducateCampusInstitutionsAddModel instName(String instName) {
    
    this.instName = instName;
    return this;
  }

   /**
   * 入驻的学校名称，必须是完整的学校全称
   * @return instName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "复旦大学", value = "入驻的学校名称，必须是完整的学校全称")

  public String getInstName() {
    return instName;
  }


  public void setInstName(String instName) {
    this.instName = instName;
  }


  public AlipayCommerceEducateCampusInstitutionsAddModel instStdCode(String instStdCode) {
    
    this.instStdCode = instStdCode;
    return this;
  }

   /**
   * 学校外标，使用统一社会信用编码
   * @return instStdCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "3451000031", value = "学校外标，使用统一社会信用编码")

  public String getInstStdCode() {
    return instStdCode;
  }


  public void setInstStdCode(String instStdCode) {
    this.instStdCode = instStdCode;
  }


  public AlipayCommerceEducateCampusInstitutionsAddModel learningStage(String learningStage) {
    
    this.learningStage = learningStage;
    return this;
  }

   /**
   * 办学阶段。 枚举值如下： KINDERGARTEN（幼儿园） PRIMARY_SCHOOL（小学）  MIDDLE_SCHOOL（初中）  HIGH_SCHOOL（高中） SECONDARY_VOCATIONAL_SCHOOL（中职中专）  注意：如果学校兼有多种属性，可以连写用英文逗号拆分，如：MIDDLE_SCHOOL,HIGH_SCHOOL 代表兼有初中部和高中部；
   * @return learningStage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "MIDDLE_SCHOOL,HIGH_SCHOOL", value = "办学阶段。 枚举值如下： KINDERGARTEN（幼儿园） PRIMARY_SCHOOL（小学）  MIDDLE_SCHOOL（初中）  HIGH_SCHOOL（高中） SECONDARY_VOCATIONAL_SCHOOL（中职中专）  注意：如果学校兼有多种属性，可以连写用英文逗号拆分，如：MIDDLE_SCHOOL,HIGH_SCHOOL 代表兼有初中部和高中部；")

  public String getLearningStage() {
    return learningStage;
  }


  public void setLearningStage(String learningStage) {
    this.learningStage = learningStage;
  }


  public AlipayCommerceEducateCampusInstitutionsAddModel provinceCode(String provinceCode) {
    
    this.provinceCode = provinceCode;
    return this;
  }

   /**
   * 省份
   * @return provinceCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "370000", value = "省份")

  public String getProvinceCode() {
    return provinceCode;
  }


  public void setProvinceCode(String provinceCode) {
    this.provinceCode = provinceCode;
  }


  public AlipayCommerceEducateCampusInstitutionsAddModel schoolProperty(String schoolProperty) {
    
    this.schoolProperty = schoolProperty;
    return this;
  }

   /**
   * 学校性质.枚举值如下：  1：公立  2：民办
   * @return schoolProperty
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "学校性质.枚举值如下：  1：公立  2：民办")

  public String getSchoolProperty() {
    return schoolProperty;
  }


  public void setSchoolProperty(String schoolProperty) {
    this.schoolProperty = schoolProperty;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the AlipayCommerceEducateCampusInstitutionsAddModel instance itself
   */
  public AlipayCommerceEducateCampusInstitutionsAddModel putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AlipayCommerceEducateCampusInstitutionsAddModel alipayCommerceEducateCampusInstitutionsAddModel = (AlipayCommerceEducateCampusInstitutionsAddModel) o;
    return Objects.equals(this.cardPictUrl, alipayCommerceEducateCampusInstitutionsAddModel.cardPictUrl) &&
        Objects.equals(this.cityCode, alipayCommerceEducateCampusInstitutionsAddModel.cityCode) &&
        Objects.equals(this.instName, alipayCommerceEducateCampusInstitutionsAddModel.instName) &&
        Objects.equals(this.instStdCode, alipayCommerceEducateCampusInstitutionsAddModel.instStdCode) &&
        Objects.equals(this.learningStage, alipayCommerceEducateCampusInstitutionsAddModel.learningStage) &&
        Objects.equals(this.provinceCode, alipayCommerceEducateCampusInstitutionsAddModel.provinceCode) &&
        Objects.equals(this.schoolProperty, alipayCommerceEducateCampusInstitutionsAddModel.schoolProperty)&&
        Objects.equals(this.additionalProperties, alipayCommerceEducateCampusInstitutionsAddModel.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cardPictUrl, cityCode, instName, instStdCode, learningStage, provinceCode, schoolProperty, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AlipayCommerceEducateCampusInstitutionsAddModel {\n");
    sb.append("    cardPictUrl: ").append(toIndentedString(cardPictUrl)).append("\n");
    sb.append("    cityCode: ").append(toIndentedString(cityCode)).append("\n");
    sb.append("    instName: ").append(toIndentedString(instName)).append("\n");
    sb.append("    instStdCode: ").append(toIndentedString(instStdCode)).append("\n");
    sb.append("    learningStage: ").append(toIndentedString(learningStage)).append("\n");
    sb.append("    provinceCode: ").append(toIndentedString(provinceCode)).append("\n");
    sb.append("    schoolProperty: ").append(toIndentedString(schoolProperty)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("card_pict_url");
    openapiFields.add("city_code");
    openapiFields.add("inst_name");
    openapiFields.add("inst_std_code");
    openapiFields.add("learning_stage");
    openapiFields.add("province_code");
    openapiFields.add("school_property");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to AlipayCommerceEducateCampusInstitutionsAddModel
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (AlipayCommerceEducateCampusInstitutionsAddModel.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in AlipayCommerceEducateCampusInstitutionsAddModel is not found in the empty JSON string", AlipayCommerceEducateCampusInstitutionsAddModel.openapiRequiredFields.toString()));
        }
      }
      if (jsonObj.get("card_pict_url") != null && !jsonObj.get("card_pict_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `card_pict_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("card_pict_url").toString()));
      }
      if (jsonObj.get("city_code") != null && !jsonObj.get("city_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `city_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("city_code").toString()));
      }
      if (jsonObj.get("inst_name") != null && !jsonObj.get("inst_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `inst_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("inst_name").toString()));
      }
      if (jsonObj.get("inst_std_code") != null && !jsonObj.get("inst_std_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `inst_std_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("inst_std_code").toString()));
      }
      if (jsonObj.get("learning_stage") != null && !jsonObj.get("learning_stage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `learning_stage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("learning_stage").toString()));
      }
      if (jsonObj.get("province_code") != null && !jsonObj.get("province_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `province_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("province_code").toString()));
      }
      if (jsonObj.get("school_property") != null && !jsonObj.get("school_property").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `school_property` to be a primitive type in the JSON string but got `%s`", jsonObj.get("school_property").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AlipayCommerceEducateCampusInstitutionsAddModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AlipayCommerceEducateCampusInstitutionsAddModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AlipayCommerceEducateCampusInstitutionsAddModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AlipayCommerceEducateCampusInstitutionsAddModel.class));

       return (TypeAdapter<T>) new TypeAdapter<AlipayCommerceEducateCampusInstitutionsAddModel>() {
           @Override
           public void write(JsonWriter out, AlipayCommerceEducateCampusInstitutionsAddModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public AlipayCommerceEducateCampusInstitutionsAddModel read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             AlipayCommerceEducateCampusInstitutionsAddModel instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else { // non-primitive type
                   instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AlipayCommerceEducateCampusInstitutionsAddModel given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AlipayCommerceEducateCampusInstitutionsAddModel
  * @throws IOException if the JSON string is invalid with respect to AlipayCommerceEducateCampusInstitutionsAddModel
  */
  public static AlipayCommerceEducateCampusInstitutionsAddModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AlipayCommerceEducateCampusInstitutionsAddModel.class);
  }

 /**
  * Convert an instance of AlipayCommerceEducateCampusInstitutionsAddModel to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

