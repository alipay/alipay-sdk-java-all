/*
 * 支付宝开放平台API
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2024-01-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.alipay.v3.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.alipay.v3.JSON;

/**
 * AlipayMarketingCardActivateurlApplyModel
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class AlipayMarketingCardActivateurlApplyModel {
  public static final String SERIALIZED_NAME_CALLBACK = "callback";
  @SerializedName(SERIALIZED_NAME_CALLBACK)
  private String callback;

  public static final String SERIALIZED_NAME_FOLLOW_APP_ID = "follow_app_id";
  @SerializedName(SERIALIZED_NAME_FOLLOW_APP_ID)
  private String followAppId;

  public static final String SERIALIZED_NAME_OUT_STRING = "out_string";
  @SerializedName(SERIALIZED_NAME_OUT_STRING)
  private String outString;

  public static final String SERIALIZED_NAME_TEMPLATE_ID = "template_id";
  @SerializedName(SERIALIZED_NAME_TEMPLATE_ID)
  private String templateId;

  public AlipayMarketingCardActivateurlApplyModel() { 
  }

  public AlipayMarketingCardActivateurlApplyModel callback(String callback) {
    
    this.callback = callback;
    return this;
  }

   /**
   * 会员卡开卡表单提交后回调地址。要求必须是单纯的服务端接收回调。 说明： 1.该地址不可带参数，如需回传参数，可设置out_string入参。
   * @return callback
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "https://alipay.com/card/demo.htm", value = "会员卡开卡表单提交后回调地址。要求必须是单纯的服务端接收回调。 说明： 1.该地址不可带参数，如需回传参数，可设置out_string入参。")

  public String getCallback() {
    return callback;
  }


  public void setCallback(String callback) {
    this.callback = callback;
  }


  public AlipayMarketingCardActivateurlApplyModel followAppId(String followAppId) {
    
    this.followAppId = followAppId;
    return this;
  }

   /**
   * 需要关注的生活号AppId。若需要在领卡页面展示“关注生活号”提示，需开通生活号并绑定会员卡。生活号快速接入详见：https://doc.open.alipay.com/docs/doc.htm?treeId&#x3D;193&amp;articleId&#x3D;105933&amp;docType&#x3D;1
   * @return followAppId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "20150000000000000", value = "需要关注的生活号AppId。若需要在领卡页面展示“关注生活号”提示，需开通生活号并绑定会员卡。生活号快速接入详见：https://doc.open.alipay.com/docs/doc.htm?treeId=193&articleId=105933&docType=1")

  public String getFollowAppId() {
    return followAppId;
  }


  public void setFollowAppId(String followAppId) {
    this.followAppId = followAppId;
  }


  public AlipayMarketingCardActivateurlApplyModel outString(String outString) {
    
    this.outString = outString;
    return this;
  }

   /**
   * 该值为商家拉起开卡组件的传递的 out_string 值。通常可用于区分不同业务场景，禁止将该字段作为开卡流程的必要字段，否则会导致会员推广场景下的入会失败。
   * @return outString
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "201928393932", value = "该值为商家拉起开卡组件的传递的 out_string 值。通常可用于区分不同业务场景，禁止将该字段作为开卡流程的必要字段，否则会导致会员推广场景下的入会失败。")

  public String getOutString() {
    return outString;
  }


  public void setOutString(String outString) {
    this.outString = outString;
  }


  public AlipayMarketingCardActivateurlApplyModel templateId(String templateId) {
    
    this.templateId = templateId;
    return this;
  }

   /**
   * 会员卡模板id。使用会员卡模板创建接口(alipay.marketing.card.template.create)返回的结果
   * @return templateId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "20170228000000000210102000300974", value = "会员卡模板id。使用会员卡模板创建接口(alipay.marketing.card.template.create)返回的结果")

  public String getTemplateId() {
    return templateId;
  }


  public void setTemplateId(String templateId) {
    this.templateId = templateId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AlipayMarketingCardActivateurlApplyModel alipayMarketingCardActivateurlApplyModel = (AlipayMarketingCardActivateurlApplyModel) o;
    return Objects.equals(this.callback, alipayMarketingCardActivateurlApplyModel.callback) &&
        Objects.equals(this.followAppId, alipayMarketingCardActivateurlApplyModel.followAppId) &&
        Objects.equals(this.outString, alipayMarketingCardActivateurlApplyModel.outString) &&
        Objects.equals(this.templateId, alipayMarketingCardActivateurlApplyModel.templateId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(callback, followAppId, outString, templateId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AlipayMarketingCardActivateurlApplyModel {\n");
    sb.append("    callback: ").append(toIndentedString(callback)).append("\n");
    sb.append("    followAppId: ").append(toIndentedString(followAppId)).append("\n");
    sb.append("    outString: ").append(toIndentedString(outString)).append("\n");
    sb.append("    templateId: ").append(toIndentedString(templateId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("callback");
    openapiFields.add("follow_app_id");
    openapiFields.add("out_string");
    openapiFields.add("template_id");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to AlipayMarketingCardActivateurlApplyModel
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (AlipayMarketingCardActivateurlApplyModel.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in AlipayMarketingCardActivateurlApplyModel is not found in the empty JSON string", AlipayMarketingCardActivateurlApplyModel.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!AlipayMarketingCardActivateurlApplyModel.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AlipayMarketingCardActivateurlApplyModel` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("callback") != null && !jsonObj.get("callback").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `callback` to be a primitive type in the JSON string but got `%s`", jsonObj.get("callback").toString()));
      }
      if (jsonObj.get("follow_app_id") != null && !jsonObj.get("follow_app_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `follow_app_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("follow_app_id").toString()));
      }
      if (jsonObj.get("out_string") != null && !jsonObj.get("out_string").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `out_string` to be a primitive type in the JSON string but got `%s`", jsonObj.get("out_string").toString()));
      }
      if (jsonObj.get("template_id") != null && !jsonObj.get("template_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `template_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("template_id").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AlipayMarketingCardActivateurlApplyModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AlipayMarketingCardActivateurlApplyModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AlipayMarketingCardActivateurlApplyModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AlipayMarketingCardActivateurlApplyModel.class));

       return (TypeAdapter<T>) new TypeAdapter<AlipayMarketingCardActivateurlApplyModel>() {
           @Override
           public void write(JsonWriter out, AlipayMarketingCardActivateurlApplyModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AlipayMarketingCardActivateurlApplyModel read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AlipayMarketingCardActivateurlApplyModel given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AlipayMarketingCardActivateurlApplyModel
  * @throws IOException if the JSON string is invalid with respect to AlipayMarketingCardActivateurlApplyModel
  */
  public static AlipayMarketingCardActivateurlApplyModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AlipayMarketingCardActivateurlApplyModel.class);
  }

 /**
  * Convert an instance of AlipayMarketingCardActivateurlApplyModel to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

