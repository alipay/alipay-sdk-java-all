/*
 * 支付宝开放平台API
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2024-01-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.alipay.v3.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.alipay.v3.JSON;

/**
 * UserMailInfoVO
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class UserMailInfoVO {
  public static final String SERIALIZED_NAME_ADDRESS = "address";
  @SerializedName(SERIALIZED_NAME_ADDRESS)
  private String address;

  public static final String SERIALIZED_NAME_CITY = "city";
  @SerializedName(SERIALIZED_NAME_CITY)
  private String city;

  public static final String SERIALIZED_NAME_COUNTRY = "country";
  @SerializedName(SERIALIZED_NAME_COUNTRY)
  private String country;

  public static final String SERIALIZED_NAME_COUNTY_DISTRICT = "county_district";
  @SerializedName(SERIALIZED_NAME_COUNTY_DISTRICT)
  private String countyDistrict;

  public static final String SERIALIZED_NAME_DETAIL_ADDRESS = "detail_address";
  @SerializedName(SERIALIZED_NAME_DETAIL_ADDRESS)
  private String detailAddress;

  public static final String SERIALIZED_NAME_GMT_CREATE = "gmt_create";
  @SerializedName(SERIALIZED_NAME_GMT_CREATE)
  private String gmtCreate;

  public static final String SERIALIZED_NAME_GMT_MODIFIED = "gmt_modified";
  @SerializedName(SERIALIZED_NAME_GMT_MODIFIED)
  private String gmtModified;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PID = "pid";
  @SerializedName(SERIALIZED_NAME_PID)
  private String pid;

  public static final String SERIALIZED_NAME_PROVINCE = "province";
  @SerializedName(SERIALIZED_NAME_PROVINCE)
  private String province;

  public static final String SERIALIZED_NAME_STREET = "street";
  @SerializedName(SERIALIZED_NAME_STREET)
  private String street;

  public static final String SERIALIZED_NAME_TELEPHONE = "telephone";
  @SerializedName(SERIALIZED_NAME_TELEPHONE)
  private String telephone;

  public UserMailInfoVO() { 
  }

  public UserMailInfoVO address(String address) {
    
    this.address = address;
    return this;
  }

   /**
   * 收件人地址
   * @return address
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "中国|浙江省|杭州市|西湖区|蒋村街道|10号楼99号", value = "收件人地址")

  public String getAddress() {
    return address;
  }


  public void setAddress(String address) {
    this.address = address;
  }


  public UserMailInfoVO city(String city) {
    
    this.city = city;
    return this;
  }

   /**
   * 城市
   * @return city
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "杭州市", value = "城市")

  public String getCity() {
    return city;
  }


  public void setCity(String city) {
    this.city = city;
  }


  public UserMailInfoVO country(String country) {
    
    this.country = country;
    return this;
  }

   /**
   * 国家
   * @return country
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "中国", value = "国家")

  public String getCountry() {
    return country;
  }


  public void setCountry(String country) {
    this.country = country;
  }


  public UserMailInfoVO countyDistrict(String countyDistrict) {
    
    this.countyDistrict = countyDistrict;
    return this;
  }

   /**
   * 县区
   * @return countyDistrict
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "西湖区", value = "县区")

  public String getCountyDistrict() {
    return countyDistrict;
  }


  public void setCountyDistrict(String countyDistrict) {
    this.countyDistrict = countyDistrict;
  }


  public UserMailInfoVO detailAddress(String detailAddress) {
    
    this.detailAddress = detailAddress;
    return this;
  }

   /**
   * 详细地址
   * @return detailAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "10号楼99号", value = "详细地址")

  public String getDetailAddress() {
    return detailAddress;
  }


  public void setDetailAddress(String detailAddress) {
    this.detailAddress = detailAddress;
  }


  public UserMailInfoVO gmtCreate(String gmtCreate) {
    
    this.gmtCreate = gmtCreate;
    return this;
  }

   /**
   * 创建时间
   * @return gmtCreate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1533039333744", value = "创建时间")

  public String getGmtCreate() {
    return gmtCreate;
  }


  public void setGmtCreate(String gmtCreate) {
    this.gmtCreate = gmtCreate;
  }


  public UserMailInfoVO gmtModified(String gmtModified) {
    
    this.gmtModified = gmtModified;
    return this;
  }

   /**
   * 修改时间
   * @return gmtModified
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1533039333744", value = "修改时间")

  public String getGmtModified() {
    return gmtModified;
  }


  public void setGmtModified(String gmtModified) {
    this.gmtModified = gmtModified;
  }


  public UserMailInfoVO id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * 收件人信息ID
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2017031410122000565000480000002129", value = "收件人信息ID")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public UserMailInfoVO name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * 收件人姓名
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "朱文三", value = "收件人姓名")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public UserMailInfoVO pid(String pid) {
    
    this.pid = pid;
    return this;
  }

   /**
   * pid用于指定该地址归属的PID，应对集团模式的商户所设定,发票邮寄地址根据PID确定
   * @return pid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2088812004337486", value = "pid用于指定该地址归属的PID，应对集团模式的商户所设定,发票邮寄地址根据PID确定")

  public String getPid() {
    return pid;
  }


  public void setPid(String pid) {
    this.pid = pid;
  }


  public UserMailInfoVO province(String province) {
    
    this.province = province;
    return this;
  }

   /**
   * 省份
   * @return province
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "浙江省", value = "省份")

  public String getProvince() {
    return province;
  }


  public void setProvince(String province) {
    this.province = province;
  }


  public UserMailInfoVO street(String street) {
    
    this.street = street;
    return this;
  }

   /**
   * 街道
   * @return street
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "蒋村街道", value = "街道")

  public String getStreet() {
    return street;
  }


  public void setStreet(String street) {
    this.street = street;
  }


  public UserMailInfoVO telephone(String telephone) {
    
    this.telephone = telephone;
    return this;
  }

   /**
   * 收件人电话
   * @return telephone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0891-3983888", value = "收件人电话")

  public String getTelephone() {
    return telephone;
  }


  public void setTelephone(String telephone) {
    this.telephone = telephone;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserMailInfoVO userMailInfoVO = (UserMailInfoVO) o;
    return Objects.equals(this.address, userMailInfoVO.address) &&
        Objects.equals(this.city, userMailInfoVO.city) &&
        Objects.equals(this.country, userMailInfoVO.country) &&
        Objects.equals(this.countyDistrict, userMailInfoVO.countyDistrict) &&
        Objects.equals(this.detailAddress, userMailInfoVO.detailAddress) &&
        Objects.equals(this.gmtCreate, userMailInfoVO.gmtCreate) &&
        Objects.equals(this.gmtModified, userMailInfoVO.gmtModified) &&
        Objects.equals(this.id, userMailInfoVO.id) &&
        Objects.equals(this.name, userMailInfoVO.name) &&
        Objects.equals(this.pid, userMailInfoVO.pid) &&
        Objects.equals(this.province, userMailInfoVO.province) &&
        Objects.equals(this.street, userMailInfoVO.street) &&
        Objects.equals(this.telephone, userMailInfoVO.telephone);
  }

  @Override
  public int hashCode() {
    return Objects.hash(address, city, country, countyDistrict, detailAddress, gmtCreate, gmtModified, id, name, pid, province, street, telephone);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserMailInfoVO {\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    countyDistrict: ").append(toIndentedString(countyDistrict)).append("\n");
    sb.append("    detailAddress: ").append(toIndentedString(detailAddress)).append("\n");
    sb.append("    gmtCreate: ").append(toIndentedString(gmtCreate)).append("\n");
    sb.append("    gmtModified: ").append(toIndentedString(gmtModified)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    pid: ").append(toIndentedString(pid)).append("\n");
    sb.append("    province: ").append(toIndentedString(province)).append("\n");
    sb.append("    street: ").append(toIndentedString(street)).append("\n");
    sb.append("    telephone: ").append(toIndentedString(telephone)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("address");
    openapiFields.add("city");
    openapiFields.add("country");
    openapiFields.add("county_district");
    openapiFields.add("detail_address");
    openapiFields.add("gmt_create");
    openapiFields.add("gmt_modified");
    openapiFields.add("id");
    openapiFields.add("name");
    openapiFields.add("pid");
    openapiFields.add("province");
    openapiFields.add("street");
    openapiFields.add("telephone");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to UserMailInfoVO
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (UserMailInfoVO.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in UserMailInfoVO is not found in the empty JSON string", UserMailInfoVO.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!UserMailInfoVO.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UserMailInfoVO` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("address") != null && !jsonObj.get("address").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `address` to be a primitive type in the JSON string but got `%s`", jsonObj.get("address").toString()));
      }
      if (jsonObj.get("city") != null && !jsonObj.get("city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("city").toString()));
      }
      if (jsonObj.get("country") != null && !jsonObj.get("country").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `country` to be a primitive type in the JSON string but got `%s`", jsonObj.get("country").toString()));
      }
      if (jsonObj.get("county_district") != null && !jsonObj.get("county_district").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `county_district` to be a primitive type in the JSON string but got `%s`", jsonObj.get("county_district").toString()));
      }
      if (jsonObj.get("detail_address") != null && !jsonObj.get("detail_address").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `detail_address` to be a primitive type in the JSON string but got `%s`", jsonObj.get("detail_address").toString()));
      }
      if (jsonObj.get("gmt_create") != null && !jsonObj.get("gmt_create").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gmt_create` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gmt_create").toString()));
      }
      if (jsonObj.get("gmt_modified") != null && !jsonObj.get("gmt_modified").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gmt_modified` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gmt_modified").toString()));
      }
      if (jsonObj.get("id") != null && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if (jsonObj.get("name") != null && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (jsonObj.get("pid") != null && !jsonObj.get("pid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pid").toString()));
      }
      if (jsonObj.get("province") != null && !jsonObj.get("province").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `province` to be a primitive type in the JSON string but got `%s`", jsonObj.get("province").toString()));
      }
      if (jsonObj.get("street") != null && !jsonObj.get("street").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `street` to be a primitive type in the JSON string but got `%s`", jsonObj.get("street").toString()));
      }
      if (jsonObj.get("telephone") != null && !jsonObj.get("telephone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `telephone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("telephone").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UserMailInfoVO.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UserMailInfoVO' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UserMailInfoVO> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UserMailInfoVO.class));

       return (TypeAdapter<T>) new TypeAdapter<UserMailInfoVO>() {
           @Override
           public void write(JsonWriter out, UserMailInfoVO value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UserMailInfoVO read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of UserMailInfoVO given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of UserMailInfoVO
  * @throws IOException if the JSON string is invalid with respect to UserMailInfoVO
  */
  public static UserMailInfoVO fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UserMailInfoVO.class);
  }

 /**
  * Convert an instance of UserMailInfoVO to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

