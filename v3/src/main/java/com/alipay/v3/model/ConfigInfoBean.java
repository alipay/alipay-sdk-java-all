/*
 * 支付宝开放平台API
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2024-01-10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.alipay.v3.model;

import java.util.Objects;
import java.util.Arrays;
import com.alipay.v3.model.AttachmentExplainBean;
import com.alipay.v3.model.SpecifyAttachmentInfo;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.alipay.v3.JSON;

/**
 * ConfigInfoBean
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ConfigInfoBean {
  public static final String SERIALIZED_NAME_ATTACHMENT_EXPLAIN = "attachment_explain";
  @SerializedName(SERIALIZED_NAME_ATTACHMENT_EXPLAIN)
  private AttachmentExplainBean attachmentExplain;

  public static final String SERIALIZED_NAME_AUTO_ARCHIVE = "auto_archive";
  @SerializedName(SERIALIZED_NAME_AUTO_ARCHIVE)
  private Boolean autoArchive;

  public static final String SERIALIZED_NAME_COLLECT_ATTACHEMENT = "collect_attachement";
  @SerializedName(SERIALIZED_NAME_COLLECT_ATTACHEMENT)
  private Boolean collectAttachement;

  public static final String SERIALIZED_NAME_COMPANY_NO = "company_no";
  @SerializedName(SERIALIZED_NAME_COMPANY_NO)
  private String companyNo;

  public static final String SERIALIZED_NAME_CONTRACT_VALIDITY = "contract_validity";
  @SerializedName(SERIALIZED_NAME_CONTRACT_VALIDITY)
  private Integer contractValidity;

  public static final String SERIALIZED_NAME_JUMP_URL = "jump_url";
  @SerializedName(SERIALIZED_NAME_JUMP_URL)
  private String jumpUrl;

  public static final String SERIALIZED_NAME_MERCHANT_MINI_SIGN_URL = "merchant_mini_sign_url";
  @SerializedName(SERIALIZED_NAME_MERCHANT_MINI_SIGN_URL)
  private String merchantMiniSignUrl;

  public static final String SERIALIZED_NAME_NOTICE_DEVELOPER_URL = "notice_developer_url";
  @SerializedName(SERIALIZED_NAME_NOTICE_DEVELOPER_URL)
  private String noticeDeveloperUrl;

  public static final String SERIALIZED_NAME_PLATFORM_ORDER_NO = "platform_order_no";
  @SerializedName(SERIALIZED_NAME_PLATFORM_ORDER_NO)
  private String platformOrderNo;

  public static final String SERIALIZED_NAME_SERIAL_NO = "serial_no";
  @SerializedName(SERIALIZED_NAME_SERIAL_NO)
  private String serialNo;

  public static final String SERIALIZED_NAME_SIGN_MODEL = "sign_model";
  @SerializedName(SERIALIZED_NAME_SIGN_MODEL)
  private Integer signModel;

  public static final String SERIALIZED_NAME_SPECIFY_ATTACHMENT_INFOS = "specify_attachment_infos";
  @SerializedName(SERIALIZED_NAME_SPECIFY_ATTACHMENT_INFOS)
  private List<SpecifyAttachmentInfo> specifyAttachmentInfos = null;

  public ConfigInfoBean() { 
  }

  public ConfigInfoBean attachmentExplain(AttachmentExplainBean attachmentExplain) {
    
    this.attachmentExplain = attachmentExplain;
    return this;
  }

   /**
   * Get attachmentExplain
   * @return attachmentExplain
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AttachmentExplainBean getAttachmentExplain() {
    return attachmentExplain;
  }


  public void setAttachmentExplain(AttachmentExplainBean attachmentExplain) {
    this.attachmentExplain = attachmentExplain;
  }


  public ConfigInfoBean autoArchive(Boolean autoArchive) {
    
    this.autoArchive = autoArchive;
    return this;
  }

   /**
   * 签署完成是否自动归档，默认true，如果false，则归档需要调用签署流程归档接口
   * @return autoArchive
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "签署完成是否自动归档，默认true，如果false，则归档需要调用签署流程归档接口")

  public Boolean getAutoArchive() {
    return autoArchive;
  }


  public void setAutoArchive(Boolean autoArchive) {
    this.autoArchive = autoArchive;
  }


  public ConfigInfoBean collectAttachement(Boolean collectAttachement) {
    
    this.collectAttachement = collectAttachement;
    return this;
  }

   /**
   * 是否收集附件（需签署人上传身份证或者其他文件的，需设置为true）
   * @return collectAttachement
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "是否收集附件（需签署人上传身份证或者其他文件的，需设置为true）")

  public Boolean getCollectAttachement() {
    return collectAttachement;
  }


  public void setCollectAttachement(Boolean collectAttachement) {
    this.collectAttachement = collectAttachement;
  }


  public ConfigInfoBean companyNo(String companyNo) {
    
    this.companyNo = companyNo;
    return this;
  }

   /**
   * 物流公司编号（目前仅支持顺丰\&quot;SF\&quot;） 注：避免影响生产订单，联调及测试环境请传入SF_TEST。
   * @return companyNo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "SF", value = "物流公司编号（目前仅支持顺丰\"SF\"） 注：避免影响生产订单，联调及测试环境请传入SF_TEST。")

  public String getCompanyNo() {
    return companyNo;
  }


  public void setCompanyNo(String companyNo) {
    this.companyNo = companyNo;
  }


  public ConfigInfoBean contractValidity(Integer contractValidity) {
    
    this.contractValidity = contractValidity;
    return this;
  }

   /**
   * 合同过期时间：该参数设置的时间若到期，则会触发流程文件过期通知
   * @return contractValidity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1577243641153", value = "合同过期时间：该参数设置的时间若到期，则会触发流程文件过期通知")

  public Integer getContractValidity() {
    return contractValidity;
  }


  public void setContractValidity(Integer contractValidity) {
    this.contractValidity = contractValidity;
  }


  public ConfigInfoBean jumpUrl(String jumpUrl) {
    
    this.jumpUrl = jumpUrl;
    return this;
  }

   /**
   * 签署完成后跳转商户小程序的地址（signModel字段值为2时 选填）
   * @return jumpUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "alipays://platformapi/startapp?appId=2019042364288308&page=pages%2Fwater%2Fwater%3FactivityId%3D0ow26mr0eowt22mqz1gap8bale802821", value = "签署完成后跳转商户小程序的地址（signModel字段值为2时 选填）")

  public String getJumpUrl() {
    return jumpUrl;
  }


  public void setJumpUrl(String jumpUrl) {
    this.jumpUrl = jumpUrl;
  }


  public ConfigInfoBean merchantMiniSignUrl(String merchantMiniSignUrl) {
    
    this.merchantMiniSignUrl = merchantMiniSignUrl;
    return this;
  }

   /**
   * 商户小程序签署地址（signModel字段值为1时 必填）
   * @return merchantMiniSignUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "alipays://platformapi/startapp?appId=2019042364288308&page=pages%2Fwater%2Fwater%3FactivityId%3D0ow26mr0eowt22mqz1gap8bale802821", value = "商户小程序签署地址（signModel字段值为1时 必填）")

  public String getMerchantMiniSignUrl() {
    return merchantMiniSignUrl;
  }


  public void setMerchantMiniSignUrl(String merchantMiniSignUrl) {
    this.merchantMiniSignUrl = merchantMiniSignUrl;
  }


  public ConfigInfoBean noticeDeveloperUrl(String noticeDeveloperUrl) {
    
    this.noticeDeveloperUrl = noticeDeveloperUrl;
    return this;
  }

   /**
   * https://esign.cn/callback
   * @return noticeDeveloperUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "回调通知地址，签署的过程和签署完成都会回调", value = "https://esign.cn/callback")

  public String getNoticeDeveloperUrl() {
    return noticeDeveloperUrl;
  }


  public void setNoticeDeveloperUrl(String noticeDeveloperUrl) {
    this.noticeDeveloperUrl = noticeDeveloperUrl;
  }


  public ConfigInfoBean platformOrderNo(String platformOrderNo) {
    
    this.platformOrderNo = platformOrderNo;
    return this;
  }

   /**
   * 平台订单号，可将商户订单与电子合同进行关联。用户通过支付宝官方小程序 合同管家 查看合同时，可快速进入商家的小程序及对应的订单详情页，为商家的小程序提供了流量入口，提高用户的活跃度和留存率；
   * @return platformOrderNo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "DD1234", value = "平台订单号，可将商户订单与电子合同进行关联。用户通过支付宝官方小程序 合同管家 查看合同时，可快速进入商家的小程序及对应的订单详情页，为商家的小程序提供了流量入口，提高用户的活跃度和留存率；")

  public String getPlatformOrderNo() {
    return platformOrderNo;
  }


  public void setPlatformOrderNo(String platformOrderNo) {
    this.platformOrderNo = platformOrderNo;
  }


  public ConfigInfoBean serialNo(String serialNo) {
    
    this.serialNo = serialNo;
    return this;
  }

   /**
   * 12或15位物流单号
   * @return serialNo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "444258617994", value = "12或15位物流单号")

  public String getSerialNo() {
    return serialNo;
  }


  public void setSerialNo(String serialNo) {
    this.serialNo = serialNo;
  }


  public ConfigInfoBean signModel(Integer signModel) {
    
    this.signModel = signModel;
    return this;
  }

   /**
   * 快递扫码签收方式： 1-商户小程序：扫码后跳转商户小程序进行签收； 0-e签宝小程序：如商户没有支付宝小程序，可使用e签宝小程序完成签收。
   * @return signModel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "快递扫码签收方式： 1-商户小程序：扫码后跳转商户小程序进行签收； 0-e签宝小程序：如商户没有支付宝小程序，可使用e签宝小程序完成签收。")

  public Integer getSignModel() {
    return signModel;
  }


  public void setSignModel(Integer signModel) {
    this.signModel = signModel;
  }


  public ConfigInfoBean specifyAttachmentInfos(List<SpecifyAttachmentInfo> specifyAttachmentInfos) {
    
    this.specifyAttachmentInfos = specifyAttachmentInfos;
    return this;
  }

  public ConfigInfoBean addSpecifyAttachmentInfosItem(SpecifyAttachmentInfo specifyAttachmentInfosItem) {
    if (this.specifyAttachmentInfos == null) {
      this.specifyAttachmentInfos = new ArrayList<>();
    }
    this.specifyAttachmentInfos.add(specifyAttachmentInfosItem);
    return this;
  }

   /**
   * 指定签署人需要上传的附件列表，例如：A、B、C三方签署，A需上传附件1，B需指定附件2，C需上传附件1,2,3
   * @return specifyAttachmentInfos
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "指定签署人需要上传的附件列表，例如：A、B、C三方签署，A需上传附件1，B需指定附件2，C需上传附件1,2,3")

  public List<SpecifyAttachmentInfo> getSpecifyAttachmentInfos() {
    return specifyAttachmentInfos;
  }


  public void setSpecifyAttachmentInfos(List<SpecifyAttachmentInfo> specifyAttachmentInfos) {
    this.specifyAttachmentInfos = specifyAttachmentInfos;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConfigInfoBean configInfoBean = (ConfigInfoBean) o;
    return Objects.equals(this.attachmentExplain, configInfoBean.attachmentExplain) &&
        Objects.equals(this.autoArchive, configInfoBean.autoArchive) &&
        Objects.equals(this.collectAttachement, configInfoBean.collectAttachement) &&
        Objects.equals(this.companyNo, configInfoBean.companyNo) &&
        Objects.equals(this.contractValidity, configInfoBean.contractValidity) &&
        Objects.equals(this.jumpUrl, configInfoBean.jumpUrl) &&
        Objects.equals(this.merchantMiniSignUrl, configInfoBean.merchantMiniSignUrl) &&
        Objects.equals(this.noticeDeveloperUrl, configInfoBean.noticeDeveloperUrl) &&
        Objects.equals(this.platformOrderNo, configInfoBean.platformOrderNo) &&
        Objects.equals(this.serialNo, configInfoBean.serialNo) &&
        Objects.equals(this.signModel, configInfoBean.signModel) &&
        Objects.equals(this.specifyAttachmentInfos, configInfoBean.specifyAttachmentInfos);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attachmentExplain, autoArchive, collectAttachement, companyNo, contractValidity, jumpUrl, merchantMiniSignUrl, noticeDeveloperUrl, platformOrderNo, serialNo, signModel, specifyAttachmentInfos);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConfigInfoBean {\n");
    sb.append("    attachmentExplain: ").append(toIndentedString(attachmentExplain)).append("\n");
    sb.append("    autoArchive: ").append(toIndentedString(autoArchive)).append("\n");
    sb.append("    collectAttachement: ").append(toIndentedString(collectAttachement)).append("\n");
    sb.append("    companyNo: ").append(toIndentedString(companyNo)).append("\n");
    sb.append("    contractValidity: ").append(toIndentedString(contractValidity)).append("\n");
    sb.append("    jumpUrl: ").append(toIndentedString(jumpUrl)).append("\n");
    sb.append("    merchantMiniSignUrl: ").append(toIndentedString(merchantMiniSignUrl)).append("\n");
    sb.append("    noticeDeveloperUrl: ").append(toIndentedString(noticeDeveloperUrl)).append("\n");
    sb.append("    platformOrderNo: ").append(toIndentedString(platformOrderNo)).append("\n");
    sb.append("    serialNo: ").append(toIndentedString(serialNo)).append("\n");
    sb.append("    signModel: ").append(toIndentedString(signModel)).append("\n");
    sb.append("    specifyAttachmentInfos: ").append(toIndentedString(specifyAttachmentInfos)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("attachment_explain");
    openapiFields.add("auto_archive");
    openapiFields.add("collect_attachement");
    openapiFields.add("company_no");
    openapiFields.add("contract_validity");
    openapiFields.add("jump_url");
    openapiFields.add("merchant_mini_sign_url");
    openapiFields.add("notice_developer_url");
    openapiFields.add("platform_order_no");
    openapiFields.add("serial_no");
    openapiFields.add("sign_model");
    openapiFields.add("specify_attachment_infos");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ConfigInfoBean
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (ConfigInfoBean.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in ConfigInfoBean is not found in the empty JSON string", ConfigInfoBean.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!ConfigInfoBean.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ConfigInfoBean` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      // validate the optional field `attachment_explain`
      if (jsonObj.getAsJsonObject("attachment_explain") != null) {
        AttachmentExplainBean.validateJsonObject(jsonObj.getAsJsonObject("attachment_explain"));
      }
      if (jsonObj.get("company_no") != null && !jsonObj.get("company_no").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `company_no` to be a primitive type in the JSON string but got `%s`", jsonObj.get("company_no").toString()));
      }
      if (jsonObj.get("jump_url") != null && !jsonObj.get("jump_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `jump_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("jump_url").toString()));
      }
      if (jsonObj.get("merchant_mini_sign_url") != null && !jsonObj.get("merchant_mini_sign_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `merchant_mini_sign_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("merchant_mini_sign_url").toString()));
      }
      if (jsonObj.get("notice_developer_url") != null && !jsonObj.get("notice_developer_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `notice_developer_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("notice_developer_url").toString()));
      }
      if (jsonObj.get("platform_order_no") != null && !jsonObj.get("platform_order_no").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `platform_order_no` to be a primitive type in the JSON string but got `%s`", jsonObj.get("platform_order_no").toString()));
      }
      if (jsonObj.get("serial_no") != null && !jsonObj.get("serial_no").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `serial_no` to be a primitive type in the JSON string but got `%s`", jsonObj.get("serial_no").toString()));
      }
      JsonArray jsonArrayspecifyAttachmentInfos = jsonObj.getAsJsonArray("specify_attachment_infos");
      if (jsonArrayspecifyAttachmentInfos != null) {
        // ensure the json data is an array
        if (!jsonObj.get("specify_attachment_infos").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `specify_attachment_infos` to be an array in the JSON string but got `%s`", jsonObj.get("specify_attachment_infos").toString()));
        }

        // validate the optional field `specify_attachment_infos` (array)
        for (int i = 0; i < jsonArrayspecifyAttachmentInfos.size(); i++) {
          SpecifyAttachmentInfo.validateJsonObject(jsonArrayspecifyAttachmentInfos.get(i).getAsJsonObject());
        };
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ConfigInfoBean.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ConfigInfoBean' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ConfigInfoBean> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ConfigInfoBean.class));

       return (TypeAdapter<T>) new TypeAdapter<ConfigInfoBean>() {
           @Override
           public void write(JsonWriter out, ConfigInfoBean value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ConfigInfoBean read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ConfigInfoBean given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ConfigInfoBean
  * @throws IOException if the JSON string is invalid with respect to ConfigInfoBean
  */
  public static ConfigInfoBean fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ConfigInfoBean.class);
  }

 /**
  * Convert an instance of ConfigInfoBean to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

