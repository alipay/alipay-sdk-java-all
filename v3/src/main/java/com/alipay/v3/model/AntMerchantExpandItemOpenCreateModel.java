/*
 * 支付宝开放平台API
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.alipay.v3.model;

import java.util.Objects;
import java.util.Arrays;
import com.alipay.v3.model.ItemExtInfo;
import com.alipay.v3.model.ItemPropertyInfo;
import com.alipay.v3.model.MaterialCreateInfo;
import com.alipay.v3.model.SkuCreateInfo;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.alipay.v3.JSON;

/**
 * AntMerchantExpandItemOpenCreateModel
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class AntMerchantExpandItemOpenCreateModel {
  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_EXT_INFO = "ext_info";
  @SerializedName(SERIALIZED_NAME_EXT_INFO)
  private List<ItemExtInfo> extInfo = null;

  public static final String SERIALIZED_NAME_MATERIAL_LIST = "material_list";
  @SerializedName(SERIALIZED_NAME_MATERIAL_LIST)
  private List<MaterialCreateInfo> materialList = null;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PROPERTY_LIST = "property_list";
  @SerializedName(SERIALIZED_NAME_PROPERTY_LIST)
  private List<ItemPropertyInfo> propertyList = null;

  public static final String SERIALIZED_NAME_SCENE = "scene";
  @SerializedName(SERIALIZED_NAME_SCENE)
  private String scene;

  public static final String SERIALIZED_NAME_SKU_LIST = "sku_list";
  @SerializedName(SERIALIZED_NAME_SKU_LIST)
  private List<SkuCreateInfo> skuList = null;

  public static final String SERIALIZED_NAME_STANDARD_CATEGORY_ID = "standard_category_id";
  @SerializedName(SERIALIZED_NAME_STANDARD_CATEGORY_ID)
  private String standardCategoryId;

  public static final String SERIALIZED_NAME_TARGET_ID = "target_id";
  @SerializedName(SERIALIZED_NAME_TARGET_ID)
  private String targetId;

  public static final String SERIALIZED_NAME_TARGET_TYPE = "target_type";
  @SerializedName(SERIALIZED_NAME_TARGET_TYPE)
  private String targetType;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public AntMerchantExpandItemOpenCreateModel() { 
  }

  public AntMerchantExpandItemOpenCreateModel description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * 商品描述
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "精选东北优质非转基因大豆", value = "商品描述")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public AntMerchantExpandItemOpenCreateModel extInfo(List<ItemExtInfo> extInfo) {
    
    this.extInfo = extInfo;
    return this;
  }

  public AntMerchantExpandItemOpenCreateModel addExtInfoItem(ItemExtInfo extInfoItem) {
    if (this.extInfo == null) {
      this.extInfo = new ArrayList<>();
    }
    this.extInfo.add(extInfoItem);
    return this;
  }

   /**
   * 商品扩展信息（具体KEY请参见产品文档）。 小程序订单中心场景接入参见 &lt;a href&#x3D;\&quot;https://opendocs.alipay.com/mini/024hj4\&quot;&gt;接入指南&lt;/a&gt;。
   * @return extInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "商品扩展信息（具体KEY请参见产品文档）。 小程序订单中心场景接入参见 <a href=\"https://opendocs.alipay.com/mini/024hj4\">接入指南</a>。")

  public List<ItemExtInfo> getExtInfo() {
    return extInfo;
  }


  public void setExtInfo(List<ItemExtInfo> extInfo) {
    this.extInfo = extInfo;
  }


  public AntMerchantExpandItemOpenCreateModel materialList(List<MaterialCreateInfo> materialList) {
    
    this.materialList = materialList;
    return this;
  }

  public AntMerchantExpandItemOpenCreateModel addMaterialListItem(MaterialCreateInfo materialListItem) {
    if (this.materialList == null) {
      this.materialList = new ArrayList<>();
    }
    this.materialList.add(materialListItem);
    return this;
  }

   /**
   * 素材列表（最多3个），素材内容为素材key（素材key为&lt;a href&#x3D;\&quot;https://opendocs.alipay.com/apis/api_4/alipay.merchant.item.file.upload\&quot;&gt;alipay.merchant.item.file.upload&lt;/a&gt; 接口返回的 material_key）
   * @return materialList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "素材列表（最多3个），素材内容为素材key（素材key为<a href=\"https://opendocs.alipay.com/apis/api_4/alipay.merchant.item.file.upload\">alipay.merchant.item.file.upload</a> 接口返回的 material_key）")

  public List<MaterialCreateInfo> getMaterialList() {
    return materialList;
  }


  public void setMaterialList(List<MaterialCreateInfo> materialList) {
    this.materialList = materialList;
  }


  public AntMerchantExpandItemOpenCreateModel name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * 商品名称
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "西红柿炒蛋", value = "商品名称")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public AntMerchantExpandItemOpenCreateModel propertyList(List<ItemPropertyInfo> propertyList) {
    
    this.propertyList = propertyList;
    return this;
  }

  public AntMerchantExpandItemOpenCreateModel addPropertyListItem(ItemPropertyInfo propertyListItem) {
    if (this.propertyList == null) {
      this.propertyList = new ArrayList<>();
    }
    this.propertyList.add(propertyListItem);
    return this;
  }

   /**
   * 商品属性列表
   * @return propertyList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "商品属性列表")

  public List<ItemPropertyInfo> getPropertyList() {
    return propertyList;
  }


  public void setPropertyList(List<ItemPropertyInfo> propertyList) {
    this.propertyList = propertyList;
  }


  public AntMerchantExpandItemOpenCreateModel scene(String scene) {
    
    this.scene = scene;
    return this;
  }

   /**
   * 业务场景码。
   * @return scene
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "APP_ORDER", value = "业务场景码。")

  public String getScene() {
    return scene;
  }


  public void setScene(String scene) {
    this.scene = scene;
  }


  public AntMerchantExpandItemOpenCreateModel skuList(List<SkuCreateInfo> skuList) {
    
    this.skuList = skuList;
    return this;
  }

  public AntMerchantExpandItemOpenCreateModel addSkuListItem(SkuCreateInfo skuListItem) {
    if (this.skuList == null) {
      this.skuList = new ArrayList<>();
    }
    this.skuList.add(skuListItem);
    return this;
  }

   /**
   * 商品SKU列表（至少1个，最多20个）
   * @return skuList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "商品SKU列表（至少1个，最多20个）")

  public List<SkuCreateInfo> getSkuList() {
    return skuList;
  }


  public void setSkuList(List<SkuCreateInfo> skuList) {
    this.skuList = skuList;
  }


  public AntMerchantExpandItemOpenCreateModel standardCategoryId(String standardCategoryId) {
    
    this.standardCategoryId = standardCategoryId;
    return this;
  }

   /**
   * 商品所属标准类目ID，标品及非标品都需传入。 请填入 &lt;a href&#x3D;\&quot;https://opendocs.alipay.com/mini/011lxt\&quot;&gt;小程序商品类目表&lt;/a&gt; 中三级类目ID。
   * @return standardCategoryId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2019073100992228000000100000", value = "商品所属标准类目ID，标品及非标品都需传入。 请填入 <a href=\"https://opendocs.alipay.com/mini/011lxt\">小程序商品类目表</a> 中三级类目ID。")

  public String getStandardCategoryId() {
    return standardCategoryId;
  }


  public void setStandardCategoryId(String standardCategoryId) {
    this.standardCategoryId = standardCategoryId;
  }


  public AntMerchantExpandItemOpenCreateModel targetId(String targetId) {
    
    this.targetId = targetId;
    return this;
  }

   /**
   * 商品归属主体ID 例：商品归属主体类型target_type为店铺，则商品归属主体ID为店铺ID（支付宝侧店铺ID）；归属主体类型target_type为小程序，则归属主体ID为小程序ID
   * @return targetId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2018090600502000000022501261", value = "商品归属主体ID 例：商品归属主体类型target_type为店铺，则商品归属主体ID为店铺ID（支付宝侧店铺ID）；归属主体类型target_type为小程序，则归属主体ID为小程序ID")

  public String getTargetId() {
    return targetId;
  }


  public void setTargetId(String targetId) {
    this.targetId = targetId;
  }


  public AntMerchantExpandItemOpenCreateModel targetType(String targetType) {
    
    this.targetType = targetType;
    return this;
  }

   /**
   * 商品归属主体类型。枚举如下： 5：店铺。 8：小程序。
   * @return targetType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "8", value = "商品归属主体类型。枚举如下： 5：店铺。 8：小程序。")

  public String getTargetType() {
    return targetType;
  }


  public void setTargetType(String targetType) {
    this.targetType = targetType;
  }


  public AntMerchantExpandItemOpenCreateModel type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * 商品类型。枚举支持： STANDARD_GOODS：标品，一般是具有明确、标准规格、型号、参数的商品，如：手机、数码产品、大多数的家电 。 NON_STANDARD_GOODS：非标品，则是在这些方面没有统一的行业标准和参数规格的商品，如：服装、鞋袜等。
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "STANDARD_GOODS", value = "商品类型。枚举支持： STANDARD_GOODS：标品，一般是具有明确、标准规格、型号、参数的商品，如：手机、数码产品、大多数的家电 。 NON_STANDARD_GOODS：非标品，则是在这些方面没有统一的行业标准和参数规格的商品，如：服装、鞋袜等。")

  public String getType() {
    return type;
  }


  public void setType(String type) {
    this.type = type;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the AntMerchantExpandItemOpenCreateModel instance itself
   */
  public AntMerchantExpandItemOpenCreateModel putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AntMerchantExpandItemOpenCreateModel antMerchantExpandItemOpenCreateModel = (AntMerchantExpandItemOpenCreateModel) o;
    return Objects.equals(this.description, antMerchantExpandItemOpenCreateModel.description) &&
        Objects.equals(this.extInfo, antMerchantExpandItemOpenCreateModel.extInfo) &&
        Objects.equals(this.materialList, antMerchantExpandItemOpenCreateModel.materialList) &&
        Objects.equals(this.name, antMerchantExpandItemOpenCreateModel.name) &&
        Objects.equals(this.propertyList, antMerchantExpandItemOpenCreateModel.propertyList) &&
        Objects.equals(this.scene, antMerchantExpandItemOpenCreateModel.scene) &&
        Objects.equals(this.skuList, antMerchantExpandItemOpenCreateModel.skuList) &&
        Objects.equals(this.standardCategoryId, antMerchantExpandItemOpenCreateModel.standardCategoryId) &&
        Objects.equals(this.targetId, antMerchantExpandItemOpenCreateModel.targetId) &&
        Objects.equals(this.targetType, antMerchantExpandItemOpenCreateModel.targetType) &&
        Objects.equals(this.type, antMerchantExpandItemOpenCreateModel.type)&&
        Objects.equals(this.additionalProperties, antMerchantExpandItemOpenCreateModel.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, extInfo, materialList, name, propertyList, scene, skuList, standardCategoryId, targetId, targetType, type, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AntMerchantExpandItemOpenCreateModel {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    extInfo: ").append(toIndentedString(extInfo)).append("\n");
    sb.append("    materialList: ").append(toIndentedString(materialList)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    propertyList: ").append(toIndentedString(propertyList)).append("\n");
    sb.append("    scene: ").append(toIndentedString(scene)).append("\n");
    sb.append("    skuList: ").append(toIndentedString(skuList)).append("\n");
    sb.append("    standardCategoryId: ").append(toIndentedString(standardCategoryId)).append("\n");
    sb.append("    targetId: ").append(toIndentedString(targetId)).append("\n");
    sb.append("    targetType: ").append(toIndentedString(targetType)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("description");
    openapiFields.add("ext_info");
    openapiFields.add("material_list");
    openapiFields.add("name");
    openapiFields.add("property_list");
    openapiFields.add("scene");
    openapiFields.add("sku_list");
    openapiFields.add("standard_category_id");
    openapiFields.add("target_id");
    openapiFields.add("target_type");
    openapiFields.add("type");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to AntMerchantExpandItemOpenCreateModel
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (AntMerchantExpandItemOpenCreateModel.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in AntMerchantExpandItemOpenCreateModel is not found in the empty JSON string", AntMerchantExpandItemOpenCreateModel.openapiRequiredFields.toString()));
        }
      }
      if (jsonObj.get("description") != null && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      JsonArray jsonArrayextInfo = jsonObj.getAsJsonArray("ext_info");
      if (jsonArrayextInfo != null) {
        // ensure the json data is an array
        if (!jsonObj.get("ext_info").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `ext_info` to be an array in the JSON string but got `%s`", jsonObj.get("ext_info").toString()));
        }

        // validate the optional field `ext_info` (array)
        for (int i = 0; i < jsonArrayextInfo.size(); i++) {
          ItemExtInfo.validateJsonObject(jsonArrayextInfo.get(i).getAsJsonObject());
        };
      }
      JsonArray jsonArraymaterialList = jsonObj.getAsJsonArray("material_list");
      if (jsonArraymaterialList != null) {
        // ensure the json data is an array
        if (!jsonObj.get("material_list").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `material_list` to be an array in the JSON string but got `%s`", jsonObj.get("material_list").toString()));
        }

        // validate the optional field `material_list` (array)
        for (int i = 0; i < jsonArraymaterialList.size(); i++) {
          MaterialCreateInfo.validateJsonObject(jsonArraymaterialList.get(i).getAsJsonObject());
        };
      }
      if (jsonObj.get("name") != null && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      JsonArray jsonArraypropertyList = jsonObj.getAsJsonArray("property_list");
      if (jsonArraypropertyList != null) {
        // ensure the json data is an array
        if (!jsonObj.get("property_list").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `property_list` to be an array in the JSON string but got `%s`", jsonObj.get("property_list").toString()));
        }

        // validate the optional field `property_list` (array)
        for (int i = 0; i < jsonArraypropertyList.size(); i++) {
          ItemPropertyInfo.validateJsonObject(jsonArraypropertyList.get(i).getAsJsonObject());
        };
      }
      if (jsonObj.get("scene") != null && !jsonObj.get("scene").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `scene` to be a primitive type in the JSON string but got `%s`", jsonObj.get("scene").toString()));
      }
      JsonArray jsonArrayskuList = jsonObj.getAsJsonArray("sku_list");
      if (jsonArrayskuList != null) {
        // ensure the json data is an array
        if (!jsonObj.get("sku_list").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `sku_list` to be an array in the JSON string but got `%s`", jsonObj.get("sku_list").toString()));
        }

        // validate the optional field `sku_list` (array)
        for (int i = 0; i < jsonArrayskuList.size(); i++) {
          SkuCreateInfo.validateJsonObject(jsonArrayskuList.get(i).getAsJsonObject());
        };
      }
      if (jsonObj.get("standard_category_id") != null && !jsonObj.get("standard_category_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `standard_category_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("standard_category_id").toString()));
      }
      if (jsonObj.get("target_id") != null && !jsonObj.get("target_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `target_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("target_id").toString()));
      }
      if (jsonObj.get("target_type") != null && !jsonObj.get("target_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `target_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("target_type").toString()));
      }
      if (jsonObj.get("type") != null && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AntMerchantExpandItemOpenCreateModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AntMerchantExpandItemOpenCreateModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AntMerchantExpandItemOpenCreateModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AntMerchantExpandItemOpenCreateModel.class));

       return (TypeAdapter<T>) new TypeAdapter<AntMerchantExpandItemOpenCreateModel>() {
           @Override
           public void write(JsonWriter out, AntMerchantExpandItemOpenCreateModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public AntMerchantExpandItemOpenCreateModel read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             AntMerchantExpandItemOpenCreateModel instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else { // non-primitive type
                   instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AntMerchantExpandItemOpenCreateModel given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AntMerchantExpandItemOpenCreateModel
  * @throws IOException if the JSON string is invalid with respect to AntMerchantExpandItemOpenCreateModel
  */
  public static AntMerchantExpandItemOpenCreateModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AntMerchantExpandItemOpenCreateModel.class);
  }

 /**
  * Convert an instance of AntMerchantExpandItemOpenCreateModel to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

