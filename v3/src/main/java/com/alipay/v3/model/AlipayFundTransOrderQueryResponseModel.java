/*
 * 支付宝开放平台API
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.alipay.v3.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.alipay.v3.JSON;

/**
 * AlipayFundTransOrderQueryResponseModel
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class AlipayFundTransOrderQueryResponseModel {
  public static final String SERIALIZED_NAME_ARRIVAL_TIME_END = "arrival_time_end";
  @SerializedName(SERIALIZED_NAME_ARRIVAL_TIME_END)
  private String arrivalTimeEnd;

  public static final String SERIALIZED_NAME_ERROR_CODE = "error_code";
  @SerializedName(SERIALIZED_NAME_ERROR_CODE)
  private String errorCode;

  public static final String SERIALIZED_NAME_FAIL_REASON = "fail_reason";
  @SerializedName(SERIALIZED_NAME_FAIL_REASON)
  private String failReason;

  public static final String SERIALIZED_NAME_ORDER_FEE = "order_fee";
  @SerializedName(SERIALIZED_NAME_ORDER_FEE)
  private String orderFee;

  public static final String SERIALIZED_NAME_ORDER_ID = "order_id";
  @SerializedName(SERIALIZED_NAME_ORDER_ID)
  private String orderId;

  public static final String SERIALIZED_NAME_OUT_BIZ_NO = "out_biz_no";
  @SerializedName(SERIALIZED_NAME_OUT_BIZ_NO)
  private String outBizNo;

  public static final String SERIALIZED_NAME_PAY_DATE = "pay_date";
  @SerializedName(SERIALIZED_NAME_PAY_DATE)
  private String payDate;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public AlipayFundTransOrderQueryResponseModel() { 
  }

  public AlipayFundTransOrderQueryResponseModel arrivalTimeEnd(String arrivalTimeEnd) {
    
    this.arrivalTimeEnd = arrivalTimeEnd;
    return this;
  }

   /**
   * 预计到账时间，转账到银行卡专用，格式为yyyy-MM-dd HH:mm:ss，转账受理失败不返回。     注意：  此参数为预计时间，可能与实际到账时间有较大误差，不能作为实际到账时间使用，仅供参考用途。
   * @return arrivalTimeEnd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2013-01-01 08:08:08", value = "预计到账时间，转账到银行卡专用，格式为yyyy-MM-dd HH:mm:ss，转账受理失败不返回。     注意：  此参数为预计时间，可能与实际到账时间有较大误差，不能作为实际到账时间使用，仅供参考用途。")

  public String getArrivalTimeEnd() {
    return arrivalTimeEnd;
  }


  public void setArrivalTimeEnd(String arrivalTimeEnd) {
    this.arrivalTimeEnd = arrivalTimeEnd;
  }


  public AlipayFundTransOrderQueryResponseModel errorCode(String errorCode) {
    
    this.errorCode = errorCode;
    return this;
  }

   /**
   * 查询失败时，本参数为错误代 码。   查询成功不返回。 对于退票订单，不返回该参数。
   * @return errorCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "EXCEED_LIMIT_SM_AMOUNT", value = "查询失败时，本参数为错误代 码。   查询成功不返回。 对于退票订单，不返回该参数。")

  public String getErrorCode() {
    return errorCode;
  }


  public void setErrorCode(String errorCode) {
    this.errorCode = errorCode;
  }


  public AlipayFundTransOrderQueryResponseModel failReason(String failReason) {
    
    this.failReason = failReason;
    return this;
  }

   /**
   * 查询到的订单状态为FAIL失败或REFUND退票时，返回具体的原因。
   * @return failReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "单笔额度超限", value = "查询到的订单状态为FAIL失败或REFUND退票时，返回具体的原因。")

  public String getFailReason() {
    return failReason;
  }


  public void setFailReason(String failReason) {
    this.failReason = failReason;
  }


  public AlipayFundTransOrderQueryResponseModel orderFee(String orderFee) {
    
    this.orderFee = orderFee;
    return this;
  }

   /**
   * 预计收费金额（元），转账到银行卡专用，数字格式，精确到小数点后2位，转账失败或转账受理失败不返回。
   * @return orderFee
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0.02", value = "预计收费金额（元），转账到银行卡专用，数字格式，精确到小数点后2位，转账失败或转账受理失败不返回。")

  public String getOrderFee() {
    return orderFee;
  }


  public void setOrderFee(String orderFee) {
    this.orderFee = orderFee;
  }


  public AlipayFundTransOrderQueryResponseModel orderId(String orderId) {
    
    this.orderId = orderId;
    return this;
  }

   /**
   * 支付宝转账单据号，查询失败不返回。
   * @return orderId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "20181225110070001502260000212207", value = "支付宝转账单据号，查询失败不返回。")

  public String getOrderId() {
    return orderId;
  }


  public void setOrderId(String orderId) {
    this.orderId = orderId;
  }


  public AlipayFundTransOrderQueryResponseModel outBizNo(String outBizNo) {
    
    this.outBizNo = outBizNo;
    return this;
  }

   /**
   * 发起转账来源方定义的转账单据号。   该参数的赋值均以查询结果中 的 out_biz_no 为准。   如果查询失败，不返回该参数。
   * @return outBizNo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "3142321423432", value = "发起转账来源方定义的转账单据号。   该参数的赋值均以查询结果中 的 out_biz_no 为准。   如果查询失败，不返回该参数。")

  public String getOutBizNo() {
    return outBizNo;
  }


  public void setOutBizNo(String outBizNo) {
    this.outBizNo = outBizNo;
  }


  public AlipayFundTransOrderQueryResponseModel payDate(String payDate) {
    
    this.payDate = payDate;
    return this;
  }

   /**
   * 支付时间，格式为yyyy-MM-dd HH:mm:ss，转账失败不返回。
   * @return payDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2013-01-01 08:08:08", value = "支付时间，格式为yyyy-MM-dd HH:mm:ss，转账失败不返回。")

  public String getPayDate() {
    return payDate;
  }


  public void setPayDate(String payDate) {
    this.payDate = payDate;
  }


  public AlipayFundTransOrderQueryResponseModel status(String status) {
    
    this.status = status;
    return this;
  }

   /**
   * 转账单据状态。   SUCCESS：成功（配合\&quot;单笔转账到银行账户接口\&quot;产品使用时, 同一笔单据多次查询有可能从成功变成退票状态）；   FAIL：失败（具体失败原因请参见error_code以及fail_reason返回值）；   INIT：等待处理；   DEALING：处理中；   REFUND：退票（仅配合\&quot;单笔转账到银行账户接口\&quot;产品使用时会涉及, 具体退票原因请参见fail_reason返回值）；   UNKNOWN：状态未知。
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "SUCCESS", value = "转账单据状态。   SUCCESS：成功（配合\"单笔转账到银行账户接口\"产品使用时, 同一笔单据多次查询有可能从成功变成退票状态）；   FAIL：失败（具体失败原因请参见error_code以及fail_reason返回值）；   INIT：等待处理；   DEALING：处理中；   REFUND：退票（仅配合\"单笔转账到银行账户接口\"产品使用时会涉及, 具体退票原因请参见fail_reason返回值）；   UNKNOWN：状态未知。")

  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    this.status = status;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the AlipayFundTransOrderQueryResponseModel instance itself
   */
  public AlipayFundTransOrderQueryResponseModel putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AlipayFundTransOrderQueryResponseModel alipayFundTransOrderQueryResponseModel = (AlipayFundTransOrderQueryResponseModel) o;
    return Objects.equals(this.arrivalTimeEnd, alipayFundTransOrderQueryResponseModel.arrivalTimeEnd) &&
        Objects.equals(this.errorCode, alipayFundTransOrderQueryResponseModel.errorCode) &&
        Objects.equals(this.failReason, alipayFundTransOrderQueryResponseModel.failReason) &&
        Objects.equals(this.orderFee, alipayFundTransOrderQueryResponseModel.orderFee) &&
        Objects.equals(this.orderId, alipayFundTransOrderQueryResponseModel.orderId) &&
        Objects.equals(this.outBizNo, alipayFundTransOrderQueryResponseModel.outBizNo) &&
        Objects.equals(this.payDate, alipayFundTransOrderQueryResponseModel.payDate) &&
        Objects.equals(this.status, alipayFundTransOrderQueryResponseModel.status)&&
        Objects.equals(this.additionalProperties, alipayFundTransOrderQueryResponseModel.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(arrivalTimeEnd, errorCode, failReason, orderFee, orderId, outBizNo, payDate, status, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AlipayFundTransOrderQueryResponseModel {\n");
    sb.append("    arrivalTimeEnd: ").append(toIndentedString(arrivalTimeEnd)).append("\n");
    sb.append("    errorCode: ").append(toIndentedString(errorCode)).append("\n");
    sb.append("    failReason: ").append(toIndentedString(failReason)).append("\n");
    sb.append("    orderFee: ").append(toIndentedString(orderFee)).append("\n");
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    outBizNo: ").append(toIndentedString(outBizNo)).append("\n");
    sb.append("    payDate: ").append(toIndentedString(payDate)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("arrival_time_end");
    openapiFields.add("error_code");
    openapiFields.add("fail_reason");
    openapiFields.add("order_fee");
    openapiFields.add("order_id");
    openapiFields.add("out_biz_no");
    openapiFields.add("pay_date");
    openapiFields.add("status");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to AlipayFundTransOrderQueryResponseModel
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (AlipayFundTransOrderQueryResponseModel.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in AlipayFundTransOrderQueryResponseModel is not found in the empty JSON string", AlipayFundTransOrderQueryResponseModel.openapiRequiredFields.toString()));
        }
      }
      if (jsonObj.get("arrival_time_end") != null && !jsonObj.get("arrival_time_end").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `arrival_time_end` to be a primitive type in the JSON string but got `%s`", jsonObj.get("arrival_time_end").toString()));
      }
      if (jsonObj.get("error_code") != null && !jsonObj.get("error_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `error_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("error_code").toString()));
      }
      if (jsonObj.get("fail_reason") != null && !jsonObj.get("fail_reason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fail_reason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fail_reason").toString()));
      }
      if (jsonObj.get("order_fee") != null && !jsonObj.get("order_fee").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `order_fee` to be a primitive type in the JSON string but got `%s`", jsonObj.get("order_fee").toString()));
      }
      if (jsonObj.get("order_id") != null && !jsonObj.get("order_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `order_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("order_id").toString()));
      }
      if (jsonObj.get("out_biz_no") != null && !jsonObj.get("out_biz_no").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `out_biz_no` to be a primitive type in the JSON string but got `%s`", jsonObj.get("out_biz_no").toString()));
      }
      if (jsonObj.get("pay_date") != null && !jsonObj.get("pay_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pay_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pay_date").toString()));
      }
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AlipayFundTransOrderQueryResponseModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AlipayFundTransOrderQueryResponseModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AlipayFundTransOrderQueryResponseModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AlipayFundTransOrderQueryResponseModel.class));

       return (TypeAdapter<T>) new TypeAdapter<AlipayFundTransOrderQueryResponseModel>() {
           @Override
           public void write(JsonWriter out, AlipayFundTransOrderQueryResponseModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public AlipayFundTransOrderQueryResponseModel read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             AlipayFundTransOrderQueryResponseModel instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else { // non-primitive type
                   instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AlipayFundTransOrderQueryResponseModel given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AlipayFundTransOrderQueryResponseModel
  * @throws IOException if the JSON string is invalid with respect to AlipayFundTransOrderQueryResponseModel
  */
  public static AlipayFundTransOrderQueryResponseModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AlipayFundTransOrderQueryResponseModel.class);
  }

 /**
  * Convert an instance of AlipayFundTransOrderQueryResponseModel to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

