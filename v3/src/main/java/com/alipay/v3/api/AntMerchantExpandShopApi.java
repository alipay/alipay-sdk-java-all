/*
 * 支付宝开放平台API
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-06
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.alipay.v3.api;

import com.alipay.v3.ApiCallback;
import com.alipay.v3.ApiClient;
import com.alipay.v3.ApiException;
import com.alipay.v3.ApiResponse;
import com.alipay.v3.Configuration;
import com.alipay.v3.Pair;
import com.alipay.v3.ProgressRequestBody;
import com.alipay.v3.ProgressResponseBody;
import com.alipay.v3.util.AlipayLogger;
import com.alipay.v3.util.model.CustomizedParams;

import com.google.common.base.Strings;
import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.alipay.v3.model.AntMerchantExpandShopCloseDefaultResponse;
import com.alipay.v3.model.AntMerchantExpandShopCloseModel;
import com.alipay.v3.model.AntMerchantExpandShopConsultDefaultResponse;
import com.alipay.v3.model.AntMerchantExpandShopConsultModel;
import com.alipay.v3.model.AntMerchantExpandShopConsultResponseModel;
import com.alipay.v3.model.AntMerchantExpandShopCreateDefaultResponse;
import com.alipay.v3.model.AntMerchantExpandShopCreateModel;
import com.alipay.v3.model.AntMerchantExpandShopCreateResponseModel;
import com.alipay.v3.model.AntMerchantExpandShopModifyDefaultResponse;
import com.alipay.v3.model.AntMerchantExpandShopModifyModel;
import com.alipay.v3.model.AntMerchantExpandShopModifyResponseModel;
import com.alipay.v3.model.AntMerchantExpandShopQueryDefaultResponse;
import com.alipay.v3.model.AntMerchantExpandShopQueryResponseModel;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.ws.rs.core.GenericType;

public class AntMerchantExpandShopApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public AntMerchantExpandShopApi() {
        this(Configuration.getDefaultApiClient());
    }

    public AntMerchantExpandShopApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for close
     * @param antMerchantExpandShopCloseModel  (optional)
     * @param _callback Callback for upload/download progress
     * @param customizedParams
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> common response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 请求失败 </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call closeCall(AntMerchantExpandShopCloseModel antMerchantExpandShopCloseModel, final ApiCallback _callback, CustomizedParams customizedParams) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = (customizedParams != null && !Strings.isNullOrEmpty(customizedParams.getBodyContent()))
                ? customizedParams.getBodyContent() : antMerchantExpandShopCloseModel;

        // create path and map variables
        String localVarPath = "/v3/ant/merchant/shop/close";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        if (customizedParams != null) {
            //额外query参数
            if (customizedParams.getQueryParams() != null && customizedParams.getQueryParams().size() > 0) {
                for (Map.Entry<String, String> entry : customizedParams.getQueryParams().entrySet()) {
                    localVarQueryParams.addAll(localVarApiClient.parameterToPair(entry.getKey(), entry.getValue()));
                }
            }

            if (!Strings.isNullOrEmpty(customizedParams.getAppAuthToken())) {
                localVarHeaderParams.put("alipay-app-auth-token", customizedParams.getAppAuthToken());
            }

            //额外非全局header参数
            if (customizedParams.getHeaderParams() != null && customizedParams.getHeaderParams().size() > 0) {
                localVarHeaderParams.putAll(customizedParams.getHeaderParams());
            }
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "PATCH", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call closeValidateBeforeCall(AntMerchantExpandShopCloseModel antMerchantExpandShopCloseModel, final ApiCallback _callback, CustomizedParams customizedParams) throws ApiException {
        

        okhttp3.Call localVarCall = closeCall(antMerchantExpandShopCloseModel, _callback, customizedParams);
        return localVarCall;

    }

    /**
     * 蚂蚁店铺关闭
     * 通过shop_id，关闭蚂蚁店铺。
     * @param antMerchantExpandShopCloseModel  (optional)
     * @return Object
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> common response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 请求失败 </td><td>  -  </td></tr>
     </table>
     */
    public Object close(AntMerchantExpandShopCloseModel antMerchantExpandShopCloseModel) throws ApiException {
        ApiResponse<Object> localVarResp = closeWithHttpInfo(antMerchantExpandShopCloseModel, null);
        return localVarResp.getData();
    }

    public Object close(AntMerchantExpandShopCloseModel antMerchantExpandShopCloseModel, CustomizedParams customizedParams) throws ApiException {
        ApiResponse<Object> localVarResp = closeWithHttpInfo(antMerchantExpandShopCloseModel, customizedParams);
        return localVarResp.getData();
    }

    /**
     * 蚂蚁店铺关闭
     * 通过shop_id，关闭蚂蚁店铺。
     * @param antMerchantExpandShopCloseModel  (optional)
     * @return ApiResponse&lt;Object&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> common response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 请求失败 </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Object> closeWithHttpInfo(AntMerchantExpandShopCloseModel antMerchantExpandShopCloseModel, CustomizedParams customizedParams) throws ApiException {
        okhttp3.Call localVarCall = closeValidateBeforeCall(antMerchantExpandShopCloseModel, null, customizedParams);
        try {
            Type localVarReturnType = new TypeToken<Object>(){}.getType();
            return localVarApiClient.execute(localVarCall, localVarReturnType);
        } catch (ApiException e) {
            try {
                e.setErrorObject(localVarApiClient.getJSON().getGson().fromJson(e.getResponseBody(), new TypeToken<AntMerchantExpandShopCloseDefaultResponse>(){}.getType()));
            } catch (Exception ex) {
                AlipayLogger.logBizWarn(ex);
            }
            throw e;
        }
    }

    /**
     * 蚂蚁店铺关闭 (asynchronously)
     * 通过shop_id，关闭蚂蚁店铺。
     * @param antMerchantExpandShopCloseModel  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> common response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 请求失败 </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public okhttp3.Call closeAsync(AntMerchantExpandShopCloseModel antMerchantExpandShopCloseModel, final ApiCallback<Object> _callback) throws ApiException {

        okhttp3.Call localVarCall = closeValidateBeforeCall(antMerchantExpandShopCloseModel, _callback, null);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    @Deprecated
    public okhttp3.Call closeAsync(AntMerchantExpandShopCloseModel antMerchantExpandShopCloseModel, final ApiCallback<Object> _callback, CustomizedParams customizedParams) throws ApiException {

        okhttp3.Call localVarCall = closeValidateBeforeCall(antMerchantExpandShopCloseModel, _callback, customizedParams);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for consult
     * @param antMerchantExpandShopConsultModel  (optional)
     * @param _callback Callback for upload/download progress
     * @param customizedParams
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> common response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 请求失败 </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call consultCall(AntMerchantExpandShopConsultModel antMerchantExpandShopConsultModel, final ApiCallback _callback, CustomizedParams customizedParams) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = (customizedParams != null && !Strings.isNullOrEmpty(customizedParams.getBodyContent()))
                ? customizedParams.getBodyContent() : antMerchantExpandShopConsultModel;

        // create path and map variables
        String localVarPath = "/v3/ant/merchant/expand/shop/consult";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        if (customizedParams != null) {
            //额外query参数
            if (customizedParams.getQueryParams() != null && customizedParams.getQueryParams().size() > 0) {
                for (Map.Entry<String, String> entry : customizedParams.getQueryParams().entrySet()) {
                    localVarQueryParams.addAll(localVarApiClient.parameterToPair(entry.getKey(), entry.getValue()));
                }
            }

            if (!Strings.isNullOrEmpty(customizedParams.getAppAuthToken())) {
                localVarHeaderParams.put("alipay-app-auth-token", customizedParams.getAppAuthToken());
            }

            //额外非全局header参数
            if (customizedParams.getHeaderParams() != null && customizedParams.getHeaderParams().size() > 0) {
                localVarHeaderParams.putAll(customizedParams.getHeaderParams());
            }
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call consultValidateBeforeCall(AntMerchantExpandShopConsultModel antMerchantExpandShopConsultModel, final ApiCallback _callback, CustomizedParams customizedParams) throws ApiException {
        

        okhttp3.Call localVarCall = consultCall(antMerchantExpandShopConsultModel, _callback, customizedParams);
        return localVarCall;

    }

    /**
     * 蚂蚁店铺创建咨询
     * 蚂蚁店铺创建咨询
     * @param antMerchantExpandShopConsultModel  (optional)
     * @return AntMerchantExpandShopConsultResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> common response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 请求失败 </td><td>  -  </td></tr>
     </table>
     */
    public AntMerchantExpandShopConsultResponseModel consult(AntMerchantExpandShopConsultModel antMerchantExpandShopConsultModel) throws ApiException {
        ApiResponse<AntMerchantExpandShopConsultResponseModel> localVarResp = consultWithHttpInfo(antMerchantExpandShopConsultModel, null);
        return localVarResp.getData();
    }

    public AntMerchantExpandShopConsultResponseModel consult(AntMerchantExpandShopConsultModel antMerchantExpandShopConsultModel, CustomizedParams customizedParams) throws ApiException {
        ApiResponse<AntMerchantExpandShopConsultResponseModel> localVarResp = consultWithHttpInfo(antMerchantExpandShopConsultModel, customizedParams);
        return localVarResp.getData();
    }

    /**
     * 蚂蚁店铺创建咨询
     * 蚂蚁店铺创建咨询
     * @param antMerchantExpandShopConsultModel  (optional)
     * @return ApiResponse&lt;AntMerchantExpandShopConsultResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> common response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 请求失败 </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AntMerchantExpandShopConsultResponseModel> consultWithHttpInfo(AntMerchantExpandShopConsultModel antMerchantExpandShopConsultModel, CustomizedParams customizedParams) throws ApiException {
        okhttp3.Call localVarCall = consultValidateBeforeCall(antMerchantExpandShopConsultModel, null, customizedParams);
        try {
            Type localVarReturnType = new TypeToken<AntMerchantExpandShopConsultResponseModel>(){}.getType();
            return localVarApiClient.execute(localVarCall, localVarReturnType);
        } catch (ApiException e) {
            try {
                e.setErrorObject(localVarApiClient.getJSON().getGson().fromJson(e.getResponseBody(), new TypeToken<AntMerchantExpandShopConsultDefaultResponse>(){}.getType()));
            } catch (Exception ex) {
                AlipayLogger.logBizWarn(ex);
            }
            throw e;
        }
    }

    /**
     * 蚂蚁店铺创建咨询 (asynchronously)
     * 蚂蚁店铺创建咨询
     * @param antMerchantExpandShopConsultModel  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> common response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 请求失败 </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public okhttp3.Call consultAsync(AntMerchantExpandShopConsultModel antMerchantExpandShopConsultModel, final ApiCallback<AntMerchantExpandShopConsultResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = consultValidateBeforeCall(antMerchantExpandShopConsultModel, _callback, null);
        Type localVarReturnType = new TypeToken<AntMerchantExpandShopConsultResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    @Deprecated
    public okhttp3.Call consultAsync(AntMerchantExpandShopConsultModel antMerchantExpandShopConsultModel, final ApiCallback<AntMerchantExpandShopConsultResponseModel> _callback, CustomizedParams customizedParams) throws ApiException {

        okhttp3.Call localVarCall = consultValidateBeforeCall(antMerchantExpandShopConsultModel, _callback, customizedParams);
        Type localVarReturnType = new TypeToken<AntMerchantExpandShopConsultResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for create
     * @param antMerchantExpandShopCreateModel  (optional)
     * @param _callback Callback for upload/download progress
     * @param customizedParams
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> common response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 请求失败 </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call createCall(AntMerchantExpandShopCreateModel antMerchantExpandShopCreateModel, final ApiCallback _callback, CustomizedParams customizedParams) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = (customizedParams != null && !Strings.isNullOrEmpty(customizedParams.getBodyContent()))
                ? customizedParams.getBodyContent() : antMerchantExpandShopCreateModel;

        // create path and map variables
        String localVarPath = "/v3/ant/merchant/shop";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        if (customizedParams != null) {
            //额外query参数
            if (customizedParams.getQueryParams() != null && customizedParams.getQueryParams().size() > 0) {
                for (Map.Entry<String, String> entry : customizedParams.getQueryParams().entrySet()) {
                    localVarQueryParams.addAll(localVarApiClient.parameterToPair(entry.getKey(), entry.getValue()));
                }
            }

            if (!Strings.isNullOrEmpty(customizedParams.getAppAuthToken())) {
                localVarHeaderParams.put("alipay-app-auth-token", customizedParams.getAppAuthToken());
            }

            //额外非全局header参数
            if (customizedParams.getHeaderParams() != null && customizedParams.getHeaderParams().size() > 0) {
                localVarHeaderParams.putAll(customizedParams.getHeaderParams());
            }
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call createValidateBeforeCall(AntMerchantExpandShopCreateModel antMerchantExpandShopCreateModel, final ApiCallback _callback, CustomizedParams customizedParams) throws ApiException {
        

        okhttp3.Call localVarCall = createCall(antMerchantExpandShopCreateModel, _callback, customizedParams);
        return localVarCall;

    }

    /**
     * 蚂蚁店铺创建
     * 创建蚂蚁店铺
     * @param antMerchantExpandShopCreateModel  (optional)
     * @return AntMerchantExpandShopCreateResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> common response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 请求失败 </td><td>  -  </td></tr>
     </table>
     */
    public AntMerchantExpandShopCreateResponseModel create(AntMerchantExpandShopCreateModel antMerchantExpandShopCreateModel) throws ApiException {
        ApiResponse<AntMerchantExpandShopCreateResponseModel> localVarResp = createWithHttpInfo(antMerchantExpandShopCreateModel, null);
        return localVarResp.getData();
    }

    public AntMerchantExpandShopCreateResponseModel create(AntMerchantExpandShopCreateModel antMerchantExpandShopCreateModel, CustomizedParams customizedParams) throws ApiException {
        ApiResponse<AntMerchantExpandShopCreateResponseModel> localVarResp = createWithHttpInfo(antMerchantExpandShopCreateModel, customizedParams);
        return localVarResp.getData();
    }

    /**
     * 蚂蚁店铺创建
     * 创建蚂蚁店铺
     * @param antMerchantExpandShopCreateModel  (optional)
     * @return ApiResponse&lt;AntMerchantExpandShopCreateResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> common response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 请求失败 </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AntMerchantExpandShopCreateResponseModel> createWithHttpInfo(AntMerchantExpandShopCreateModel antMerchantExpandShopCreateModel, CustomizedParams customizedParams) throws ApiException {
        okhttp3.Call localVarCall = createValidateBeforeCall(antMerchantExpandShopCreateModel, null, customizedParams);
        try {
            Type localVarReturnType = new TypeToken<AntMerchantExpandShopCreateResponseModel>(){}.getType();
            return localVarApiClient.execute(localVarCall, localVarReturnType);
        } catch (ApiException e) {
            try {
                e.setErrorObject(localVarApiClient.getJSON().getGson().fromJson(e.getResponseBody(), new TypeToken<AntMerchantExpandShopCreateDefaultResponse>(){}.getType()));
            } catch (Exception ex) {
                AlipayLogger.logBizWarn(ex);
            }
            throw e;
        }
    }

    /**
     * 蚂蚁店铺创建 (asynchronously)
     * 创建蚂蚁店铺
     * @param antMerchantExpandShopCreateModel  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> common response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 请求失败 </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public okhttp3.Call createAsync(AntMerchantExpandShopCreateModel antMerchantExpandShopCreateModel, final ApiCallback<AntMerchantExpandShopCreateResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = createValidateBeforeCall(antMerchantExpandShopCreateModel, _callback, null);
        Type localVarReturnType = new TypeToken<AntMerchantExpandShopCreateResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    @Deprecated
    public okhttp3.Call createAsync(AntMerchantExpandShopCreateModel antMerchantExpandShopCreateModel, final ApiCallback<AntMerchantExpandShopCreateResponseModel> _callback, CustomizedParams customizedParams) throws ApiException {

        okhttp3.Call localVarCall = createValidateBeforeCall(antMerchantExpandShopCreateModel, _callback, customizedParams);
        Type localVarReturnType = new TypeToken<AntMerchantExpandShopCreateResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for modify
     * @param antMerchantExpandShopModifyModel  (optional)
     * @param _callback Callback for upload/download progress
     * @param customizedParams
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> common response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 请求失败 </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call modifyCall(AntMerchantExpandShopModifyModel antMerchantExpandShopModifyModel, final ApiCallback _callback, CustomizedParams customizedParams) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = (customizedParams != null && !Strings.isNullOrEmpty(customizedParams.getBodyContent()))
                ? customizedParams.getBodyContent() : antMerchantExpandShopModifyModel;

        // create path and map variables
        String localVarPath = "/v3/ant/merchant/shop";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        if (customizedParams != null) {
            //额外query参数
            if (customizedParams.getQueryParams() != null && customizedParams.getQueryParams().size() > 0) {
                for (Map.Entry<String, String> entry : customizedParams.getQueryParams().entrySet()) {
                    localVarQueryParams.addAll(localVarApiClient.parameterToPair(entry.getKey(), entry.getValue()));
                }
            }

            if (!Strings.isNullOrEmpty(customizedParams.getAppAuthToken())) {
                localVarHeaderParams.put("alipay-app-auth-token", customizedParams.getAppAuthToken());
            }

            //额外非全局header参数
            if (customizedParams.getHeaderParams() != null && customizedParams.getHeaderParams().size() > 0) {
                localVarHeaderParams.putAll(customizedParams.getHeaderParams());
            }
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "PATCH", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call modifyValidateBeforeCall(AntMerchantExpandShopModifyModel antMerchantExpandShopModifyModel, final ApiCallback _callback, CustomizedParams customizedParams) throws ApiException {
        

        okhttp3.Call localVarCall = modifyCall(antMerchantExpandShopModifyModel, _callback, customizedParams);
        return localVarCall;

    }

    /**
     * 修改蚂蚁店铺
     * 修改蚂蚁店铺，按信息项修改。若无特殊说明，如果某项存在但是没填写，则不会覆盖掉原来的值
     * @param antMerchantExpandShopModifyModel  (optional)
     * @return AntMerchantExpandShopModifyResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> common response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 请求失败 </td><td>  -  </td></tr>
     </table>
     */
    public AntMerchantExpandShopModifyResponseModel modify(AntMerchantExpandShopModifyModel antMerchantExpandShopModifyModel) throws ApiException {
        ApiResponse<AntMerchantExpandShopModifyResponseModel> localVarResp = modifyWithHttpInfo(antMerchantExpandShopModifyModel, null);
        return localVarResp.getData();
    }

    public AntMerchantExpandShopModifyResponseModel modify(AntMerchantExpandShopModifyModel antMerchantExpandShopModifyModel, CustomizedParams customizedParams) throws ApiException {
        ApiResponse<AntMerchantExpandShopModifyResponseModel> localVarResp = modifyWithHttpInfo(antMerchantExpandShopModifyModel, customizedParams);
        return localVarResp.getData();
    }

    /**
     * 修改蚂蚁店铺
     * 修改蚂蚁店铺，按信息项修改。若无特殊说明，如果某项存在但是没填写，则不会覆盖掉原来的值
     * @param antMerchantExpandShopModifyModel  (optional)
     * @return ApiResponse&lt;AntMerchantExpandShopModifyResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> common response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 请求失败 </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AntMerchantExpandShopModifyResponseModel> modifyWithHttpInfo(AntMerchantExpandShopModifyModel antMerchantExpandShopModifyModel, CustomizedParams customizedParams) throws ApiException {
        okhttp3.Call localVarCall = modifyValidateBeforeCall(antMerchantExpandShopModifyModel, null, customizedParams);
        try {
            Type localVarReturnType = new TypeToken<AntMerchantExpandShopModifyResponseModel>(){}.getType();
            return localVarApiClient.execute(localVarCall, localVarReturnType);
        } catch (ApiException e) {
            try {
                e.setErrorObject(localVarApiClient.getJSON().getGson().fromJson(e.getResponseBody(), new TypeToken<AntMerchantExpandShopModifyDefaultResponse>(){}.getType()));
            } catch (Exception ex) {
                AlipayLogger.logBizWarn(ex);
            }
            throw e;
        }
    }

    /**
     * 修改蚂蚁店铺 (asynchronously)
     * 修改蚂蚁店铺，按信息项修改。若无特殊说明，如果某项存在但是没填写，则不会覆盖掉原来的值
     * @param antMerchantExpandShopModifyModel  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> common response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 请求失败 </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public okhttp3.Call modifyAsync(AntMerchantExpandShopModifyModel antMerchantExpandShopModifyModel, final ApiCallback<AntMerchantExpandShopModifyResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = modifyValidateBeforeCall(antMerchantExpandShopModifyModel, _callback, null);
        Type localVarReturnType = new TypeToken<AntMerchantExpandShopModifyResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    @Deprecated
    public okhttp3.Call modifyAsync(AntMerchantExpandShopModifyModel antMerchantExpandShopModifyModel, final ApiCallback<AntMerchantExpandShopModifyResponseModel> _callback, CustomizedParams customizedParams) throws ApiException {

        okhttp3.Call localVarCall = modifyValidateBeforeCall(antMerchantExpandShopModifyModel, _callback, customizedParams);
        Type localVarReturnType = new TypeToken<AntMerchantExpandShopModifyResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for query
     * @param shopId 蚂蚁店铺id (optional)
     * @param storeId 门店编号，表示该门店在该商户角色id(直连pid，间连smid)下，由商户自己定义的外部门店编号 (optional)
     * @param ipRoleId 商户角色id，表示将要开的店属于哪个商户角色。对于直连开店场景，填写商户pid；对于间连开店场景（线上、线下、直付通），填写商户smid (optional)
     * @param addressVersion 行政区划版本，当前可传空值(取默认版本)、2022Q2、UPTODATE(取最新版本)，其中空值默认为：2020Q1版本（ address_version&#x3D;&#39;&#39;或null），想要查看版本是2022年2季度版本则传入:(address_version&#x3D;&#39;2022Q2&#39;)，想要获取最新版本则传入:(address_version &#x3D;&#39;UPTODATE&#39;) (optional)
     * @param needRecommend 门店不置信时，是否需要返回shop_recommend_info (optional)
     * @param needIndustryInfo need_industry_info&#x3D;0时不返回行业信息；need_industry_info&#x3D;1时返回不需要审核的行业信息、审核通过的行业信息 (optional)
     * @param needIndustryLicense need_industry_license&#x3D;0时不返回行业资质；need_industry_license&#x3D;1时返回审核通过的行业资质 (optional)
     * @param _callback Callback for upload/download progress
     * @param customizedParams
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> common response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 请求失败 </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call queryCall(String shopId, String storeId, String ipRoleId, String addressVersion, String needRecommend, String needIndustryInfo, String needIndustryLicense, final ApiCallback _callback, CustomizedParams customizedParams) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v3/ant/merchant/shop";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (shopId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("shop_id", shopId));
        }

        if (storeId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("store_id", storeId));
        }

        if (ipRoleId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("ip_role_id", ipRoleId));
        }

        if (addressVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("address_version", addressVersion));
        }

        if (needRecommend != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("need_recommend", needRecommend));
        }

        if (needIndustryInfo != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("need_industry_info", needIndustryInfo));
        }

        if (needIndustryLicense != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("need_industry_license", needIndustryLicense));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        if (customizedParams != null) {
            //额外query参数
            if (customizedParams.getQueryParams() != null && customizedParams.getQueryParams().size() > 0) {
                for (Map.Entry<String, String> entry : customizedParams.getQueryParams().entrySet()) {
                    localVarQueryParams.addAll(localVarApiClient.parameterToPair(entry.getKey(), entry.getValue()));
                }
            }

            if (!Strings.isNullOrEmpty(customizedParams.getAppAuthToken())) {
                localVarHeaderParams.put("alipay-app-auth-token", customizedParams.getAppAuthToken());
            }

            //额外非全局header参数
            if (customizedParams.getHeaderParams() != null && customizedParams.getHeaderParams().size() > 0) {
                localVarHeaderParams.putAll(customizedParams.getHeaderParams());
            }
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call queryValidateBeforeCall(String shopId, String storeId, String ipRoleId, String addressVersion, String needRecommend, String needIndustryInfo, String needIndustryLicense, final ApiCallback _callback, CustomizedParams customizedParams) throws ApiException {
        

        okhttp3.Call localVarCall = queryCall(shopId, storeId, ipRoleId, addressVersion, needRecommend, needIndustryInfo, needIndustryLicense, _callback, customizedParams);
        return localVarCall;

    }

    /**
     * 店铺查询接口
     * 用于服务商或商户查询其自己的店铺信息
     * @param shopId 蚂蚁店铺id (optional)
     * @param storeId 门店编号，表示该门店在该商户角色id(直连pid，间连smid)下，由商户自己定义的外部门店编号 (optional)
     * @param ipRoleId 商户角色id，表示将要开的店属于哪个商户角色。对于直连开店场景，填写商户pid；对于间连开店场景（线上、线下、直付通），填写商户smid (optional)
     * @param addressVersion 行政区划版本，当前可传空值(取默认版本)、2022Q2、UPTODATE(取最新版本)，其中空值默认为：2020Q1版本（ address_version&#x3D;&#39;&#39;或null），想要查看版本是2022年2季度版本则传入:(address_version&#x3D;&#39;2022Q2&#39;)，想要获取最新版本则传入:(address_version &#x3D;&#39;UPTODATE&#39;) (optional)
     * @param needRecommend 门店不置信时，是否需要返回shop_recommend_info (optional)
     * @param needIndustryInfo need_industry_info&#x3D;0时不返回行业信息；need_industry_info&#x3D;1时返回不需要审核的行业信息、审核通过的行业信息 (optional)
     * @param needIndustryLicense need_industry_license&#x3D;0时不返回行业资质；need_industry_license&#x3D;1时返回审核通过的行业资质 (optional)
     * @return AntMerchantExpandShopQueryResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> common response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 请求失败 </td><td>  -  </td></tr>
     </table>
     */
    public AntMerchantExpandShopQueryResponseModel query(String shopId, String storeId, String ipRoleId, String addressVersion, String needRecommend, String needIndustryInfo, String needIndustryLicense) throws ApiException {
        ApiResponse<AntMerchantExpandShopQueryResponseModel> localVarResp = queryWithHttpInfo(shopId, storeId, ipRoleId, addressVersion, needRecommend, needIndustryInfo, needIndustryLicense, null);
        return localVarResp.getData();
    }

    public AntMerchantExpandShopQueryResponseModel query(String shopId, String storeId, String ipRoleId, String addressVersion, String needRecommend, String needIndustryInfo, String needIndustryLicense, CustomizedParams customizedParams) throws ApiException {
        ApiResponse<AntMerchantExpandShopQueryResponseModel> localVarResp = queryWithHttpInfo(shopId, storeId, ipRoleId, addressVersion, needRecommend, needIndustryInfo, needIndustryLicense, customizedParams);
        return localVarResp.getData();
    }

    /**
     * 店铺查询接口
     * 用于服务商或商户查询其自己的店铺信息
     * @param shopId 蚂蚁店铺id (optional)
     * @param storeId 门店编号，表示该门店在该商户角色id(直连pid，间连smid)下，由商户自己定义的外部门店编号 (optional)
     * @param ipRoleId 商户角色id，表示将要开的店属于哪个商户角色。对于直连开店场景，填写商户pid；对于间连开店场景（线上、线下、直付通），填写商户smid (optional)
     * @param addressVersion 行政区划版本，当前可传空值(取默认版本)、2022Q2、UPTODATE(取最新版本)，其中空值默认为：2020Q1版本（ address_version&#x3D;&#39;&#39;或null），想要查看版本是2022年2季度版本则传入:(address_version&#x3D;&#39;2022Q2&#39;)，想要获取最新版本则传入:(address_version &#x3D;&#39;UPTODATE&#39;) (optional)
     * @param needRecommend 门店不置信时，是否需要返回shop_recommend_info (optional)
     * @param needIndustryInfo need_industry_info&#x3D;0时不返回行业信息；need_industry_info&#x3D;1时返回不需要审核的行业信息、审核通过的行业信息 (optional)
     * @param needIndustryLicense need_industry_license&#x3D;0时不返回行业资质；need_industry_license&#x3D;1时返回审核通过的行业资质 (optional)
     * @return ApiResponse&lt;AntMerchantExpandShopQueryResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> common response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 请求失败 </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AntMerchantExpandShopQueryResponseModel> queryWithHttpInfo(String shopId, String storeId, String ipRoleId, String addressVersion, String needRecommend, String needIndustryInfo, String needIndustryLicense, CustomizedParams customizedParams) throws ApiException {
        okhttp3.Call localVarCall = queryValidateBeforeCall(shopId, storeId, ipRoleId, addressVersion, needRecommend, needIndustryInfo, needIndustryLicense, null, customizedParams);
        try {
            Type localVarReturnType = new TypeToken<AntMerchantExpandShopQueryResponseModel>(){}.getType();
            return localVarApiClient.execute(localVarCall, localVarReturnType);
        } catch (ApiException e) {
            try {
                e.setErrorObject(localVarApiClient.getJSON().getGson().fromJson(e.getResponseBody(), new TypeToken<AntMerchantExpandShopQueryDefaultResponse>(){}.getType()));
            } catch (Exception ex) {
                AlipayLogger.logBizWarn(ex);
            }
            throw e;
        }
    }

    /**
     * 店铺查询接口 (asynchronously)
     * 用于服务商或商户查询其自己的店铺信息
     * @param shopId 蚂蚁店铺id (optional)
     * @param storeId 门店编号，表示该门店在该商户角色id(直连pid，间连smid)下，由商户自己定义的外部门店编号 (optional)
     * @param ipRoleId 商户角色id，表示将要开的店属于哪个商户角色。对于直连开店场景，填写商户pid；对于间连开店场景（线上、线下、直付通），填写商户smid (optional)
     * @param addressVersion 行政区划版本，当前可传空值(取默认版本)、2022Q2、UPTODATE(取最新版本)，其中空值默认为：2020Q1版本（ address_version&#x3D;&#39;&#39;或null），想要查看版本是2022年2季度版本则传入:(address_version&#x3D;&#39;2022Q2&#39;)，想要获取最新版本则传入:(address_version &#x3D;&#39;UPTODATE&#39;) (optional)
     * @param needRecommend 门店不置信时，是否需要返回shop_recommend_info (optional)
     * @param needIndustryInfo need_industry_info&#x3D;0时不返回行业信息；need_industry_info&#x3D;1时返回不需要审核的行业信息、审核通过的行业信息 (optional)
     * @param needIndustryLicense need_industry_license&#x3D;0时不返回行业资质；need_industry_license&#x3D;1时返回审核通过的行业资质 (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> common response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 请求失败 </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public okhttp3.Call queryAsync(String shopId, String storeId, String ipRoleId, String addressVersion, String needRecommend, String needIndustryInfo, String needIndustryLicense, final ApiCallback<AntMerchantExpandShopQueryResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = queryValidateBeforeCall(shopId, storeId, ipRoleId, addressVersion, needRecommend, needIndustryInfo, needIndustryLicense, _callback, null);
        Type localVarReturnType = new TypeToken<AntMerchantExpandShopQueryResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    @Deprecated
    public okhttp3.Call queryAsync(String shopId, String storeId, String ipRoleId, String addressVersion, String needRecommend, String needIndustryInfo, String needIndustryLicense, final ApiCallback<AntMerchantExpandShopQueryResponseModel> _callback, CustomizedParams customizedParams) throws ApiException {

        okhttp3.Call localVarCall = queryValidateBeforeCall(shopId, storeId, ipRoleId, addressVersion, needRecommend, needIndustryInfo, needIndustryLicense, _callback, customizedParams);
        Type localVarReturnType = new TypeToken<AntMerchantExpandShopQueryResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
